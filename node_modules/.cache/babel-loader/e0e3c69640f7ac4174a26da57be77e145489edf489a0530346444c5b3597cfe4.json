{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '../utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\nexport function createFilterOptions() {\n  let config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, _ref) => {\n    let {\n      inputValue,\n      getOptionLabel\n    } = _ref;\n    let input = trim ? inputValue.trim() : inputValue;\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n}\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    getOptionSelected = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n      return String(optionLabel);\n    }\n    return optionLabel;\n  };\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n    if (inputValue === newInputValue) {\n      return;\n    }\n    setInputValueState(newInputValue);\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && getOptionSelected(option, value2))) {\n      return false;\n    }\n    return true;\n  }),\n  // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => getOptionSelected(option, value2)));\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const setHighlightedIndex = useEventCallback(_ref2 => {\n    let {\n      event,\n      index,\n      reason = 'auto'\n    } = _ref2;\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n    if (!listboxRef.current) {\n      return;\n    }\n    const prev = listboxRef.current.querySelector('[data-focus]');\n    if (prev) {\n      prev.removeAttribute('data-focus');\n      prev.classList.remove('Mui-focusVisible');\n    }\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n    if (!option) {\n      return;\n    }\n    option.setAttribute('data-focus', 'true');\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(_ref3 => {\n    let {\n      event,\n      diff,\n      direction = 'next',\n      reason = 'auto'\n    } = _ref3;\n    if (!popupOpen) {\n      return;\n    }\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n      if (diff === 'start') {\n        return 0;\n      }\n      if (diff === 'end') {\n        return maxIndex;\n      }\n      const newIndex = highlightedIndexRef.current + diff;\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n        return maxIndex;\n      }\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n        return 0;\n      }\n      return newIndex;\n    };\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => getOptionSelected(currentOption, val)) !== -1) {\n        return;\n      }\n      const itemIndex = findIndex(filteredOptions, optionItem => getOptionSelected(optionItem, valueItem));\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [\n  // Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length,\n  // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n    if (!node) {\n      return;\n    }\n    syncHighlightedIndex();\n  });\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n    setOpenState(true);\n    setInputPristine(true);\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n    setOpenState(false);\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n    setValueState(newValue);\n  };\n  const isTouch = React.useRef(false);\n  const selectNewValue = function (event, option) {\n    let reasonProp = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'select-option';\n    let origin = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 'options';\n    let reason = reasonProp;\n    let newValue = option;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => getOptionSelected(option, val));\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`getOptionSelected\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n      const itemIndex = findIndex(newValue, valueItem => getOptionSelected(option, valueItem));\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n    let nextFocus = index;\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n          break;\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n            if (disabled) {\n              return;\n            }\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n          break;\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n          break;\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n          break;\n        default:\n      }\n    }\n  };\n  const handleFocus = event => {\n    setFocused(true);\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n    handleClose(event, 'blur');\n  };\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'remove-option', {\n      option: value[index]\n    });\n  };\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n  const handleClick = () => {\n    inputRef.current.focus();\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n    firstFocus.current = false;\n  };\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n          indexBy.set(group, true);\n        }\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n      return acc;\n    }, []);\n  }\n  return {\n    getRootProps: function () {\n      let other = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return _extends({\n        'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n        role: 'combobox',\n        'aria-expanded': listboxAvailable\n      }, other, {\n        onKeyDown: handleKeyDown(other),\n        onMouseDown: handleMouseDown,\n        onClick: handleClick\n      });\n    },\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: _ref4 => {\n      let {\n        index\n      } = _ref4;\n      return {\n        key: index,\n        'data-tag-index': index,\n        tabIndex: -1,\n        onDelete: handleTagDelete(index)\n      };\n    },\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: _ref5 => {\n      let {\n        index,\n        option\n      } = _ref5;\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && getOptionSelected(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}","map":{"version":3,"names":["_extends","React","setRef","useEventCallback","useControlled","unstable_useId","useId","stripDiacritics","string","normalize","replace","createFilterOptions","config","ignoreAccents","ignoreCase","limit","matchFrom","stringify","trim","options","inputValue","getOptionLabel","input","toLowerCase","filteredOptions","filter","option","candidate","indexOf","slice","findIndex","array","comp","i","length","defaultFilterOptions","pageSize","useAutocomplete","props","autoComplete","autoHighlight","autoSelect","blurOnSelect","clearOnBlur","freeSolo","clearOnEscape","componentName","defaultValue","multiple","disableClearable","disableCloseOnSelect","disabledItemsFocusable","disableListWrap","filterOptions","filterSelectedOptions","getOptionDisabled","getOptionLabelProp","_option$label","label","getOptionSelected","value","groupBy","handleHomeEndKeys","id","idProp","includeInputInList","inputValueProp","onChange","onClose","onHighlightChange","onInputChange","onOpen","open","openProp","openOnFocus","selectOnFocus","valueProp","optionLabel","process","env","NODE_ENV","erroneousReturn","undefined","console","error","JSON","String","ignoreFocus","useRef","firstFocus","inputRef","listboxRef","anchorEl","setAnchorEl","useState","focusedTag","setFocusedTag","defaultHighlighted","highlightedIndexRef","setValueState","controlled","default","name","setInputValueState","state","focused","setFocused","resetInputValue","event","newValue","newInputValue","useEffect","setOpenState","inputPristine","setInputPristine","inputValueIsSelectedValue","popupOpen","some","value2","listboxAvailable","missingValue","warn","join","focusTag","tagToFocus","current","focus","querySelector","validOptionIndex","index","direction","nextFocus","nextFocusDisabled","disabled","getAttribute","hasAttribute","setHighlightedIndex","reason","removeAttribute","setAttribute","prev","classList","remove","listboxNode","parentElement","scrollTop","add","scrollHeight","clientHeight","element","scrollBottom","elementBottom","offsetTop","offsetHeight","changeHighlightedIndex","diff","getNextIndex","maxIndex","newIndex","Math","abs","nextIndex","setSelectionRange","syncHighlightedIndex","useCallback","valueItem","currentOption","val","itemIndex","optionItem","handleListboxRef","node","nodeName","handleOpen","handleClose","handleValue","details","isTouch","selectNewValue","reasonProp","origin","Array","isArray","matches","push","splice","ctrlKey","metaKey","blur","validTagIndex","handleFocusTag","nextTag","handleClear","handleKeyDown","other","onKeyDown","defaultMuiPrevented","key","which","preventDefault","stopPropagation","handleFocus","handleBlur","contains","document","activeElement","handleInputChange","target","handleOptionMouseOver","Number","currentTarget","handleOptionTouchStart","handleOptionClick","handleTagDelete","handlePopupIndicator","handleMouseDown","handleClick","selectionEnd","selectionStart","select","handleInputMouseDown","dirty","groupedOptions","indexBy","Map","reduce","acc","group","get","set","getRootProps","role","onMouseDown","onClick","getInputLabelProps","htmlFor","getInputProps","onBlur","onFocus","ref","autoCapitalize","spellCheck","getClearProps","tabIndex","getPopupIndicatorProps","getTagProps","onDelete","getListboxProps","getOptionProps","selected","onMouseOver","onTouchStart"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/useAutocomplete/useAutocomplete.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable no-constant-condition */\nimport * as React from 'react';\nimport { setRef, useEventCallback, useControlled, unstable_useId as useId } from '../utils'; // https://stackoverflow.com/questions/990904/remove-accents-diacritics-in-a-string-in-javascript\n// Give up on IE11 support for this feature\n\nfunction stripDiacritics(string) {\n  return typeof string.normalize !== 'undefined' ? string.normalize('NFD').replace(/[\\u0300-\\u036f]/g, '') : string;\n}\n\nexport function createFilterOptions(config = {}) {\n  const {\n    ignoreAccents = true,\n    ignoreCase = true,\n    limit,\n    matchFrom = 'any',\n    stringify,\n    trim = false\n  } = config;\n  return (options, {\n    inputValue,\n    getOptionLabel\n  }) => {\n    let input = trim ? inputValue.trim() : inputValue;\n\n    if (ignoreCase) {\n      input = input.toLowerCase();\n    }\n\n    if (ignoreAccents) {\n      input = stripDiacritics(input);\n    }\n\n    const filteredOptions = options.filter(option => {\n      let candidate = (stringify || getOptionLabel)(option);\n\n      if (ignoreCase) {\n        candidate = candidate.toLowerCase();\n      }\n\n      if (ignoreAccents) {\n        candidate = stripDiacritics(candidate);\n      }\n\n      return matchFrom === 'start' ? candidate.indexOf(input) === 0 : candidate.indexOf(input) > -1;\n    });\n    return typeof limit === 'number' ? filteredOptions.slice(0, limit) : filteredOptions;\n  };\n} // To replace with .findIndex() once we stop IE11 support.\n\nfunction findIndex(array, comp) {\n  for (let i = 0; i < array.length; i += 1) {\n    if (comp(array[i])) {\n      return i;\n    }\n  }\n\n  return -1;\n}\n\nconst defaultFilterOptions = createFilterOptions(); // Number of options to jump in list box when pageup and pagedown keys are used.\n\nconst pageSize = 5;\nexport default function useAutocomplete(props) {\n  const {\n    autoComplete = false,\n    autoHighlight = false,\n    autoSelect = false,\n    blurOnSelect = false,\n    clearOnBlur = !props.freeSolo,\n    clearOnEscape = false,\n    componentName = 'useAutocomplete',\n    defaultValue = props.multiple ? [] : null,\n    disableClearable = false,\n    disableCloseOnSelect = false,\n    disabledItemsFocusable = false,\n    disableListWrap = false,\n    filterOptions = defaultFilterOptions,\n    filterSelectedOptions = false,\n    freeSolo = false,\n    getOptionDisabled,\n    getOptionLabel: getOptionLabelProp = option => {\n      var _option$label;\n\n      return (_option$label = option.label) !== null && _option$label !== void 0 ? _option$label : option;\n    },\n    getOptionSelected = (option, value) => option === value,\n    groupBy,\n    handleHomeEndKeys = !props.freeSolo,\n    id: idProp,\n    includeInputInList = false,\n    inputValue: inputValueProp,\n    multiple = false,\n    onChange,\n    onClose,\n    onHighlightChange,\n    onInputChange,\n    onOpen,\n    open: openProp,\n    openOnFocus = false,\n    options,\n    selectOnFocus = !props.freeSolo,\n    value: valueProp\n  } = props;\n  const id = useId(idProp);\n  let getOptionLabel = getOptionLabelProp;\n\n  getOptionLabel = option => {\n    const optionLabel = getOptionLabelProp(option);\n\n    if (typeof optionLabel !== 'string') {\n      if (process.env.NODE_ENV !== 'production') {\n        const erroneousReturn = optionLabel === undefined ? 'undefined' : `${typeof optionLabel} (${optionLabel})`;\n        console.error(`Material-UI: The \\`getOptionLabel\\` method of ${componentName} returned ${erroneousReturn} instead of a string for ${JSON.stringify(option)}.`);\n      }\n\n      return String(optionLabel);\n    }\n\n    return optionLabel;\n  };\n\n  const ignoreFocus = React.useRef(false);\n  const firstFocus = React.useRef(true);\n  const inputRef = React.useRef(null);\n  const listboxRef = React.useRef(null);\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const [focusedTag, setFocusedTag] = React.useState(-1);\n  const defaultHighlighted = autoHighlight ? 0 : -1;\n  const highlightedIndexRef = React.useRef(defaultHighlighted);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: componentName\n  });\n  const [inputValue, setInputValueState] = useControlled({\n    controlled: inputValueProp,\n    default: '',\n    name: componentName,\n    state: 'inputValue'\n  });\n  const [focused, setFocused] = React.useState(false);\n  const resetInputValue = useEventCallback((event, newValue) => {\n    let newInputValue;\n\n    if (multiple) {\n      newInputValue = '';\n    } else if (newValue == null) {\n      newInputValue = '';\n    } else {\n      const optionLabel = getOptionLabel(newValue);\n      newInputValue = typeof optionLabel === 'string' ? optionLabel : '';\n    }\n\n    if (inputValue === newInputValue) {\n      return;\n    }\n\n    setInputValueState(newInputValue);\n\n    if (onInputChange) {\n      onInputChange(event, newInputValue, 'reset');\n    }\n  });\n  React.useEffect(() => {\n    resetInputValue(null, value);\n  }, [value, resetInputValue]);\n  const [open, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: componentName,\n    state: 'open'\n  });\n  const [inputPristine, setInputPristine] = React.useState(true);\n  const inputValueIsSelectedValue = !multiple && value != null && inputValue === getOptionLabel(value);\n  const popupOpen = open;\n  const filteredOptions = popupOpen ? filterOptions(options.filter(option => {\n    if (filterSelectedOptions && (multiple ? value : [value]).some(value2 => value2 !== null && getOptionSelected(option, value2))) {\n      return false;\n    }\n\n    return true;\n  }), // we use the empty string to manipulate `filterOptions` to not filter any options\n  // i.e. the filter predicate always returns true\n  {\n    inputValue: inputValueIsSelectedValue && inputPristine ? '' : inputValue,\n    getOptionLabel\n  }) : [];\n  const listboxAvailable = open && filteredOptions.length > 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (value !== null && !freeSolo && options.length > 0) {\n      const missingValue = (multiple ? value : [value]).filter(value2 => !options.some(option => getOptionSelected(option, value2)));\n\n      if (missingValue.length > 0) {\n        console.warn([`Material-UI: The value provided to ${componentName} is invalid.`, `None of the options match with \\`${missingValue.length > 1 ? JSON.stringify(missingValue) : JSON.stringify(missingValue[0])}\\`.`, 'You can use the `getOptionSelected` prop to customize the equality test.'].join('\\n'));\n      }\n    }\n  }\n\n  const focusTag = useEventCallback(tagToFocus => {\n    if (tagToFocus === -1) {\n      inputRef.current.focus();\n    } else {\n      anchorEl.querySelector(`[data-tag-index=\"${tagToFocus}\"]`).focus();\n    }\n  }); // Ensure the focusedTag is never inconsistent\n\n  React.useEffect(() => {\n    if (multiple && focusedTag > value.length - 1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    }\n  }, [value, multiple, focusedTag, focusTag]);\n\n  function validOptionIndex(index, direction) {\n    if (!listboxRef.current || index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === filteredOptions.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = listboxRef.current.querySelector(`[data-option-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      const nextFocusDisabled = disabledItemsFocusable ? false : !option || option.disabled || option.getAttribute('aria-disabled') === 'true';\n\n      if (option && !option.hasAttribute('tabindex') || nextFocusDisabled) {\n        // Move to the next element.\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const setHighlightedIndex = useEventCallback(({\n    event,\n    index,\n    reason = 'auto'\n  }) => {\n    highlightedIndexRef.current = index; // does the index exist?\n\n    if (index === -1) {\n      inputRef.current.removeAttribute('aria-activedescendant');\n    } else {\n      inputRef.current.setAttribute('aria-activedescendant', `${id}-option-${index}`);\n    }\n\n    if (onHighlightChange) {\n      onHighlightChange(event, index === -1 ? null : filteredOptions[index], reason);\n    }\n\n    if (!listboxRef.current) {\n      return;\n    }\n\n    const prev = listboxRef.current.querySelector('[data-focus]');\n\n    if (prev) {\n      prev.removeAttribute('data-focus');\n      prev.classList.remove('Mui-focusVisible');\n    }\n\n    const listboxNode = listboxRef.current.parentElement.querySelector('[role=\"listbox\"]'); // \"No results\"\n\n    if (!listboxNode) {\n      return;\n    }\n\n    if (index === -1) {\n      listboxNode.scrollTop = 0;\n      return;\n    }\n\n    const option = listboxRef.current.querySelector(`[data-option-index=\"${index}\"]`);\n\n    if (!option) {\n      return;\n    }\n\n    option.setAttribute('data-focus', 'true');\n\n    if (reason === 'keyboard') {\n      option.classList.add('Mui-focusVisible');\n    } // Scroll active descendant into view.\n    // Logic copied from https://www.w3.org/TR/wai-aria-practices/examples/listbox/js/listbox.js\n    //\n    // Consider this API instead once it has a better browser support:\n    // .scrollIntoView({ scrollMode: 'if-needed', block: 'nearest' });\n\n\n    if (listboxNode.scrollHeight > listboxNode.clientHeight && reason !== 'mouse') {\n      const element = option;\n      const scrollBottom = listboxNode.clientHeight + listboxNode.scrollTop;\n      const elementBottom = element.offsetTop + element.offsetHeight;\n\n      if (elementBottom > scrollBottom) {\n        listboxNode.scrollTop = elementBottom - listboxNode.clientHeight;\n      } else if (element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0) < listboxNode.scrollTop) {\n        listboxNode.scrollTop = element.offsetTop - element.offsetHeight * (groupBy ? 1.3 : 0);\n      }\n    }\n  });\n  const changeHighlightedIndex = useEventCallback(({\n    event,\n    diff,\n    direction = 'next',\n    reason = 'auto'\n  }) => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const getNextIndex = () => {\n      const maxIndex = filteredOptions.length - 1;\n\n      if (diff === 'reset') {\n        return defaultHighlighted;\n      }\n\n      if (diff === 'start') {\n        return 0;\n      }\n\n      if (diff === 'end') {\n        return maxIndex;\n      }\n\n      const newIndex = highlightedIndexRef.current + diff;\n\n      if (newIndex < 0) {\n        if (newIndex === -1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap && highlightedIndexRef.current !== -1 || Math.abs(diff) > 1) {\n          return 0;\n        }\n\n        return maxIndex;\n      }\n\n      if (newIndex > maxIndex) {\n        if (newIndex === maxIndex + 1 && includeInputInList) {\n          return -1;\n        }\n\n        if (disableListWrap || Math.abs(diff) > 1) {\n          return maxIndex;\n        }\n\n        return 0;\n      }\n\n      return newIndex;\n    };\n\n    const nextIndex = validOptionIndex(getNextIndex(), direction);\n    setHighlightedIndex({\n      index: nextIndex,\n      reason,\n      event\n    }); // Sync the content of the input with the highlighted option.\n\n    if (autoComplete && diff !== 'reset') {\n      if (nextIndex === -1) {\n        inputRef.current.value = inputValue;\n      } else {\n        const option = getOptionLabel(filteredOptions[nextIndex]);\n        inputRef.current.value = option; // The portion of the selected suggestion that has not been typed by the user,\n        // a completion string, appears inline after the input cursor in the textbox.\n\n        const index = option.toLowerCase().indexOf(inputValue.toLowerCase());\n\n        if (index === 0 && inputValue.length > 0) {\n          inputRef.current.setSelectionRange(inputValue.length, option.length);\n        }\n      }\n    }\n  });\n  const syncHighlightedIndex = React.useCallback(() => {\n    if (!popupOpen) {\n      return;\n    }\n\n    const valueItem = multiple ? value[0] : value; // The popup is empty, reset\n\n    if (filteredOptions.length === 0 || valueItem == null) {\n      changeHighlightedIndex({\n        diff: 'reset'\n      });\n      return;\n    }\n\n    if (!listboxRef.current) {\n      return;\n    } // Synchronize the value with the highlighted index\n\n\n    if (valueItem != null) {\n      const currentOption = filteredOptions[highlightedIndexRef.current]; // Keep the current highlighted index if possible\n\n      if (multiple && currentOption && findIndex(value, val => getOptionSelected(currentOption, val)) !== -1) {\n        return;\n      }\n\n      const itemIndex = findIndex(filteredOptions, optionItem => getOptionSelected(optionItem, valueItem));\n\n      if (itemIndex === -1) {\n        changeHighlightedIndex({\n          diff: 'reset'\n        });\n      } else {\n        setHighlightedIndex({\n          index: itemIndex\n        });\n      }\n\n      return;\n    } // Prevent the highlighted index to leak outside the boundaries.\n\n\n    if (highlightedIndexRef.current >= filteredOptions.length - 1) {\n      setHighlightedIndex({\n        index: filteredOptions.length - 1\n      });\n      return;\n    } // Restore the focus to the previous index.\n\n\n    setHighlightedIndex({\n      index: highlightedIndexRef.current\n    }); // Ignore filteredOptions (and options, getOptionSelected, getOptionLabel) not to break the scroll position\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [// Only sync the highlighted index when the option switch between empty and not\n  filteredOptions.length, // Don't sync the highlighted index with the value when multiple\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  multiple ? false : value, filterSelectedOptions, changeHighlightedIndex, setHighlightedIndex, popupOpen, inputValue, multiple]);\n  const handleListboxRef = useEventCallback(node => {\n    setRef(listboxRef, node);\n\n    if (!node) {\n      return;\n    }\n\n    syncHighlightedIndex();\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!inputRef.current || inputRef.current.nodeName !== 'INPUT') {\n        console.error([`Material-UI: Unable to find the input element. It was resolved to ${inputRef.current} while an HTMLInputElement was expected.`, `Instead, ${componentName} expects an input element.`, '', componentName === 'useAutocomplete' ? 'Make sure you have binded getInputProps correctly and that the normal ref/effect resolutions order is guaranteed.' : 'Make sure you have customized the input component correctly.'].join('\\n'));\n      }\n    }, [componentName]);\n  }\n\n  React.useEffect(() => {\n    syncHighlightedIndex();\n  }, [syncHighlightedIndex]);\n\n  const handleOpen = event => {\n    if (open) {\n      return;\n    }\n\n    setOpenState(true);\n    setInputPristine(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = (event, reason) => {\n    if (!open) {\n      return;\n    }\n\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event, reason);\n    }\n  };\n\n  const handleValue = (event, newValue, reason, details) => {\n    if (value === newValue) {\n      return;\n    }\n\n    if (onChange) {\n      onChange(event, newValue, reason, details);\n    }\n\n    setValueState(newValue);\n  };\n\n  const isTouch = React.useRef(false);\n\n  const selectNewValue = (event, option, reasonProp = 'select-option', origin = 'options') => {\n    let reason = reasonProp;\n    let newValue = option;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n\n      if (process.env.NODE_ENV !== 'production') {\n        const matches = newValue.filter(val => getOptionSelected(option, val));\n\n        if (matches.length > 1) {\n          console.error([`Material-UI: The \\`getOptionSelected\\` method of ${componentName} do not handle the arguments correctly.`, `The component expects a single value to match a given option but found ${matches.length} matches.`].join('\\n'));\n        }\n      }\n\n      const itemIndex = findIndex(newValue, valueItem => getOptionSelected(option, valueItem));\n\n      if (itemIndex === -1) {\n        newValue.push(option);\n      } else if (origin !== 'freeSolo') {\n        newValue.splice(itemIndex, 1);\n        reason = 'remove-option';\n      }\n    }\n\n    resetInputValue(event, newValue);\n    handleValue(event, newValue, reason, {\n      option\n    });\n\n    if (!disableCloseOnSelect && !event.ctrlKey && !event.metaKey) {\n      handleClose(event, reason);\n    }\n\n    if (blurOnSelect === true || blurOnSelect === 'touch' && isTouch.current || blurOnSelect === 'mouse' && !isTouch.current) {\n      inputRef.current.blur();\n    }\n  };\n\n  function validTagIndex(index, direction) {\n    if (index === -1) {\n      return -1;\n    }\n\n    let nextFocus = index;\n\n    while (true) {\n      // Out of range\n      if (direction === 'next' && nextFocus === value.length || direction === 'previous' && nextFocus === -1) {\n        return -1;\n      }\n\n      const option = anchorEl.querySelector(`[data-tag-index=\"${nextFocus}\"]`); // Same logic as MenuList.js\n\n      if (!option || !option.hasAttribute('tabindex') || option.disabled || option.getAttribute('aria-disabled') === 'true') {\n        nextFocus += direction === 'next' ? 1 : -1;\n      } else {\n        return nextFocus;\n      }\n    }\n  }\n\n  const handleFocusTag = (event, direction) => {\n    if (!multiple) {\n      return;\n    }\n\n    handleClose(event, 'toggleInput');\n    let nextTag = focusedTag;\n\n    if (focusedTag === -1) {\n      if (inputValue === '' && direction === 'previous') {\n        nextTag = value.length - 1;\n      }\n    } else {\n      nextTag += direction === 'next' ? 1 : -1;\n\n      if (nextTag < 0) {\n        nextTag = 0;\n      }\n\n      if (nextTag === value.length) {\n        nextTag = -1;\n      }\n    }\n\n    nextTag = validTagIndex(nextTag, direction);\n    setFocusedTag(nextTag);\n    focusTag(nextTag);\n  };\n\n  const handleClear = event => {\n    ignoreFocus.current = true;\n    setInputValueState('');\n\n    if (onInputChange) {\n      onInputChange(event, '', 'clear');\n    }\n\n    handleValue(event, multiple ? [] : null, 'clear');\n  };\n\n  const handleKeyDown = other => event => {\n    if (other.onKeyDown) {\n      other.onKeyDown(event);\n    }\n\n    if (event.defaultMuiPrevented) {\n      return;\n    }\n\n    if (focusedTag !== -1 && ['ArrowLeft', 'ArrowRight'].indexOf(event.key) === -1) {\n      setFocusedTag(-1);\n      focusTag(-1);\n    } // Wait until IME is settled.\n\n\n    if (event.which !== 229) {\n      switch (event.key) {\n        case 'Home':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'start',\n              direction: 'next',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'End':\n          if (popupOpen && handleHomeEndKeys) {\n            // Prevent scroll of the page\n            event.preventDefault();\n            changeHighlightedIndex({\n              diff: 'end',\n              direction: 'previous',\n              reason: 'keyboard',\n              event\n            });\n          }\n\n          break;\n\n        case 'PageUp':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -pageSize,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'PageDown':\n          // Prevent scroll of the page\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: pageSize,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowDown':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: 1,\n            direction: 'next',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowUp':\n          // Prevent cursor move\n          event.preventDefault();\n          changeHighlightedIndex({\n            diff: -1,\n            direction: 'previous',\n            reason: 'keyboard',\n            event\n          });\n          handleOpen(event);\n          break;\n\n        case 'ArrowLeft':\n          handleFocusTag(event, 'previous');\n          break;\n\n        case 'ArrowRight':\n          handleFocusTag(event, 'next');\n          break;\n\n        case 'Enter':\n          if (highlightedIndexRef.current !== -1 && popupOpen) {\n            const option = filteredOptions[highlightedIndexRef.current];\n            const disabled = getOptionDisabled ? getOptionDisabled(option) : false; // Avoid early form validation, let the end-users continue filling the form.\n\n            event.preventDefault();\n\n            if (disabled) {\n              return;\n            }\n\n            selectNewValue(event, option, 'select-option'); // Move the selection to the end.\n\n            if (autoComplete) {\n              inputRef.current.setSelectionRange(inputRef.current.value.length, inputRef.current.value.length);\n            }\n          } else if (freeSolo && inputValue !== '' && inputValueIsSelectedValue === false) {\n            if (multiple) {\n              // Allow people to add new values before they submit the form.\n              event.preventDefault();\n            }\n\n            selectNewValue(event, inputValue, 'create-option', 'freeSolo');\n          }\n\n          break;\n\n        case 'Escape':\n          if (popupOpen) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClose(event, 'escape');\n          } else if (clearOnEscape && (inputValue !== '' || multiple && value.length > 0)) {\n            // Avoid Opera to exit fullscreen mode.\n            event.preventDefault(); // Avoid the Modal to handle the event.\n\n            event.stopPropagation();\n            handleClear(event);\n          }\n\n          break;\n\n        case 'Backspace':\n          if (multiple && inputValue === '' && value.length > 0) {\n            const index = focusedTag === -1 ? value.length - 1 : focusedTag;\n            const newValue = value.slice();\n            newValue.splice(index, 1);\n            handleValue(event, newValue, 'remove-option', {\n              option: value[index]\n            });\n          }\n\n          break;\n\n        default:\n      }\n    }\n  };\n\n  const handleFocus = event => {\n    setFocused(true);\n\n    if (openOnFocus && !ignoreFocus.current) {\n      handleOpen(event);\n    }\n  };\n\n  const handleBlur = event => {\n    // Ignore the event when using the scrollbar with IE11\n    if (listboxRef.current !== null && listboxRef.current.parentElement.contains(document.activeElement)) {\n      inputRef.current.focus();\n      return;\n    }\n\n    setFocused(false);\n    firstFocus.current = true;\n    ignoreFocus.current = false;\n\n    if (autoSelect && highlightedIndexRef.current !== -1 && popupOpen) {\n      selectNewValue(event, filteredOptions[highlightedIndexRef.current], 'blur');\n    } else if (autoSelect && freeSolo && inputValue !== '') {\n      selectNewValue(event, inputValue, 'blur', 'freeSolo');\n    } else if (clearOnBlur) {\n      resetInputValue(event, value);\n    }\n\n    handleClose(event, 'blur');\n  };\n\n  const handleInputChange = event => {\n    const newValue = event.target.value;\n\n    if (inputValue !== newValue) {\n      setInputValueState(newValue);\n      setInputPristine(false);\n\n      if (onInputChange) {\n        onInputChange(event, newValue, 'input');\n      }\n    }\n\n    if (newValue === '') {\n      if (!disableClearable && !multiple) {\n        handleValue(event, null, 'clear');\n      }\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleOptionMouseOver = event => {\n    setHighlightedIndex({\n      event,\n      index: Number(event.currentTarget.getAttribute('data-option-index')),\n      reason: 'mouse'\n    });\n  };\n\n  const handleOptionTouchStart = () => {\n    isTouch.current = true;\n  };\n\n  const handleOptionClick = event => {\n    const index = Number(event.currentTarget.getAttribute('data-option-index'));\n    selectNewValue(event, filteredOptions[index], 'select-option');\n    isTouch.current = false;\n  };\n\n  const handleTagDelete = index => event => {\n    const newValue = value.slice();\n    newValue.splice(index, 1);\n    handleValue(event, newValue, 'remove-option', {\n      option: value[index]\n    });\n  };\n\n  const handlePopupIndicator = event => {\n    if (open) {\n      handleClose(event, 'toggleInput');\n    } else {\n      handleOpen(event);\n    }\n  }; // Prevent input blur when interacting with the combobox\n\n\n  const handleMouseDown = event => {\n    if (event.target.getAttribute('id') !== id) {\n      event.preventDefault();\n    }\n  }; // Focus the input when interacting with the combobox\n\n\n  const handleClick = () => {\n    inputRef.current.focus();\n\n    if (selectOnFocus && firstFocus.current && inputRef.current.selectionEnd - inputRef.current.selectionStart === 0) {\n      inputRef.current.select();\n    }\n\n    firstFocus.current = false;\n  };\n\n  const handleInputMouseDown = event => {\n    if (inputValue === '' || !open) {\n      handlePopupIndicator(event);\n    }\n  };\n\n  let dirty = freeSolo && inputValue.length > 0;\n  dirty = dirty || (multiple ? value.length > 0 : value !== null);\n  let groupedOptions = filteredOptions;\n\n  if (groupBy) {\n    // used to keep track of key and indexes in the result array\n    const indexBy = new Map();\n    let warn = false;\n    groupedOptions = filteredOptions.reduce((acc, option, index) => {\n      const group = groupBy(option);\n\n      if (acc.length > 0 && acc[acc.length - 1].group === group) {\n        acc[acc.length - 1].options.push(option);\n      } else {\n        if (process.env.NODE_ENV !== 'production') {\n          if (indexBy.get(group) && !warn) {\n            console.warn(`Material-UI: The options provided combined with the \\`groupBy\\` method of ${componentName} returns duplicated headers.`, 'You can solve the issue by sorting the options with the output of `groupBy`.');\n            warn = true;\n          }\n\n          indexBy.set(group, true);\n        }\n\n        acc.push({\n          key: index,\n          index,\n          group,\n          options: [option]\n        });\n      }\n\n      return acc;\n    }, []);\n  }\n\n  return {\n    getRootProps: (other = {}) => _extends({\n      'aria-owns': listboxAvailable ? `${id}-listbox` : null,\n      role: 'combobox',\n      'aria-expanded': listboxAvailable\n    }, other, {\n      onKeyDown: handleKeyDown(other),\n      onMouseDown: handleMouseDown,\n      onClick: handleClick\n    }),\n    getInputLabelProps: () => ({\n      id: `${id}-label`,\n      htmlFor: id\n    }),\n    getInputProps: () => ({\n      id,\n      value: inputValue,\n      onBlur: handleBlur,\n      onFocus: handleFocus,\n      onChange: handleInputChange,\n      onMouseDown: handleInputMouseDown,\n      // if open then this is handled imperativeley so don't let react override\n      // only have an opinion about this when closed\n      'aria-activedescendant': popupOpen ? '' : null,\n      'aria-autocomplete': autoComplete ? 'both' : 'list',\n      'aria-controls': listboxAvailable ? `${id}-listbox` : null,\n      // Disable browser's suggestion that might overlap with the popup.\n      // Handle autocomplete but not autofill.\n      autoComplete: 'off',\n      ref: inputRef,\n      autoCapitalize: 'none',\n      spellCheck: 'false'\n    }),\n    getClearProps: () => ({\n      tabIndex: -1,\n      onClick: handleClear\n    }),\n    getPopupIndicatorProps: () => ({\n      tabIndex: -1,\n      onClick: handlePopupIndicator\n    }),\n    getTagProps: ({\n      index\n    }) => ({\n      key: index,\n      'data-tag-index': index,\n      tabIndex: -1,\n      onDelete: handleTagDelete(index)\n    }),\n    getListboxProps: () => ({\n      role: 'listbox',\n      id: `${id}-listbox`,\n      'aria-labelledby': `${id}-label`,\n      ref: handleListboxRef,\n      onMouseDown: event => {\n        // Prevent blur\n        event.preventDefault();\n      }\n    }),\n    getOptionProps: ({\n      index,\n      option\n    }) => {\n      const selected = (multiple ? value : [value]).some(value2 => value2 != null && getOptionSelected(option, value2));\n      const disabled = getOptionDisabled ? getOptionDisabled(option) : false;\n      return {\n        key: getOptionLabel(option),\n        tabIndex: -1,\n        role: 'option',\n        id: `${id}-option-${index}`,\n        onMouseOver: handleOptionMouseOver,\n        onClick: handleOptionClick,\n        onTouchStart: handleOptionTouchStart,\n        'data-option-index': index,\n        'aria-disabled': disabled,\n        'aria-selected': selected\n      };\n    },\n    id,\n    inputValue,\n    value,\n    dirty,\n    popupOpen,\n    focused: focused || focusedTag !== -1,\n    anchorEl,\n    setAnchorEl,\n    focusedTag,\n    groupedOptions\n  };\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}