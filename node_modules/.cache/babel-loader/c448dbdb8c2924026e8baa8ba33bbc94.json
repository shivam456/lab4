{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/lab-4-react/src/components/medication/MedicationList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, Table, TableBody, TableCell, TableHead, TableSortLabel, TableRow, Typography, Tooltip } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MedicationList = meds => {\n  _s();\n\n  const [selectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const medications = Object.values(meds.meds);\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: /*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 1050\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Medication Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 30,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Active Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                enterDelay: 300,\n                title: \"Sort\",\n                children: /*#__PURE__*/_jsxDEV(TableSortLabel, {\n                  children: \"Date Prescribed\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: medications.map(med => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              selected: selectedCustomerIds.indexOf(med.id) !== -1,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    alignItems: 'center',\n                    display: 'flex'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    variant: \"body1\",\n                    children: med.medicationCodeableConcept.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 60,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: med.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: moment(med.authoredOn).format('DD/MM/YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, med.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}; // CustomerListResults.propTypes = {\n//   customers: PropTypes.array.isRequired\n// };\n\n\n_s(MedicationList, \"ERtK4z7+5tgICF4zEX+jtLQ2L7s=\");\n\n_c = MedicationList;\nexport default MedicationList;\n\nvar _c;\n\n$RefreshReg$(_c, \"MedicationList\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/lab-4-react/src/components/medication/MedicationList.js"],"names":["useState","moment","PerfectScrollbar","Box","Card","Table","TableBody","TableCell","TableHead","TableSortLabel","TableRow","Typography","Tooltip","MedicationList","meds","selectedCustomerIds","limit","setLimit","page","setPage","medications","Object","values","minWidth","map","med","indexOf","id","alignItems","display","medicationCodeableConcept","text","status","authoredOn","format"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AACA,SACEC,GADF,EAEEC,IAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,SALF,EAMEC,SANF,EAOEC,cAPF,EAQEC,QARF,EASEC,UATF,EAUEC,OAVF,QAWO,mBAXP;;;AAaA,MAAMC,cAAc,GAAIC,IAAD,IAAU;AAAA;;AAC/B,QAAM,CAACC,mBAAD,IAAwBf,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACgB,KAAD,EAAQC,QAAR,IAAoBjB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACkB,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,CAAD,CAAhC;AACA,QAAMoB,WAAW,GAAGC,MAAM,CAACC,MAAP,CAAcR,IAAI,CAACA,IAAnB,CAApB;AAEA,sBACE,QAAC,IAAD;AAAA,2BACE,QAAC,gBAAD;AAAA,6BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE;AAAES,UAAAA,QAAQ,EAAE;AAAZ,SAAT;AAAA,+BACE,QAAC,KAAD;AAAA,kCACE,QAAC,SAAD;AAAA,mCACE,QAAC,QAAD;AAAA,sCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAIE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,eAOE,QAAC,OAAD;AACE,gBAAA,UAAU,EAAE,GADd;AAEE,gBAAA,KAAK,EAAC,MAFR;AAAA,uCAIA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA,sBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAmBE,QAAC,SAAD;AAAA,sBACGH,WAAW,CAACI,GAAZ,CAAiBC,GAAD,iBACf,QAAC,QAAD;AACE,cAAA,KAAK,MADP;AAGE,cAAA,QAAQ,EAAEV,mBAAmB,CAACW,OAApB,CAA4BD,GAAG,CAACE,EAAhC,MAAwC,CAAC,CAHrD;AAAA,sCAKE,QAAC,SAAD;AAAA,uCACE,QAAC,GAAD;AACE,kBAAA,EAAE,EAAE;AACFC,oBAAAA,UAAU,EAAE,QADV;AAEFC,oBAAAA,OAAO,EAAE;AAFP,mBADN;AAAA,yCAME,QAAC,UAAD;AACE,oBAAA,KAAK,EAAC,aADR;AAEE,oBAAA,OAAO,EAAC,OAFV;AAAA,8BAIGJ,GAAG,CAACK,yBAAJ,CAA8BC;AAJjC;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eAoBE,QAAC,SAAD;AAAA,0BACGN,GAAG,CAACO;AADP;AAAA;AAAA;AAAA;AAAA,sBApBF,eAuBE,QAAC,SAAD;AAAA,0BACG/B,MAAM,CAACwB,GAAG,CAACQ,UAAL,CAAN,CAAuBC,MAAvB,CAA8B,YAA9B;AADH;AAAA;AAAA;AAAA;AAAA,sBAvBF;AAAA,eAEOT,GAAG,CAACE,EAFX;AAAA;AAAA;AAAA;AAAA,oBADD;AADH;AAAA;AAAA;AAAA;AAAA,kBAnBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4DD,CAlED,C,CAoEA;AACA;AACA;;;GAtEMd,c;;KAAAA,c;AAwEN,eAAeA,cAAf","sourcesContent":["import { useState } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableSortLabel,\n  TableRow,\n  Typography,\n  Tooltip\n} from '@material-ui/core';\n\nconst MedicationList = (meds) => {\n  const [selectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const medications = Object.values(meds.meds);\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Medication Name\n                </TableCell>\n                <TableCell>\n                  Active Status\n                </TableCell>\n                <Tooltip\n                  enterDelay={300}\n                  title=\"Sort\"\n                >\n                <TableSortLabel>\n                  Date Prescribed\n                </TableSortLabel>\n                </Tooltip>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {medications.map((med) => (\n                <TableRow\n                  hover\n                  key={med.id}\n                  selected={selectedCustomerIds.indexOf(med.id) !== -1}\n                >\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {med.medicationCodeableConcept.text}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {med.status}\n                  </TableCell>\n                  <TableCell>\n                    {moment(med.authoredOn).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n\n    </Card>\n  );\n};\n\n// CustomerListResults.propTypes = {\n//   customers: PropTypes.array.isRequired\n// };\n\nexport default MedicationList;\n"]},"metadata":{},"sourceType":"module"}