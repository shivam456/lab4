{"ast":null,"code":"\"use strict\";\n\n/*\n * This file contains some shared functions. They are used by other modules, but\n * are defined here so that tests can import this library and test them.\n */\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertJsonPatch = exports.assert = exports.getTargetWindow = exports.getPatientParam = exports.byCodes = exports.byCode = exports.getAccessTokenExpiration = exports.jwtDecode = exports.randomString = exports.absolute = exports.makeArray = exports.setPath = exports.getPath = exports.fetchConformanceStatement = exports.getAndCache = exports.request = exports.responseToJSON = exports.checkResponse = exports.units = exports.debug = void 0;\nconst HttpError_1 = require(\"./HttpError\");\nconst settings_1 = require(\"./settings\");\nconst debug = require(\"debug\"); // $lab:coverage:off$\n// @ts-ignore\n\nconst {\n  fetch\n} = typeof FHIRCLIENT_PURE !== \"undefined\" ? window : require(\"cross-fetch\"); // $lab:coverage:on$\n\nconst _debug = debug(\"FHIR\");\nexports.debug = _debug;\n/**\n * The cache for the `getAndCache` function\n */\n\nconst cache = {};\n/**\n * A namespace with functions for converting between different measurement units\n */\n\nexports.units = {\n  cm(_ref) {\n    let {\n      code,\n      value\n    } = _ref;\n    ensureNumerical({\n      code,\n      value\n    });\n    if (code == \"cm\") return value;\n    if (code == \"m\") return value * 100;\n    if (code == \"in\") return value * 2.54;\n    if (code == \"[in_us]\") return value * 2.54;\n    if (code == \"[in_i]\") return value * 2.54;\n    if (code == \"ft\") return value * 30.48;\n    if (code == \"[ft_us]\") return value * 30.48;\n    throw new Error(\"Unrecognized length unit: \" + code);\n  },\n  kg(_ref2) {\n    let {\n      code,\n      value\n    } = _ref2;\n    ensureNumerical({\n      code,\n      value\n    });\n    if (code == \"kg\") return value;\n    if (code == \"g\") return value / 1000;\n    if (code.match(/lb/)) return value / 2.20462;\n    if (code.match(/oz/)) return value / 35.274;\n    throw new Error(\"Unrecognized weight unit: \" + code);\n  },\n  any(pq) {\n    ensureNumerical(pq);\n    return pq.value;\n  }\n};\n/**\n * Assertion function to guard arguments for `units` functions\n */\n\nfunction ensureNumerical(_ref3) {\n  let {\n    value,\n    code\n  } = _ref3;\n  if (typeof value !== \"number\") {\n    throw new Error(\"Found a non-numerical unit: \" + value + \" \" + code);\n  }\n}\n/**\n * Used in fetch Promise chains to reject if the \"ok\" property is not true\n */\n\nasync function checkResponse(resp) {\n  if (!resp.ok) {\n    const error = new HttpError_1.default(resp);\n    await error.parse();\n    throw error;\n  }\n  return resp;\n}\nexports.checkResponse = checkResponse;\n/**\n * Used in fetch Promise chains to return the JSON version of the response.\n * Note that `resp.json()` will throw on empty body so we use resp.text()\n * instead.\n */\n\nfunction responseToJSON(resp) {\n  return resp.text().then(text => text.length ? JSON.parse(text) : \"\");\n}\nexports.responseToJSON = responseToJSON;\n/**\n * This is our built-in request function. It does a few things by default\n * (unless told otherwise):\n * - Makes CORS requests\n * - Sets accept header to \"application/json\"\n * - Handles errors\n * - If the response is json return the json object\n * - If the response is text return the result text\n * - Otherwise return the response object on which we call stuff like `.blob()`\n */\n\nfunction request(url) {\n  let requestOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n      includeResponse\n    } = requestOptions,\n    options = __rest(requestOptions, [\"includeResponse\"]);\n  return fetch(url, Object.assign(Object.assign({\n    mode: \"cors\"\n  }, options), {\n    headers: Object.assign({\n      accept: \"application/json\"\n    }, options.headers)\n  })).then(checkResponse).then(res => {\n    const type = res.headers.get(\"Content-Type\") + \"\";\n    if (type.match(/\\bjson\\b/i)) {\n      return responseToJSON(res).then(body => ({\n        res,\n        body\n      }));\n    }\n    if (type.match(/^text\\//i)) {\n      return res.text().then(body => ({\n        res,\n        body\n      }));\n    }\n    return {\n      res\n    };\n  }).then(_ref4 => {\n    let {\n      res,\n      body\n    } = _ref4;\n    // Some servers will reply after CREATE with json content type but with\n    // empty body. In this case check if a location header is received and\n    // fetch that to use it as the final result.\n    if (!body && res.status == 201) {\n      const location = res.headers.get(\"location\");\n      if (location) {\n        return request(location, Object.assign(Object.assign({}, options), {\n          method: \"GET\",\n          body: null,\n          includeResponse\n        }));\n      }\n    }\n    if (includeResponse) {\n      return {\n        body,\n        response: res\n      };\n    } // For any non-text and non-json response return the Response object.\n    // This to let users decide if they want to call text(), blob() or\n    // something else on it\n\n    if (body === undefined) {\n      return res;\n    } // Otherwise just return the parsed body (can also be \"\" or null)\n\n    return body;\n  });\n}\nexports.request = request;\n/**\n * Makes a request using `fetch` and stores the result in internal memory cache.\n * The cache is cleared when the page is unloaded.\n * @param url The URL to request\n * @param requestOptions Request options\n * @param force If true, reload from source and update the cache, even if it has\n * already been cached.\n */\n\nfunction getAndCache(url, requestOptions) {\n  let force = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : process.env.NODE_ENV === \"test\";\n  if (force || !cache[url]) {\n    cache[url] = request(url, requestOptions);\n    return cache[url];\n  }\n  return Promise.resolve(cache[url]);\n}\nexports.getAndCache = getAndCache;\n/**\n * Fetches the conformance statement from the given base URL.\n * Note that the result is cached in memory (until the page is reloaded in the\n * browser) because it might have to be re-used by the client\n * @param baseUrl The base URL of the FHIR server\n * @param [requestOptions] Any options passed to the fetch call\n */\n\nfunction fetchConformanceStatement() {\n  let baseUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"/\";\n  let requestOptions = arguments.length > 1 ? arguments[1] : undefined;\n  const url = String(baseUrl).replace(/\\/*$/, \"/\") + \"metadata\";\n  return getAndCache(url, requestOptions).catch(ex => {\n    throw new Error(`Failed to fetch the conformance statement from \"${url}\". ${ex}`);\n  });\n}\nexports.fetchConformanceStatement = fetchConformanceStatement;\n/**\n * Walks through an object (or array) and returns the value found at the\n * provided path. This function is very simple so it intentionally does not\n * support any argument polymorphism, meaning that the path can only be a\n * dot-separated string. If the path is invalid returns undefined.\n * @param obj The object (or Array) to walk through\n * @param path The path (eg. \"a.b.4.c\")\n * @returns {*} Whatever is found in the path or undefined\n */\n\nfunction getPath(obj) {\n  let path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"\";\n  path = path.trim();\n  if (!path) {\n    return obj;\n  }\n  let segments = path.split(\".\");\n  let result = obj;\n  while (result && segments.length) {\n    const key = segments.shift();\n    if (!key && Array.isArray(result)) {\n      return result.map(o => getPath(o, segments.join(\".\")));\n    } else {\n      result = result[key];\n    }\n  }\n  return result;\n}\nexports.getPath = getPath;\n/**\n * Like getPath, but if the node is found, its value is set to @value\n * @param obj The object (or Array) to walk through\n * @param path The path (eg. \"a.b.4.c\")\n * @param value The value to set\n * @param createEmpty If true, create missing intermediate objects or arrays\n * @returns The modified object\n */\n\nfunction setPath(obj, path, value) {\n  let createEmpty = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  path.trim().split(\".\").reduce((out, key, idx, arr) => {\n    if (out && idx === arr.length - 1) {\n      out[key] = value;\n    } else {\n      if (out && out[key] === undefined && createEmpty) {\n        out[key] = arr[idx + 1].match(/^[0-9]+$/) ? [] : {};\n      }\n      return out ? out[key] : undefined;\n    }\n  }, obj);\n  return obj;\n}\nexports.setPath = setPath;\n/**\n * If the argument is an array returns it as is. Otherwise puts it in an array\n * (`[arg]`) and returns the result\n * @param arg The element to test and possibly convert to array\n * @category Utility\n */\n\nfunction makeArray(arg) {\n  if (Array.isArray(arg)) {\n    return arg;\n  }\n  return [arg];\n}\nexports.makeArray = makeArray;\n/**\n * Given a path, converts it to absolute url based on the `baseUrl`. If baseUrl\n * is not provided, the result would be a rooted path (one that starts with `/`).\n * @param path The path to convert\n * @param baseUrl The base URL\n */\n\nfunction absolute(path, baseUrl) {\n  if (path.match(/^http/)) return path;\n  if (path.match(/^urn/)) return path;\n  return String(baseUrl || \"\").replace(/\\/+$/, \"\") + \"/\" + path.replace(/^\\/+/, \"\");\n}\nexports.absolute = absolute;\n/**\n * Generates random strings. By default this returns random 8 characters long\n * alphanumeric strings.\n * @param strLength The length of the output string. Defaults to 8.\n * @param charSet A string containing all the possible characters.\n *     Defaults to all the upper and lower-case letters plus digits.\n * @category Utility\n */\n\nfunction randomString() {\n  let strLength = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 8;\n  let charSet = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n  const result = [];\n  const len = charSet.length;\n  while (strLength--) {\n    result.push(charSet.charAt(Math.floor(Math.random() * len)));\n  }\n  return result.join(\"\");\n}\nexports.randomString = randomString;\n/**\n * Decodes a JWT token and returns it's body.\n * @param token The token to read\n * @param env An `Adapter` or any other object that has an `atob` method\n * @category Utility\n */\n\nfunction jwtDecode(token, env) {\n  const payload = token.split(\".\")[1];\n  return payload ? JSON.parse(env.atob(payload)) : null;\n}\nexports.jwtDecode = jwtDecode;\n/**\n * Given a token response, computes and returns the expiresAt timestamp.\n * Note that this should only be used immediately after an access token is\n * received, otherwise the computed timestamp will be incorrect.\n * @param tokenResponse\n * @param env\n */\n\nfunction getAccessTokenExpiration(tokenResponse, env) {\n  const now = Math.floor(Date.now() / 1000); // Option 1 - using the expires_in property of the token response\n\n  if (tokenResponse.expires_in) {\n    return now + tokenResponse.expires_in;\n  } // Option 2 - using the exp property of JWT tokens (must not assume JWT!)\n\n  if (tokenResponse.access_token) {\n    let tokenBody = jwtDecode(tokenResponse.access_token, env);\n    if (tokenBody && tokenBody.exp) {\n      return tokenBody.exp;\n    }\n  } // Option 3 - if none of the above worked set this to 5 minutes after now\n\n  return now + 300;\n}\nexports.getAccessTokenExpiration = getAccessTokenExpiration;\n/**\n * Groups the observations by code. Returns a map that will look like:\n * ```js\n * const map = client.byCodes(observations, \"code\");\n * // map = {\n * //     \"55284-4\": [ observation1, observation2 ],\n * //     \"6082-2\": [ observation3 ]\n * // }\n * ```\n * @param observations Array of observations\n * @param property The name of a CodeableConcept property to group by\n */\n\nfunction byCode(observations, property) {\n  const ret = {};\n  function handleCodeableConcept(concept, observation) {\n    if (concept && Array.isArray(concept.coding)) {\n      concept.coding.forEach(_ref5 => {\n        let {\n          code\n        } = _ref5;\n        if (code) {\n          ret[code] = ret[code] || [];\n          ret[code].push(observation);\n        }\n      });\n    }\n  }\n  makeArray(observations).forEach(o => {\n    if (o.resourceType === \"Observation\" && o[property]) {\n      if (Array.isArray(o[property])) {\n        o[property].forEach(concept => handleCodeableConcept(concept, o));\n      } else {\n        handleCodeableConcept(o[property], o);\n      }\n    }\n  });\n  return ret;\n}\nexports.byCode = byCode;\n/**\n * First groups the observations by code using `byCode`. Then returns a function\n * that accepts codes as arguments and will return a flat array of observations\n * having that codes. Example:\n * ```js\n * const filter = client.byCodes(observations, \"category\");\n * filter(\"laboratory\") // => [ observation1, observation2 ]\n * filter(\"vital-signs\") // => [ observation3 ]\n * filter(\"laboratory\", \"vital-signs\") // => [ observation1, observation2, observation3 ]\n * ```\n * @param observations Array of observations\n * @param property The name of a CodeableConcept property to group by\n */\n\nfunction byCodes(observations, property) {\n  const bank = byCode(observations, property);\n  return function () {\n    for (var _len = arguments.length, codes = new Array(_len), _key = 0; _key < _len; _key++) {\n      codes[_key] = arguments[_key];\n    }\n    return codes.filter(code => code + \"\" in bank).reduce((prev, code) => prev.concat(bank[code + \"\"]), []);\n  };\n}\nexports.byCodes = byCodes;\n/**\n * Given a conformance statement and a resource type, returns the name of the\n * URL parameter that can be used to scope the resource type by patient ID.\n */\n\nfunction getPatientParam(conformance, resourceType) {\n  // Find what resources are supported by this server\n  const resources = getPath(conformance, \"rest.0.resource\") || []; // Check if this resource is supported\n\n  const meta = resources.find(r => r.type === resourceType);\n  if (!meta) {\n    throw new Error(`Resource \"${resourceType}\" is not supported by this FHIR server`);\n  } // Check if any search parameters are available for this resource\n\n  if (!Array.isArray(meta.searchParam)) {\n    throw new Error(`No search parameters supported for \"${resourceType}\" on this FHIR server`);\n  } // This is a rare case but could happen in generic workflows\n\n  if (resourceType == \"Patient\" && meta.searchParam.find(x => x.name == \"_id\")) {\n    return \"_id\";\n  } // Now find the first possible parameter name\n\n  const out = settings_1.patientParams.find(p => meta.searchParam.find(x => x.name == p)); // If there is no match\n\n  if (!out) {\n    throw new Error(\"I don't know what param to use for \" + resourceType);\n  }\n  return out;\n}\nexports.getPatientParam = getPatientParam;\n/**\n * Resolves a reference to target window. It may also open new window or tab if\n * the `target = \"popup\"` or `target = \"_blank\"`.\n * @param target\n * @param width Only used when `target = \"popup\"`\n * @param height Only used when `target = \"popup\"`\n */\n\nasync function getTargetWindow(target) {\n  let width = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 800;\n  let height = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 720;\n  // The target can be a function that returns the target. This can be\n  // used to open a layer pop-up with an iframe and then return a reference\n  // to that iframe (or its name)\n  if (typeof target == \"function\") {\n    target = await target();\n  } // The target can be a window reference\n\n  if (target && typeof target == \"object\") {\n    return target;\n  } // At this point target must be a string\n\n  if (typeof target != \"string\") {\n    _debug(\"Invalid target type '%s'. Failing back to '_self'.\", typeof target);\n    return self;\n  } // Current window\n\n  if (target == \"_self\") {\n    return self;\n  } // The parent frame\n\n  if (target == \"_parent\") {\n    return parent;\n  } // The top window\n\n  if (target == \"_top\") {\n    return top;\n  } // New tab or window\n\n  if (target == \"_blank\") {\n    let error,\n      targetWindow = null;\n    try {\n      targetWindow = window.open(\"\", \"SMARTAuthPopup\");\n      if (!targetWindow) {\n        throw new Error(\"Perhaps window.open was blocked\");\n      }\n    } catch (e) {\n      error = e;\n    }\n    if (!targetWindow) {\n      _debug(\"Cannot open window. Failing back to '_self'. %s\", error);\n      return self;\n    } else {\n      return targetWindow;\n    }\n  } // Popup window\n\n  if (target == \"popup\") {\n    let error,\n      targetWindow = null; // if (!targetWindow || targetWindow.closed) {\n\n    try {\n      targetWindow = window.open(\"\", \"SMARTAuthPopup\", [\"height=\" + height, \"width=\" + width, \"menubar=0\", \"resizable=1\", \"status=0\", \"top=\" + (screen.height - height) / 2, \"left=\" + (screen.width - width) / 2].join(\",\"));\n      if (!targetWindow) {\n        throw new Error(\"Perhaps the popup window was blocked\");\n      }\n    } catch (e) {\n      error = e;\n    }\n    if (!targetWindow) {\n      _debug(\"Cannot open window. Failing back to '_self'. %s\", error);\n      return self;\n    } else {\n      return targetWindow;\n    }\n  } // Frame or window by name\n\n  const winOrFrame = frames[target];\n  if (winOrFrame) {\n    return winOrFrame;\n  }\n  _debug(\"Unknown target '%s'. Failing back to '_self'.\", target);\n  return self;\n}\nexports.getTargetWindow = getTargetWindow;\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\nexports.assert = assert;\nfunction assertJsonPatch(patch) {\n  assert(Array.isArray(patch), \"The JSON patch must be an array\");\n  assert(patch.length > 0, \"The JSON patch array should not be empty\");\n  patch.forEach(operation => {\n    assert([\"add\", \"replace\", \"test\", \"move\", \"copy\", \"remove\"].indexOf(operation.op) > -1, 'Each patch operation must have an \"op\" property which must be one of: \"add\", \"replace\", \"test\", \"move\", \"copy\", \"remove\"');\n    assert(operation.path && typeof operation.path, `Invalid \"${operation.op}\" operation. Missing \"path\" property`);\n    if (operation.op == \"add\" || operation.op == \"replace\" || operation.op == \"test\") {\n      assert(\"value\" in operation, `Invalid \"${operation.op}\" operation. Missing \"value\" property`);\n      assert(Object.keys(operation).length == 3, `Invalid \"${operation.op}\" operation. Contains unknown properties`);\n    } else if (operation.op == \"move\" || operation.op == \"copy\") {\n      assert(typeof operation.from == \"string\", `Invalid \"${operation.op}\" operation. Requires a string \"from\" property`);\n      assert(Object.keys(operation).length == 3, `Invalid \"${operation.op}\" operation. Contains unknown properties`);\n    } else {\n      assert(Object.keys(operation).length == 2, `Invalid \"${operation.op}\" operation. Contains unknown properties`);\n    }\n  });\n}\nexports.assertJsonPatch = assertJsonPatch;","map":{"version":3,"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","propertyIsEnumerable","defineProperty","exports","value","assertJsonPatch","assert","getTargetWindow","getPatientParam","byCodes","byCode","getAccessTokenExpiration","jwtDecode","randomString","absolute","makeArray","setPath","getPath","fetchConformanceStatement","getAndCache","request","responseToJSON","checkResponse","units","debug","HttpError_1","require","settings_1","fetch","FHIRCLIENT_PURE","window","_debug","cache","cm","code","ensureNumerical","Error","kg","match","any","pq","resp","ok","error","default","parse","text","then","JSON","url","requestOptions","includeResponse","options","assign","mode","headers","accept","res","type","get","body","status","location","method","response","undefined","force","process","env","NODE_ENV","Promise","resolve","baseUrl","String","replace","catch","ex","obj","path","trim","segments","split","result","key","shift","Array","isArray","map","o","join","createEmpty","reduce","out","idx","arr","arg","strLength","charSet","len","push","charAt","Math","floor","random","token","payload","atob","tokenResponse","now","Date","expires_in","access_token","tokenBody","exp","observations","property","ret","handleCodeableConcept","concept","observation","coding","forEach","resourceType","bank","codes","filter","prev","concat","conformance","resources","meta","find","r","searchParam","x","name","patientParams","target","width","height","self","parent","top","targetWindow","open","screen","winOrFrame","frames","condition","message","patch","operation","op","keys","from"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/fhirclient/lib/lib.js"],"sourcesContent":["\"use strict\";\n/*\n * This file contains some shared functions. They are used by other modules, but\n * are defined here so that tests can import this library and test them.\n */\n\nvar __rest = void 0 && (void 0).__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i])) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.assertJsonPatch = exports.assert = exports.getTargetWindow = exports.getPatientParam = exports.byCodes = exports.byCode = exports.getAccessTokenExpiration = exports.jwtDecode = exports.randomString = exports.absolute = exports.makeArray = exports.setPath = exports.getPath = exports.fetchConformanceStatement = exports.getAndCache = exports.request = exports.responseToJSON = exports.checkResponse = exports.units = exports.debug = void 0;\n\nconst HttpError_1 = require(\"./HttpError\");\n\nconst settings_1 = require(\"./settings\");\n\nconst debug = require(\"debug\"); // $lab:coverage:off$\n// @ts-ignore\n\n\nconst {\n  fetch\n} = typeof FHIRCLIENT_PURE !== \"undefined\" ? window : require(\"cross-fetch\"); // $lab:coverage:on$\n\nconst _debug = debug(\"FHIR\");\n\nexports.debug = _debug;\n/**\n * The cache for the `getAndCache` function\n */\n\nconst cache = {};\n/**\n * A namespace with functions for converting between different measurement units\n */\n\nexports.units = {\n  cm({\n    code,\n    value\n  }) {\n    ensureNumerical({\n      code,\n      value\n    });\n    if (code == \"cm\") return value;\n    if (code == \"m\") return value * 100;\n    if (code == \"in\") return value * 2.54;\n    if (code == \"[in_us]\") return value * 2.54;\n    if (code == \"[in_i]\") return value * 2.54;\n    if (code == \"ft\") return value * 30.48;\n    if (code == \"[ft_us]\") return value * 30.48;\n    throw new Error(\"Unrecognized length unit: \" + code);\n  },\n\n  kg({\n    code,\n    value\n  }) {\n    ensureNumerical({\n      code,\n      value\n    });\n    if (code == \"kg\") return value;\n    if (code == \"g\") return value / 1000;\n    if (code.match(/lb/)) return value / 2.20462;\n    if (code.match(/oz/)) return value / 35.274;\n    throw new Error(\"Unrecognized weight unit: \" + code);\n  },\n\n  any(pq) {\n    ensureNumerical(pq);\n    return pq.value;\n  }\n\n};\n/**\n * Assertion function to guard arguments for `units` functions\n */\n\nfunction ensureNumerical({\n  value,\n  code\n}) {\n  if (typeof value !== \"number\") {\n    throw new Error(\"Found a non-numerical unit: \" + value + \" \" + code);\n  }\n}\n/**\n * Used in fetch Promise chains to reject if the \"ok\" property is not true\n */\n\n\nasync function checkResponse(resp) {\n  if (!resp.ok) {\n    const error = new HttpError_1.default(resp);\n    await error.parse();\n    throw error;\n  }\n\n  return resp;\n}\n\nexports.checkResponse = checkResponse;\n/**\n * Used in fetch Promise chains to return the JSON version of the response.\n * Note that `resp.json()` will throw on empty body so we use resp.text()\n * instead.\n */\n\nfunction responseToJSON(resp) {\n  return resp.text().then(text => text.length ? JSON.parse(text) : \"\");\n}\n\nexports.responseToJSON = responseToJSON;\n/**\n * This is our built-in request function. It does a few things by default\n * (unless told otherwise):\n * - Makes CORS requests\n * - Sets accept header to \"application/json\"\n * - Handles errors\n * - If the response is json return the json object\n * - If the response is text return the result text\n * - Otherwise return the response object on which we call stuff like `.blob()`\n */\n\nfunction request(url, requestOptions = {}) {\n  const {\n    includeResponse\n  } = requestOptions,\n        options = __rest(requestOptions, [\"includeResponse\"]);\n\n  return fetch(url, Object.assign(Object.assign({\n    mode: \"cors\"\n  }, options), {\n    headers: Object.assign({\n      accept: \"application/json\"\n    }, options.headers)\n  })).then(checkResponse).then(res => {\n    const type = res.headers.get(\"Content-Type\") + \"\";\n\n    if (type.match(/\\bjson\\b/i)) {\n      return responseToJSON(res).then(body => ({\n        res,\n        body\n      }));\n    }\n\n    if (type.match(/^text\\//i)) {\n      return res.text().then(body => ({\n        res,\n        body\n      }));\n    }\n\n    return {\n      res\n    };\n  }).then(({\n    res,\n    body\n  }) => {\n    // Some servers will reply after CREATE with json content type but with\n    // empty body. In this case check if a location header is received and\n    // fetch that to use it as the final result.\n    if (!body && res.status == 201) {\n      const location = res.headers.get(\"location\");\n\n      if (location) {\n        return request(location, Object.assign(Object.assign({}, options), {\n          method: \"GET\",\n          body: null,\n          includeResponse\n        }));\n      }\n    }\n\n    if (includeResponse) {\n      return {\n        body,\n        response: res\n      };\n    } // For any non-text and non-json response return the Response object.\n    // This to let users decide if they want to call text(), blob() or\n    // something else on it\n\n\n    if (body === undefined) {\n      return res;\n    } // Otherwise just return the parsed body (can also be \"\" or null)\n\n\n    return body;\n  });\n}\n\nexports.request = request;\n/**\n * Makes a request using `fetch` and stores the result in internal memory cache.\n * The cache is cleared when the page is unloaded.\n * @param url The URL to request\n * @param requestOptions Request options\n * @param force If true, reload from source and update the cache, even if it has\n * already been cached.\n */\n\nfunction getAndCache(url, requestOptions, force = process.env.NODE_ENV === \"test\") {\n  if (force || !cache[url]) {\n    cache[url] = request(url, requestOptions);\n    return cache[url];\n  }\n\n  return Promise.resolve(cache[url]);\n}\n\nexports.getAndCache = getAndCache;\n/**\n * Fetches the conformance statement from the given base URL.\n * Note that the result is cached in memory (until the page is reloaded in the\n * browser) because it might have to be re-used by the client\n * @param baseUrl The base URL of the FHIR server\n * @param [requestOptions] Any options passed to the fetch call\n */\n\nfunction fetchConformanceStatement(baseUrl = \"/\", requestOptions) {\n  const url = String(baseUrl).replace(/\\/*$/, \"/\") + \"metadata\";\n  return getAndCache(url, requestOptions).catch(ex => {\n    throw new Error(`Failed to fetch the conformance statement from \"${url}\". ${ex}`);\n  });\n}\n\nexports.fetchConformanceStatement = fetchConformanceStatement;\n/**\n * Walks through an object (or array) and returns the value found at the\n * provided path. This function is very simple so it intentionally does not\n * support any argument polymorphism, meaning that the path can only be a\n * dot-separated string. If the path is invalid returns undefined.\n * @param obj The object (or Array) to walk through\n * @param path The path (eg. \"a.b.4.c\")\n * @returns {*} Whatever is found in the path or undefined\n */\n\nfunction getPath(obj, path = \"\") {\n  path = path.trim();\n\n  if (!path) {\n    return obj;\n  }\n\n  let segments = path.split(\".\");\n  let result = obj;\n\n  while (result && segments.length) {\n    const key = segments.shift();\n\n    if (!key && Array.isArray(result)) {\n      return result.map(o => getPath(o, segments.join(\".\")));\n    } else {\n      result = result[key];\n    }\n  }\n\n  return result;\n}\n\nexports.getPath = getPath;\n/**\n * Like getPath, but if the node is found, its value is set to @value\n * @param obj The object (or Array) to walk through\n * @param path The path (eg. \"a.b.4.c\")\n * @param value The value to set\n * @param createEmpty If true, create missing intermediate objects or arrays\n * @returns The modified object\n */\n\nfunction setPath(obj, path, value, createEmpty = false) {\n  path.trim().split(\".\").reduce((out, key, idx, arr) => {\n    if (out && idx === arr.length - 1) {\n      out[key] = value;\n    } else {\n      if (out && out[key] === undefined && createEmpty) {\n        out[key] = arr[idx + 1].match(/^[0-9]+$/) ? [] : {};\n      }\n\n      return out ? out[key] : undefined;\n    }\n  }, obj);\n  return obj;\n}\n\nexports.setPath = setPath;\n/**\n * If the argument is an array returns it as is. Otherwise puts it in an array\n * (`[arg]`) and returns the result\n * @param arg The element to test and possibly convert to array\n * @category Utility\n */\n\nfunction makeArray(arg) {\n  if (Array.isArray(arg)) {\n    return arg;\n  }\n\n  return [arg];\n}\n\nexports.makeArray = makeArray;\n/**\n * Given a path, converts it to absolute url based on the `baseUrl`. If baseUrl\n * is not provided, the result would be a rooted path (one that starts with `/`).\n * @param path The path to convert\n * @param baseUrl The base URL\n */\n\nfunction absolute(path, baseUrl) {\n  if (path.match(/^http/)) return path;\n  if (path.match(/^urn/)) return path;\n  return String(baseUrl || \"\").replace(/\\/+$/, \"\") + \"/\" + path.replace(/^\\/+/, \"\");\n}\n\nexports.absolute = absolute;\n/**\n * Generates random strings. By default this returns random 8 characters long\n * alphanumeric strings.\n * @param strLength The length of the output string. Defaults to 8.\n * @param charSet A string containing all the possible characters.\n *     Defaults to all the upper and lower-case letters plus digits.\n * @category Utility\n */\n\nfunction randomString(strLength = 8, charSet = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\") {\n  const result = [];\n  const len = charSet.length;\n\n  while (strLength--) {\n    result.push(charSet.charAt(Math.floor(Math.random() * len)));\n  }\n\n  return result.join(\"\");\n}\n\nexports.randomString = randomString;\n/**\n * Decodes a JWT token and returns it's body.\n * @param token The token to read\n * @param env An `Adapter` or any other object that has an `atob` method\n * @category Utility\n */\n\nfunction jwtDecode(token, env) {\n  const payload = token.split(\".\")[1];\n  return payload ? JSON.parse(env.atob(payload)) : null;\n}\n\nexports.jwtDecode = jwtDecode;\n/**\n * Given a token response, computes and returns the expiresAt timestamp.\n * Note that this should only be used immediately after an access token is\n * received, otherwise the computed timestamp will be incorrect.\n * @param tokenResponse\n * @param env\n */\n\nfunction getAccessTokenExpiration(tokenResponse, env) {\n  const now = Math.floor(Date.now() / 1000); // Option 1 - using the expires_in property of the token response\n\n  if (tokenResponse.expires_in) {\n    return now + tokenResponse.expires_in;\n  } // Option 2 - using the exp property of JWT tokens (must not assume JWT!)\n\n\n  if (tokenResponse.access_token) {\n    let tokenBody = jwtDecode(tokenResponse.access_token, env);\n\n    if (tokenBody && tokenBody.exp) {\n      return tokenBody.exp;\n    }\n  } // Option 3 - if none of the above worked set this to 5 minutes after now\n\n\n  return now + 300;\n}\n\nexports.getAccessTokenExpiration = getAccessTokenExpiration;\n/**\n * Groups the observations by code. Returns a map that will look like:\n * ```js\n * const map = client.byCodes(observations, \"code\");\n * // map = {\n * //     \"55284-4\": [ observation1, observation2 ],\n * //     \"6082-2\": [ observation3 ]\n * // }\n * ```\n * @param observations Array of observations\n * @param property The name of a CodeableConcept property to group by\n */\n\nfunction byCode(observations, property) {\n  const ret = {};\n\n  function handleCodeableConcept(concept, observation) {\n    if (concept && Array.isArray(concept.coding)) {\n      concept.coding.forEach(({\n        code\n      }) => {\n        if (code) {\n          ret[code] = ret[code] || [];\n          ret[code].push(observation);\n        }\n      });\n    }\n  }\n\n  makeArray(observations).forEach(o => {\n    if (o.resourceType === \"Observation\" && o[property]) {\n      if (Array.isArray(o[property])) {\n        o[property].forEach(concept => handleCodeableConcept(concept, o));\n      } else {\n        handleCodeableConcept(o[property], o);\n      }\n    }\n  });\n  return ret;\n}\n\nexports.byCode = byCode;\n/**\n * First groups the observations by code using `byCode`. Then returns a function\n * that accepts codes as arguments and will return a flat array of observations\n * having that codes. Example:\n * ```js\n * const filter = client.byCodes(observations, \"category\");\n * filter(\"laboratory\") // => [ observation1, observation2 ]\n * filter(\"vital-signs\") // => [ observation3 ]\n * filter(\"laboratory\", \"vital-signs\") // => [ observation1, observation2, observation3 ]\n * ```\n * @param observations Array of observations\n * @param property The name of a CodeableConcept property to group by\n */\n\nfunction byCodes(observations, property) {\n  const bank = byCode(observations, property);\n  return (...codes) => codes.filter(code => code + \"\" in bank).reduce((prev, code) => prev.concat(bank[code + \"\"]), []);\n}\n\nexports.byCodes = byCodes;\n/**\n * Given a conformance statement and a resource type, returns the name of the\n * URL parameter that can be used to scope the resource type by patient ID.\n */\n\nfunction getPatientParam(conformance, resourceType) {\n  // Find what resources are supported by this server\n  const resources = getPath(conformance, \"rest.0.resource\") || []; // Check if this resource is supported\n\n  const meta = resources.find(r => r.type === resourceType);\n\n  if (!meta) {\n    throw new Error(`Resource \"${resourceType}\" is not supported by this FHIR server`);\n  } // Check if any search parameters are available for this resource\n\n\n  if (!Array.isArray(meta.searchParam)) {\n    throw new Error(`No search parameters supported for \"${resourceType}\" on this FHIR server`);\n  } // This is a rare case but could happen in generic workflows\n\n\n  if (resourceType == \"Patient\" && meta.searchParam.find(x => x.name == \"_id\")) {\n    return \"_id\";\n  } // Now find the first possible parameter name\n\n\n  const out = settings_1.patientParams.find(p => meta.searchParam.find(x => x.name == p)); // If there is no match\n\n  if (!out) {\n    throw new Error(\"I don't know what param to use for \" + resourceType);\n  }\n\n  return out;\n}\n\nexports.getPatientParam = getPatientParam;\n/**\n * Resolves a reference to target window. It may also open new window or tab if\n * the `target = \"popup\"` or `target = \"_blank\"`.\n * @param target\n * @param width Only used when `target = \"popup\"`\n * @param height Only used when `target = \"popup\"`\n */\n\nasync function getTargetWindow(target, width = 800, height = 720) {\n  // The target can be a function that returns the target. This can be\n  // used to open a layer pop-up with an iframe and then return a reference\n  // to that iframe (or its name)\n  if (typeof target == \"function\") {\n    target = await target();\n  } // The target can be a window reference\n\n\n  if (target && typeof target == \"object\") {\n    return target;\n  } // At this point target must be a string\n\n\n  if (typeof target != \"string\") {\n    _debug(\"Invalid target type '%s'. Failing back to '_self'.\", typeof target);\n\n    return self;\n  } // Current window\n\n\n  if (target == \"_self\") {\n    return self;\n  } // The parent frame\n\n\n  if (target == \"_parent\") {\n    return parent;\n  } // The top window\n\n\n  if (target == \"_top\") {\n    return top;\n  } // New tab or window\n\n\n  if (target == \"_blank\") {\n    let error,\n        targetWindow = null;\n\n    try {\n      targetWindow = window.open(\"\", \"SMARTAuthPopup\");\n\n      if (!targetWindow) {\n        throw new Error(\"Perhaps window.open was blocked\");\n      }\n    } catch (e) {\n      error = e;\n    }\n\n    if (!targetWindow) {\n      _debug(\"Cannot open window. Failing back to '_self'. %s\", error);\n\n      return self;\n    } else {\n      return targetWindow;\n    }\n  } // Popup window\n\n\n  if (target == \"popup\") {\n    let error,\n        targetWindow = null; // if (!targetWindow || targetWindow.closed) {\n\n    try {\n      targetWindow = window.open(\"\", \"SMARTAuthPopup\", [\"height=\" + height, \"width=\" + width, \"menubar=0\", \"resizable=1\", \"status=0\", \"top=\" + (screen.height - height) / 2, \"left=\" + (screen.width - width) / 2].join(\",\"));\n\n      if (!targetWindow) {\n        throw new Error(\"Perhaps the popup window was blocked\");\n      }\n    } catch (e) {\n      error = e;\n    }\n\n    if (!targetWindow) {\n      _debug(\"Cannot open window. Failing back to '_self'. %s\", error);\n\n      return self;\n    } else {\n      return targetWindow;\n    }\n  } // Frame or window by name\n\n\n  const winOrFrame = frames[target];\n\n  if (winOrFrame) {\n    return winOrFrame;\n  }\n\n  _debug(\"Unknown target '%s'. Failing back to '_self'.\", target);\n\n  return self;\n}\n\nexports.getTargetWindow = getTargetWindow;\n\nfunction assert(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nexports.assert = assert;\n\nfunction assertJsonPatch(patch) {\n  assert(Array.isArray(patch), \"The JSON patch must be an array\");\n  assert(patch.length > 0, \"The JSON patch array should not be empty\");\n  patch.forEach(operation => {\n    assert([\"add\", \"replace\", \"test\", \"move\", \"copy\", \"remove\"].indexOf(operation.op) > -1, 'Each patch operation must have an \"op\" property which must be one of: \"add\", \"replace\", \"test\", \"move\", \"copy\", \"remove\"');\n    assert(operation.path && typeof operation.path, `Invalid \"${operation.op}\" operation. Missing \"path\" property`);\n\n    if (operation.op == \"add\" || operation.op == \"replace\" || operation.op == \"test\") {\n      assert(\"value\" in operation, `Invalid \"${operation.op}\" operation. Missing \"value\" property`);\n      assert(Object.keys(operation).length == 3, `Invalid \"${operation.op}\" operation. Contains unknown properties`);\n    } else if (operation.op == \"move\" || operation.op == \"copy\") {\n      assert(typeof operation.from == \"string\", `Invalid \"${operation.op}\" operation. Requires a string \"from\" property`);\n      assert(Object.keys(operation).length == 3, `Invalid \"${operation.op}\" operation. Contains unknown properties`);\n    } else {\n      assert(Object.keys(operation).length == 2, `Invalid \"${operation.op}\" operation. Contains unknown properties`);\n    }\n  });\n}\n\nexports.assertJsonPatch = assertJsonPatch;"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}