{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/FhirClientProvider.js\";\nimport React from 'react';\nimport { oauth2 as SMART } from 'fhirclient';\nimport { FhirClientContext } from '../FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FhirClientProvider extends React.Component {\n  componentDidMount() {\n    SMART.ready().then(client => this.setState({\n      client\n    }), error => this.setState({\n      error\n    }));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(FhirClientContext.Provider, {\n      value: this.state || {},\n      children: /*#__PURE__*/_jsxDEV(FhirClientContext.Consumer, {\n        children: ({\n          client,\n          error\n        }) => {\n          // any error that SMART.ready() may have been rejected with\n          if (error) {\n            return /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: error.stack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 22\n            }, this);\n          } // if client is already available render the subtree\n\n\n          if (client) {\n            return this.props.children;\n          } // client is undefined until SMART.ready() is fulfilled\n\n\n          return 'Authorizing...';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/FhirClientProvider.js"],"names":["React","oauth2","SMART","FhirClientContext","FhirClientProvider","Component","componentDidMount","ready","then","client","setState","error","render","state","stack","props","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAM,IAAIC,KAAnB,QAAgC,YAAhC;AACA,SAASC,iBAAT,QAAkC,sBAAlC;;AAEA,eAAe,MAAMC,kBAAN,SAAiCJ,KAAK,CAACK,SAAvC,CAAiD;AAE9DC,EAAAA,iBAAiB,GAAG;AAClBJ,IAAAA,KAAK,CAACK,KAAN,GAAcC,IAAd,CACGC,MAAD,IAAY,KAAKC,QAAL,CAAc;AAAED,MAAAA;AAAF,KAAd,CADd,EAEGE,KAAD,IAAW,KAAKD,QAAL,CAAc;AAAEC,MAAAA;AAAF,KAAd,CAFb;AAID;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,iBAAD,CAAmB,QAAnB;AAA4B,MAAA,KAAK,EAAE,KAAKC,KAAL,IAAc,EAAjD;AAAA,6BACE,QAAC,iBAAD,CAAmB,QAAnB;AAAA,kBACG,CAAC;AAAEJ,UAAAA,MAAF;AAAUE,UAAAA;AAAV,SAAD,KAAuB;AACtB;AACA,cAAIA,KAAJ,EAAW;AACT,gCAAO;AAAA,wBAAMA,KAAK,CAACG;AAAZ;AAAA;AAAA;AAAA;AAAA,oBAAP;AACD,WAJqB,CAMtB;;;AACA,cAAIL,MAAJ,EAAY;AACV,mBAAO,KAAKM,KAAL,CAAWC,QAAlB;AACD,WATqB,CAWtB;;;AACA,iBAAO,gBAAP;AACD;AAdH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAoBD;;AA9B6D","sourcesContent":["import React from 'react';\nimport { oauth2 as SMART } from 'fhirclient';\nimport { FhirClientContext } from '../FhirClientContext';\n\nexport default class FhirClientProvider extends React.Component {\n  \n  componentDidMount() {\n    SMART.ready().then(\n      (client) => this.setState({ client }),\n      (error) => this.setState({ error })\n    );\n  }\n\n  render() {\n    return (\n      <FhirClientContext.Provider value={this.state || {}}>\n        <FhirClientContext.Consumer>\n          {({ client, error }) => {\n            // any error that SMART.ready() may have been rejected with\n            if (error) {\n              return <pre>{error.stack}</pre>;\n            }\n\n            // if client is already available render the subtree\n            if (client) {\n              return this.props.children;\n            }\n\n            // client is undefined until SMART.ready() is fulfilled\n            return 'Authorizing...';\n          }}\n        </FhirClientContext.Consumer>\n      </FhirClientContext.Provider>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}