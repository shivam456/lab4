{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.orientation && styles[styleProps.orientation]), styles.root || {});\n};\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver\n})(_ref3 => {\n  let {\n    styleProps\n  } = _ref3;\n  return _extends({\n    /* Styles applied to the root element. */\n    width: 40,\n    flexShrink: 0,\n    opacity: 0.8,\n    '&.Mui-disabled': {\n      opacity: 0\n    }\n  }, styleProps.orientation === 'vertical' && {\n    width: '100%',\n    height: 40,\n    '& svg': {\n      transform: 'rotate(90deg)'\n    }\n  });\n});\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n  const {\n      className,\n      direction\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n  const styleProps = _extends({}, props);\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","KeyboardArrowLeft","KeyboardArrowRight","ButtonBase","useThemeProps","experimentalStyled","getTabScrollButtonUtilityClass","jsx","_jsx","overridesResolver","props","styles","styleProps","orientation","root","useUtilityClasses","classes","disabled","slots","TabScrollButtonRoot","name","slot","width","flexShrink","opacity","height","transform","_ref","fontSize","_ref2","TabScrollButton","forwardRef","inProps","ref","className","direction","other","component","role","tabIndex","children","process","env","NODE_ENV","propTypes","node","object","string","oneOf","isRequired","bool","sx"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/TabScrollButton/TabScrollButton.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\n/* eslint-disable jsx-a11y/aria-role */\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport KeyboardArrowLeft from '../internal/svg-icons/KeyboardArrowLeft';\nimport KeyboardArrowRight from '../internal/svg-icons/KeyboardArrowRight';\nimport ButtonBase from '../ButtonBase';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport { getTabScrollButtonUtilityClass } from './tabScrollButtonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styleProps.orientation && styles[styleProps.orientation]), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    orientation,\n    disabled\n  } = styleProps;\n  const slots = {\n    root: ['root', orientation, disabled && 'disabled']\n  };\n  return composeClasses(slots, getTabScrollButtonUtilityClass, classes);\n};\n\nconst TabScrollButtonRoot = experimentalStyled(ButtonBase, {}, {\n  name: 'MuiTabScrollButton',\n  slot: 'Root',\n  overridesResolver\n})(({\n  styleProps\n}) => _extends({\n  /* Styles applied to the root element. */\n  width: 40,\n  flexShrink: 0,\n  opacity: 0.8,\n  '&.Mui-disabled': {\n    opacity: 0\n  }\n}, styleProps.orientation === 'vertical' && {\n  width: '100%',\n  height: 40,\n  '& svg': {\n    transform: 'rotate(90deg)'\n  }\n}));\n\nvar _ref = /*#__PURE__*/_jsx(KeyboardArrowLeft, {\n  fontSize: \"small\"\n});\n\nvar _ref2 = /*#__PURE__*/_jsx(KeyboardArrowRight, {\n  fontSize: \"small\"\n});\n\nconst TabScrollButton = /*#__PURE__*/React.forwardRef(function TabScrollButton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTabScrollButton'\n  });\n\n  const {\n    className,\n    direction\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"className\", \"direction\", \"orientation\", \"disabled\"]); // TODO: convert to simple assignment after the type error in defaultPropsHandler.js:60:6 is fixed\n\n\n  const styleProps = _extends({}, props);\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(TabScrollButtonRoot, _extends({\n    component: \"div\",\n    className: clsx(classes.root, className),\n    ref: ref,\n    role: null,\n    styleProps: styleProps,\n    tabIndex: null\n  }, other, {\n    children: direction === 'left' ? _ref : _ref2\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? TabScrollButton.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The direction the button should indicate.\n   */\n  direction: PropTypes.oneOf(['left', 'right']).isRequired,\n\n  /**\n   * If `true`, the component is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * The component orientation (layout flow direction).\n   */\n  orientation: PropTypes.oneOf(['horizontal', 'vertical']).isRequired,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default TabScrollButton;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}