{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\nexport function create() {\n  let props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ['all'];\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  const {\n      duration: durationOption = duration.standard,\n      easing: easingOption = easing.easeInOut,\n      delay = 0\n    } = options,\n    other = _objectWithoutPropertiesLoose(options, [\"duration\", \"easing\", \"delay\"]);\n  if (process.env.NODE_ENV !== 'production') {\n    const isString = value => typeof value === 'string'; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n    const isNumber = value => !isNaN(parseFloat(value));\n    if (!isString(props) && !Array.isArray(props)) {\n      console.error('Material-UI: Argument \"props\" must be a string or Array.');\n    }\n    if (!isNumber(durationOption) && !isString(durationOption)) {\n      console.error(`Material-UI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n    }\n    if (!isString(easingOption)) {\n      console.error('Material-UI: Argument \"easing\" must be a string.');\n    }\n    if (!isNumber(delay) && !isString(delay)) {\n      console.error('Material-UI: Argument \"delay\" must be a number or a string.');\n    }\n    if (Object.keys(other).length !== 0) {\n      console.error(`Material-UI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n    }\n  }\n  return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n}\nexport function getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n  const constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}","map":{"version":3,"names":["_objectWithoutPropertiesLoose","easing","easeInOut","easeOut","easeIn","sharp","duration","shortest","shorter","short","standard","complex","enteringScreen","leavingScreen","formatMs","milliseconds","Math","round","create","props","options","durationOption","easingOption","delay","other","process","env","NODE_ENV","isString","value","isNumber","isNaN","parseFloat","Array","isArray","console","error","Object","keys","length","join","map","animatedProp","getAutoHeightDuration","height","constant"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/styles/transitions.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\n// Follow https://material.google.com/motion/duration-easing.html#duration-easing-natural-easing-curves\n// to learn the context in which each easing should be used.\nexport const easing = {\n  // This is the most common easing curve.\n  easeInOut: 'cubic-bezier(0.4, 0, 0.2, 1)',\n  // Objects enter the screen at full velocity from off-screen and\n  // slowly decelerate to a resting point.\n  easeOut: 'cubic-bezier(0.0, 0, 0.2, 1)',\n  // Objects leave the screen at full velocity. They do not decelerate when off-screen.\n  easeIn: 'cubic-bezier(0.4, 0, 1, 1)',\n  // The sharp curve is used by objects that may return to the screen at any time.\n  sharp: 'cubic-bezier(0.4, 0, 0.6, 1)'\n}; // Follow https://material.io/guidelines/motion/duration-easing.html#duration-easing-common-durations\n// to learn when use what timing\n\nexport const duration = {\n  shortest: 150,\n  shorter: 200,\n  short: 250,\n  // most basic recommended timing\n  standard: 300,\n  // this is to be used in complex animations\n  complex: 375,\n  // recommended when something is entering screen\n  enteringScreen: 225,\n  // recommended when something is leaving screen\n  leavingScreen: 195\n};\n\nfunction formatMs(milliseconds) {\n  return `${Math.round(milliseconds)}ms`;\n}\n\nexport function create(props = ['all'], options = {}) {\n  const {\n    duration: durationOption = duration.standard,\n    easing: easingOption = easing.easeInOut,\n    delay = 0\n  } = options,\n        other = _objectWithoutPropertiesLoose(options, [\"duration\", \"easing\", \"delay\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    const isString = value => typeof value === 'string'; // IE11 support, replace with Number.isNaN\n    // eslint-disable-next-line no-restricted-globals\n\n\n    const isNumber = value => !isNaN(parseFloat(value));\n\n    if (!isString(props) && !Array.isArray(props)) {\n      console.error('Material-UI: Argument \"props\" must be a string or Array.');\n    }\n\n    if (!isNumber(durationOption) && !isString(durationOption)) {\n      console.error(`Material-UI: Argument \"duration\" must be a number or a string but found ${durationOption}.`);\n    }\n\n    if (!isString(easingOption)) {\n      console.error('Material-UI: Argument \"easing\" must be a string.');\n    }\n\n    if (!isNumber(delay) && !isString(delay)) {\n      console.error('Material-UI: Argument \"delay\" must be a number or a string.');\n    }\n\n    if (Object.keys(other).length !== 0) {\n      console.error(`Material-UI: Unrecognized argument(s) [${Object.keys(other).join(',')}].`);\n    }\n  }\n\n  return (Array.isArray(props) ? props : [props]).map(animatedProp => `${animatedProp} ${typeof durationOption === 'string' ? durationOption : formatMs(durationOption)} ${easingOption} ${typeof delay === 'string' ? delay : formatMs(delay)}`).join(',');\n}\nexport function getAutoHeightDuration(height) {\n  if (!height) {\n    return 0;\n  }\n\n  const constant = height / 36; // https://www.wolframalpha.com/input/?i=(4+%2B+15+*+(x+%2F+36+)+**+0.25+%2B+(x+%2F+36)+%2F+5)+*+10\n\n  return Math.round((4 + 15 * constant ** 0.25 + constant / 5) * 10);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}