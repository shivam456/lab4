{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`position${capitalize(styleProps.position)}`], styleProps.disablePointerEvents === true && styles.disablePointerEvents, styleProps.variant === 'filled' && styles.filled), styles.root || {});\n};\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePointerEvents,\n    position,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, 'hiddenLabel', 'sizeSmall']\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\nconst InputAdornmentRoot = experimentalStyled('div', {}, {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(_ref => {\n  let {\n    theme,\n    styleProps\n  } = _ref;\n  return _extends({\n    display: 'flex',\n    height: '0.01em',\n    // Fix IE11 flexbox alignment. To remove at some point.\n    maxHeight: '2em',\n    alignItems: 'center',\n    whiteSpace: 'nowrap',\n    color: theme.palette.action.active\n  }, styleProps.variant === 'filled' && {\n    // Styles applied to the root element if `variant=\"filled\"`.\n    [`&.${inputAdornmentClasses.positionStart}&:not(.Mui-hiddenLabel)`]: {\n      marginTop: 16\n    }\n  }, styleProps.position === 'start' && {\n    // Styles applied to the root element if `position=\"start\"`.\n    marginRight: 8\n  }, styleProps.position === 'end' && {\n    // Styles applied to the root element if `position=\"end\"`.\n    marginLeft: 8\n  }, styleProps.disablePointerEvents === true && {\n    // Styles applied to the root element if `disablePointerEvents={true}`.\n    pointerEvents: 'none'\n  });\n});\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n  const {\n      children,\n      className,\n      component = 'div',\n      disablePointerEvents = false,\n      disableTypography = false,\n      position,\n      variant: variantProp\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n  const styleProps = _extends({}, props, {\n    disablePointerEvents,\n    position,\n    variant: variantProp\n  });\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n    styleProps.variant = variant;\n  }\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      styleProps: styleProps,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ? /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","capitalize","Typography","FormControlContext","useFormControl","experimentalStyled","inputAdornmentClasses","getInputAdornmentUtilityClass","useThemeProps","jsx","_jsx","jsxs","_jsxs","overridesResolver","props","styles","styleProps","position","disablePointerEvents","variant","filled","root","useUtilityClasses","classes","slots","InputAdornmentRoot","name","slot","theme","display","height","maxHeight","alignItems","whiteSpace","color","palette","action","active","positionStart","marginTop","marginRight","marginLeft","pointerEvents","InputAdornment","forwardRef","inProps","ref","children","className","component","disableTypography","variantProp","other","muiFormControl","process","env","NODE_ENV","console","error","Provider","value","as","Fragment","dangerouslySetInnerHTML","__html","propTypes","node","object","string","elementType","bool","oneOf","sx"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/InputAdornment/InputAdornment.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport capitalize from '../utils/capitalize';\nimport Typography from '../Typography';\nimport FormControlContext, { useFormControl } from '../FormControl/FormControlContext';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport inputAdornmentClasses, { getInputAdornmentUtilityClass } from './inputAdornmentClasses';\nimport useThemeProps from '../styles/useThemeProps';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`position${capitalize(styleProps.position)}`], styleProps.disablePointerEvents === true && styles.disablePointerEvents, styleProps.variant === 'filled' && styles.filled), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    disablePointerEvents,\n    position,\n    variant\n  } = styleProps;\n  const slots = {\n    root: ['root', disablePointerEvents && 'disablePointerEvents', position && `position${capitalize(position)}`, variant, 'hiddenLabel', 'sizeSmall']\n  };\n  return composeClasses(slots, getInputAdornmentUtilityClass, classes);\n};\n\nconst InputAdornmentRoot = experimentalStyled('div', {}, {\n  name: 'MuiInputAdornment',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  display: 'flex',\n  height: '0.01em',\n  // Fix IE11 flexbox alignment. To remove at some point.\n  maxHeight: '2em',\n  alignItems: 'center',\n  whiteSpace: 'nowrap',\n  color: theme.palette.action.active\n}, styleProps.variant === 'filled' && {\n  // Styles applied to the root element if `variant=\"filled\"`.\n  [`&.${inputAdornmentClasses.positionStart}&:not(.Mui-hiddenLabel)`]: {\n    marginTop: 16\n  }\n}, styleProps.position === 'start' && {\n  // Styles applied to the root element if `position=\"start\"`.\n  marginRight: 8\n}, styleProps.position === 'end' && {\n  // Styles applied to the root element if `position=\"end\"`.\n  marginLeft: 8\n}, styleProps.disablePointerEvents === true && {\n  // Styles applied to the root element if `disablePointerEvents={true}`.\n  pointerEvents: 'none'\n}));\nconst InputAdornment = /*#__PURE__*/React.forwardRef(function InputAdornment(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiInputAdornment'\n  });\n\n  const {\n    children,\n    className,\n    component = 'div',\n    disablePointerEvents = false,\n    disableTypography = false,\n    position,\n    variant: variantProp\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"component\", \"disablePointerEvents\", \"disableTypography\", \"position\", \"variant\"]);\n\n  const styleProps = _extends({}, props, {\n    disablePointerEvents,\n    position,\n    variant: variantProp\n  });\n\n  const muiFormControl = useFormControl() || {};\n  let variant = variantProp;\n\n  if (variantProp && muiFormControl.variant) {\n    if (process.env.NODE_ENV !== 'production') {\n      if (variantProp === muiFormControl.variant) {\n        console.error('Material-UI: The `InputAdornment` variant infers the variant prop ' + 'you do not have to provide one.');\n      }\n    }\n  }\n\n  if (muiFormControl && !variant) {\n    variant = muiFormControl.variant;\n    styleProps.variant = variant;\n  }\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsx(FormControlContext.Provider, {\n    value: null,\n    children: /*#__PURE__*/_jsx(InputAdornmentRoot, _extends({\n      as: component,\n      styleProps: styleProps,\n      className: clsx(classes.root, className),\n      ref: ref\n    }, other, {\n      children: typeof children === 'string' && !disableTypography ? /*#__PURE__*/_jsx(Typography, {\n        color: \"textSecondary\",\n        children: children\n      }) : /*#__PURE__*/_jsxs(React.Fragment, {\n        children: [position === 'start' ?\n        /*#__PURE__*/\n\n        /* notranslate needed while Google Translate will not fix zero-width space issue */\n\n        /* eslint-disable-next-line react/no-danger */\n        _jsx(\"span\", {\n          className: \"notranslate\",\n          dangerouslySetInnerHTML: {\n            __html: '&#8203;'\n          }\n        }) : null, children]\n      })\n    }))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? InputAdornment.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * Disable pointer events on the root.\n   * This allows for the content of the adornment to focus the `input` on click.\n   * @default false\n   */\n  disablePointerEvents: PropTypes.bool,\n\n  /**\n   * If children is a string then disable wrapping in a Typography component.\n   * @default false\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * The position this adornment should appear relative to the `Input`.\n   */\n  position: PropTypes.oneOf(['end', 'start']),\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The variant to use.\n   * Note: If you are using the `TextField` component or the `FormControl` component\n   * you do not have to set this manually.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default InputAdornment;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}