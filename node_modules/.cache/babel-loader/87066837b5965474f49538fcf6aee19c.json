{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/DashboardNavbar.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Hidden, IconButton, Toolbar } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { FhirClientContext } from '../FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardNavbars = props => {\n  const [notifications] = [1, 1];\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), props.given.join(' ') + ' ' + props.family + notifications, /*#__PURE__*/_jsxDEV(Hidden, {\n        lgUp: true,\n        children: /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(MenuIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DashboardNavbars;\nexport default class DashboardNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  } // this loader is used for\n\n\n  componentDidMount() {\n    const client = this.context.client;\n    console.log(client);\n    this._loader = client.patient.read().then(patient => {\n      this.setState({\n        patient,\n        loading: false,\n        error: null\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      console.log(error.message);\n      return error.message;\n    }\n\n    const entry = patient.name.find(nameRecord => nameRecord.use === 'official') || [0];\n    return /*#__PURE__*/_jsxDEV(DashboardNavbars, { ...entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 14\n    }, this);\n  }\n\n}\nDashboardNavbar.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbars\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/DashboardNavbar.js"],"names":["React","Link","RouterLink","AppBar","Hidden","IconButton","Toolbar","MenuIcon","FhirClientContext","DashboardNavbars","props","notifications","given","join","family","DashboardNavbar","Component","constructor","state","loading","patient","error","componentDidMount","client","context","console","log","_loader","read","then","setState","catch","render","message","entry","name","find","nameRecord","use","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAI,IAAIC,UAAjB,QAAmC,kBAAnC;AACA,SACEC,MADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,OAJF,QAKO,mBALP;AAMA,OAAOC,QAAP,MAAqB,yBAArB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,aAAD,IAAkB,CAAC,CAAD,EAAI,CAAJ,CAAxB;AAEA,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAE,CADb;AAAA,2BAGE,QAAC,OAAD;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,EAAE,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,cADF,EAGGD,KAAK,CAACE,KAAN,CAAYC,IAAZ,CAAiB,GAAjB,IAAwB,GAAxB,GAA8BH,KAAK,CAACI,MAApC,GAA6CH,aAHhD,eAIE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,+BACE,QAAC,UAAD;AACE,UAAA,KAAK,EAAC,SADR;AAAA,iCAGE,QAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CArBD;;KAAMF,gB;AAuBN,eAAe,MAAMM,eAAN,SAA8Bf,KAAK,CAACgB,SAApC,CAA8C;AAGzDC,EAAAA,WAAW,CAACP,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKQ,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD,GAVwD,CAWzD;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,KAAKC,OAAL,CAAaD,MAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SAAKI,OAAL,GAAeJ,MAAM,CAACH,OAAP,CACZQ,IADY,GAEZC,IAFY,CAEPT,OAAO,IAAI;AACf,WAAKU,QAAL,CAAc;AAAEV,QAAAA,OAAF;AAAWD,QAAAA,OAAO,EAAE,KAApB;AAA2BE,QAAAA,KAAK,EAAE;AAAlC,OAAd;AACD,KAJY,EAKZU,KALY,CAKNV,KAAK,IAAI;AACd,WAAKS,QAAL,CAAc;AAAET,QAAAA,KAAF;AAASF,QAAAA,OAAO,EAAE;AAAlB,OAAd;AACD,KAPY,CAAf;AAQD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASF,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA8B,KAAKF,KAAzC;;AAEA,QAAIC,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AACD,QAAIE,KAAJ,EAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACY,OAAlB;AACA,aAAOZ,KAAK,CAACY,OAAb;AACD;;AACD,UAAMC,KAAK,GAAGd,OAAO,CAACe,IAAR,CAAaC,IAAb,CAAkBC,UAAU,IAAIA,UAAU,CAACC,GAAX,KAAmB,UAAnD,KAAkE,CAAC,CAAD,CAAhF;AACA,wBAAO,QAAC,gBAAD,OAAsBJ;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAtCwD;AAAxCnB,e,CACVwB,W,GAAc/B,iB","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Hidden,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport { FhirClientContext } from '../FhirClientContext';\n\nconst DashboardNavbars = (props) => {\n  const [notifications] = [1, 1];\n\n  return (\n    <AppBar\n      elevation={0}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n        </RouterLink>\n        {props.given.join(' ') + ' ' + props.family + notifications}\n        <Hidden lgUp>\n          <IconButton\n            color=\"inherit\"\n          >\n            <MenuIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default class DashboardNavbar extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        patient: null,\n        error: null\n      };\n    }\n    // this loader is used for\n\n    componentDidMount() {\n      const client = this.context.client;\n      console.log(client);\n      this._loader = client.patient\n        .read()\n        .then(patient => {\n          this.setState({ patient, loading: false, error: null });\n        })\n        .catch(error => {\n          this.setState({ error, loading: false });\n        });\n    }\n\n    render() {\n      const { error, loading, patient } = this.state;\n\n      if (loading) {\n        return null;\n      }\n      if (error) {\n        console.log(error.message);\n        return error.message;\n      }\n      const entry = patient.name.find(nameRecord => nameRecord.use === 'official') || [0];\n      return <DashboardNavbars {...entry} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}