{"ast":null,"code":"var _jsxFileName = \"/Users/shivamrustogi/Documents/GitHub/lab4/src/components/medication/Medication.js\";\nimport { Helmet } from 'react-helmet';\nimport React from 'react';\nimport { Box, Container, CircularProgress } from '@material-ui/core';\nimport MedicationList from 'src/components/medication/MedicationList';\nimport { FhirClientContext } from '../../FhirClientContext';\nimport { fhirClient } from \"../../utils/fhirClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Medications = meds => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Helmet, {\n    children: /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Medications | Material Kit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      py: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(MedicationList, {\n          meds: meds\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n_c = Medications;\nexport default class Medication extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  }\n  async componentDidMount() {\n    const client = this.context.client;\n    const queryMed = new URLSearchParams();\n    queryMed.set('patient', client.patient.id);\n    console.log(client);\n\n    /* START TO EDIT YOUR CODE HERE: Task 2 use the SMART API \n    to get the medications requests for the patient. It can be stopped or ongoing */\n\n    const response = await fhirClient.search({\n      type: \"MedicationRequest\"\n    });\n    const filteredData = response.data.entry.map(entry => {\n      return {\n        name: entry.resource.medicationReference.display\n      };\n    });\n    meds = filteredData;\n\n    /* END OF WHERE YOU NEED TO EDIT YOUR CODE */\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      meds\n    } = this.state;\n    if (loading) {\n      return /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 16\n      }, this);\n    }\n    if (error) {\n      console.log(error.message);\n      return error.message;\n    }\n    return /*#__PURE__*/_jsxDEV(Medications, {\n      ...meds\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 14\n    }, this);\n  }\n}\nMedication.contextType = FhirClientContext;\nvar _c;\n$RefreshReg$(_c, \"Medications\");","map":{"version":3,"names":["Helmet","React","Box","Container","CircularProgress","MedicationList","FhirClientContext","fhirClient","Medications","meds","backgroundColor","minHeight","py","pt","Medication","Component","constructor","props","state","loading","patient","error","componentDidMount","client","context","queryMed","URLSearchParams","set","id","console","log","response","search","type","filteredData","data","entry","map","name","resource","medicationReference","display","render","message","contextType"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/src/components/medication/Medication.js"],"sourcesContent":["import { Helmet } from 'react-helmet';\nimport React from 'react';\nimport { Box, Container, CircularProgress } from '@material-ui/core';\nimport MedicationList from 'src/components/medication/MedicationList';\nimport { FhirClientContext } from '../../FhirClientContext';\nimport { fhirClient } from \"../../utils/fhirClient\";\nconst Medications = (meds) => (\n  <>\n    <Helmet>\n      <title>Medications | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Box sx={{ pt: 3 }}>\n          <MedicationList meds={meds} />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default class Medication extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        patient: null,\n        error: null\n      };\n    }\n    \n\n    async componentDidMount() {\n      const client = this.context.client;\n      const queryMed = new URLSearchParams();\n      queryMed.set('patient', client.patient.id);\n      console.log(client);\n\n/* START TO EDIT YOUR CODE HERE: Task 2 use the SMART API \nto get the medications requests for the patient. It can be stopped or ongoing */ \n\n\n  const response = await fhirClient.search({\n    type: \"MedicationRequest\",\n  });\n\n  const filteredData = response.data.entry.map((entry) => {\n    return {\n      name: entry.resource.medicationReference.display,\n    };\n  });\n\n  meds = filteredData;\n\n /* END OF WHERE YOU NEED TO EDIT YOUR CODE */ \n\n    }\n\n    render() {\n      const { error, loading, meds } = this.state;\n\n      if (loading) {\n        return <CircularProgress />;\n      }\n      if (error) {\n        console.log(error.message);\n        return error.message;\n      }\n      return <Medications {...meds} />;\n    }\n}\n"],"mappings":";AAAA,SAASA,MAAM,QAAQ,cAAc;AACrC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,GAAG,EAAEC,SAAS,EAAEC,gBAAgB,QAAQ,mBAAmB;AACpE,OAAOC,cAAc,MAAM,0CAA0C;AACrE,SAASC,iBAAiB,QAAQ,yBAAyB;AAC3D,SAASC,UAAU,QAAQ,wBAAwB;AAAC;AAAA;AACpD,MAAMC,WAAW,GAAIC,IAAI,iBACvB;EAAA,wBACE,QAAC,MAAM;IAAA,uBACL;MAAA,UAAO;IAA0B;MAAA;MAAA;MAAA;IAAA;EAAQ;IAAA;IAAA;IAAA;EAAA,QAClC,eACT,QAAC,GAAG;IACF,EAAE,EAAE;MACFC,eAAe,EAAE,oBAAoB;MACrCC,SAAS,EAAE,MAAM;MACjBC,EAAE,EAAE;IACN,CAAE;IAAA,uBAEF,QAAC,SAAS;MAAC,QAAQ,EAAE,KAAM;MAAA,uBACzB,QAAC,GAAG;QAAC,EAAE,EAAE;UAAEC,EAAE,EAAE;QAAE,CAAE;QAAA,uBACjB,QAAC,cAAc;UAAC,IAAI,EAAEJ;QAAK;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA;IAC1B;MAAA;MAAA;MAAA;IAAA;EACI;IAAA;IAAA;IAAA;EAAA,QACR;AAAA,gBAET;AAAC,KAnBID,WAAW;AAqBjB,eAAe,MAAMM,UAAU,SAASb,KAAK,CAACc,SAAS,CAAC;EAGpDC,WAAW,CAACC,KAAK,EAAE;IACjB,KAAK,CAACA,KAAK,CAAC;IACZ,IAAI,CAACC,KAAK,GAAG;MACXC,OAAO,EAAE,IAAI;MACbC,OAAO,EAAE,IAAI;MACbC,KAAK,EAAE;IACT,CAAC;EACH;EAGA,MAAMC,iBAAiB,GAAG;IACxB,MAAMC,MAAM,GAAG,IAAI,CAACC,OAAO,CAACD,MAAM;IAClC,MAAME,QAAQ,GAAG,IAAIC,eAAe,EAAE;IACtCD,QAAQ,CAACE,GAAG,CAAC,SAAS,EAAEJ,MAAM,CAACH,OAAO,CAACQ,EAAE,CAAC;IAC1CC,OAAO,CAACC,GAAG,CAACP,MAAM,CAAC;;IAEzB;AACA;;IAGE,MAAMQ,QAAQ,GAAG,MAAMxB,UAAU,CAACyB,MAAM,CAAC;MACvCC,IAAI,EAAE;IACR,CAAC,CAAC;IAEF,MAAMC,YAAY,GAAGH,QAAQ,CAACI,IAAI,CAACC,KAAK,CAACC,GAAG,CAAED,KAAK,IAAK;MACtD,OAAO;QACLE,IAAI,EAAEF,KAAK,CAACG,QAAQ,CAACC,mBAAmB,CAACC;MAC3C,CAAC;IACH,CAAC,CAAC;IAEFhC,IAAI,GAAGyB,YAAY;;IAEpB;EAEG;;EAEAQ,MAAM,GAAG;IACP,MAAM;MAAErB,KAAK;MAAEF,OAAO;MAAEV;IAAK,CAAC,GAAG,IAAI,CAACS,KAAK;IAE3C,IAAIC,OAAO,EAAE;MACX,oBAAO,QAAC,gBAAgB;QAAA;QAAA;QAAA;MAAA,QAAG;IAC7B;IACA,IAAIE,KAAK,EAAE;MACTQ,OAAO,CAACC,GAAG,CAACT,KAAK,CAACsB,OAAO,CAAC;MAC1B,OAAOtB,KAAK,CAACsB,OAAO;IACtB;IACA,oBAAO,QAAC,WAAW;MAAA,GAAKlC;IAAI;MAAA;MAAA;MAAA;IAAA,QAAI;EAClC;AACJ;AAnDqBK,UAAU,CACpB8B,WAAW,GAAGtC,iBAAiB;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}