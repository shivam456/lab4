{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/pages/ProductList.js\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container, Grid } from '@material-ui/core';\nimport ProductCard from 'src/components/product//ProductCard';\nimport products from 'src/__mocks__/products';\nimport { FhirClientContext } from '../FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Products = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Helmet, {\n    children: /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Products | Material Kit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      py: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: false,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          pt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 3,\n          children: products.map(product => /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            lg: 4,\n            md: 6,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ProductCard, {\n              product: product\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, this)\n          }, product.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c = Products;\nexport default class ProductList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  } // this loader is used for\n\n\n  componentDidMount() {\n    const client = this.context.client;\n    const queryTeam = new URLSearchParams();\n    queryTeam.set('patient', client.patient.id);\n    console.log(client);\n    this._loader = client.request('Careteam?' + queryTeam, {\n      pageLimit: 0,\n      // get all pages\n      flat: true // return flat array of Observation resources\n\n    }).then(patient => {\n      this.setState({\n        patient,\n        loading: false,\n        error: null\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n    console.log(patient);\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      console.log(error.message);\n      return error.message;\n    }\n\n    const entry = 'test';\n    return /*#__PURE__*/_jsxDEV(Products, { ...entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 14\n    }, this);\n  }\n\n}\nProductList.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"Products\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/pages/ProductList.js"],"names":["React","Helmet","Box","Container","Grid","ProductCard","products","FhirClientContext","Products","backgroundColor","minHeight","py","pt","map","product","id","ProductList","Component","constructor","props","state","loading","patient","error","componentDidMount","client","context","queryTeam","URLSearchParams","set","console","log","_loader","request","pageLimit","flat","then","setState","catch","render","message","entry","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport {\n  Box,\n  Container,\n  Grid\n} from '@material-ui/core';\nimport ProductCard from 'src/components/product//ProductCard';\nimport products from 'src/__mocks__/products';\nimport { FhirClientContext } from '../FhirClientContext';\n\nconst Products = () => (\n  <>\n    <Helmet>\n      <title>Products | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth={false}>\n        <Box sx={{ pt: 3 }}>\n          <Grid\n            container\n            spacing={3}\n          >\n            {products.map((product) => (\n              <Grid\n                item\n                key={product.id}\n                lg={4}\n                md={6}\n                xs={12}\n              >\n                <ProductCard product={product} />\n              </Grid>\n            ))}\n          </Grid>\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default class ProductList extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        patient: null,\n        error: null\n      };\n    }\n    // this loader is used for\n\n    componentDidMount() {\n      const client = this.context.client;\n      const queryTeam = new URLSearchParams();\n      queryTeam.set('patient', client.patient.id);\n      console.log(client);\n      this._loader = client.request('Careteam?' + queryTeam, {\n        pageLimit: 0, // get all pages\n        flat: true // return flat array of Observation resources\n      }).then(patient => {\n        this.setState({ patient, loading: false, error: null });\n      })\n        .catch(error => {\n          this.setState({ error, loading: false });\n        });\n    }\n\n    render() {\n      const { error, loading, patient } = this.state;\n      console.log(patient);\n\n      if (loading) {\n        return null;\n      }\n      if (error) {\n        console.log(error.message);\n        return error.message;\n      }\n      const entry = 'test';\n\n      return <Products {...entry} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}