{"ast":null,"code":"var _jsxFileName = \"/Users/shivamrustogi/Documents/GitHub/lab4/src/components/FhirClientProvider.js\";\nimport React from 'react';\nimport { oauth2 as SMART } from 'fhirclient';\nimport { FhirClientContext } from '../FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class FhirClientProvider extends React.Component {\n  componentDidMount() {\n    SMART.ready().then(client => this.setState({\n      client\n    }), error => this.setState({\n      error\n    }));\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(FhirClientContext.Provider, {\n      value: this.state || {},\n      children: /*#__PURE__*/_jsxDEV(FhirClientContext.Consumer, {\n        children: _ref => {\n          let {\n            client,\n            error\n          } = _ref;\n          // any error that SMART.ready() may have been rejected with\n          if (error) {\n            return /*#__PURE__*/_jsxDEV(\"pre\", {\n              children: error.stack\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 22\n            }, this);\n          }\n\n          // if client is already available render the subtree\n          if (client) {\n            return this.props.children;\n          }\n\n          // client is undefined until SMART.ready() is fulfilled\n          return 'Authorizing...';\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this);\n  }\n}","map":{"version":3,"names":["React","oauth2","SMART","FhirClientContext","FhirClientProvider","Component","componentDidMount","ready","then","client","setState","error","render","state","stack","props","children"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/src/components/FhirClientProvider.js"],"sourcesContent":["import React from 'react';\nimport { oauth2 as SMART } from 'fhirclient';\nimport { FhirClientContext } from '../FhirClientContext';\n\nexport default class FhirClientProvider extends React.Component {\n  componentDidMount() {\n    SMART.ready().then(\n      (client) => this.setState({ client }),\n      (error) => this.setState({ error })\n    );\n  }\n\n  render() {\n    return (\n      <FhirClientContext.Provider value={this.state || {}}>\n        <FhirClientContext.Consumer>\n          {({ client, error }) => {\n            // any error that SMART.ready() may have been rejected with\n            if (error) {\n              return <pre>{error.stack}</pre>;\n            }\n\n            // if client is already available render the subtree\n            if (client) {\n              return this.props.children;\n            }\n\n            // client is undefined until SMART.ready() is fulfilled\n            return 'Authorizing...';\n          }}\n        </FhirClientContext.Consumer>\n      </FhirClientContext.Provider>\n    );\n  }\n}\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,IAAIC,KAAK,QAAQ,YAAY;AAC5C,SAASC,iBAAiB,QAAQ,sBAAsB;AAAC;AAEzD,eAAe,MAAMC,kBAAkB,SAASJ,KAAK,CAACK,SAAS,CAAC;EAC9DC,iBAAiB,GAAG;IAClBJ,KAAK,CAACK,KAAK,EAAE,CAACC,IAAI,CACfC,MAAM,IAAK,IAAI,CAACC,QAAQ,CAAC;MAAED;IAAO,CAAC,CAAC,EACpCE,KAAK,IAAK,IAAI,CAACD,QAAQ,CAAC;MAAEC;IAAM,CAAC,CAAC,CACpC;EACH;EAEAC,MAAM,GAAG;IACP,oBACE,QAAC,iBAAiB,CAAC,QAAQ;MAAC,KAAK,EAAE,IAAI,CAACC,KAAK,IAAI,CAAC,CAAE;MAAA,uBAClD,QAAC,iBAAiB,CAAC,QAAQ;QAAA,UACxB,QAAuB;UAAA,IAAtB;YAAEJ,MAAM;YAAEE;UAAM,CAAC;UACjB;UACA,IAAIA,KAAK,EAAE;YACT,oBAAO;cAAA,UAAMA,KAAK,CAACG;YAAK;cAAA;cAAA;cAAA;YAAA,QAAO;UACjC;;UAEA;UACA,IAAIL,MAAM,EAAE;YACV,OAAO,IAAI,CAACM,KAAK,CAACC,QAAQ;UAC5B;;UAEA;UACA,OAAO,gBAAgB;QACzB;MAAC;QAAA;QAAA;QAAA;MAAA;IAC0B;MAAA;MAAA;MAAA;IAAA,QACF;EAEjC;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}