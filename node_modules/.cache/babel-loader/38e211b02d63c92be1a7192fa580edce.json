{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/DashboardNavbar.js\";\nimport React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Badge, Box, Hidden, IconButton, Toolbar } from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from './Logo';\nimport { FhirClientContext } from '../FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardNavbars = props => {\n  const [notifications] = [1, 1];\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [/*#__PURE__*/_jsxDEV(RouterLink, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), props.given.join(' ') + ' ' + props.family, /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          flexGrow: 1\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n        lgDown: true,\n        children: [/*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(Badge, {\n            badgeContent: notifications.length,\n            color: \"primary\",\n            variant: \"dot\",\n            children: /*#__PURE__*/_jsxDEV(NotificationsIcon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n          color: \"inherit\",\n          children: /*#__PURE__*/_jsxDEV(InputIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DashboardNavbars;\nexport default class DashboardNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  } // this loader is used for\n\n\n  componentDidMount() {\n    const client = this.context.client;\n    console.log(client);\n    this._loader = client.patient.read().then(patient => {\n      this.setState({\n        patient,\n        loading: false,\n        error: null\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      console.log(error.message);\n      return error.message;\n    }\n\n    const entry = patient.name.find(nameRecord => nameRecord.use === 'official') || [0];\n    return /*#__PURE__*/_jsxDEV(DashboardNavbars, { ...entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 14\n    }, this);\n  }\n\n}\nDashboardNavbar.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbars\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/DashboardNavbar.js"],"names":["React","Link","RouterLink","AppBar","Badge","Box","Hidden","IconButton","Toolbar","NotificationsIcon","InputIcon","Logo","FhirClientContext","DashboardNavbars","props","notifications","given","join","family","flexGrow","length","DashboardNavbar","Component","constructor","state","loading","patient","error","componentDidMount","client","context","console","log","_loader","read","then","setState","catch","render","message","entry","name","find","nameRecord","use","contextType"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link as RouterLink } from 'react-router-dom';\nimport {\n  AppBar,\n  Badge,\n  Box,\n  Hidden,\n  IconButton,\n  Toolbar\n} from '@material-ui/core';\nimport NotificationsIcon from '@material-ui/icons/NotificationsOutlined';\nimport InputIcon from '@material-ui/icons/Input';\nimport Logo from './Logo';\nimport { FhirClientContext } from '../FhirClientContext';\n\nconst DashboardNavbars = (props) => {\n  const [notifications] = [1, 1];\n\n  return (\n    <AppBar\n      elevation={0}\n    >\n      <Toolbar>\n        <RouterLink to=\"/\">\n          <Logo />\n        </RouterLink>\n        {props.given.join(' ') + ' ' + props.family}\n        <Box sx={{ flexGrow: 1 }} />\n        <Hidden lgDown>\n          <IconButton color=\"inherit\">\n            <Badge\n              badgeContent={notifications.length}\n              color=\"primary\"\n              variant=\"dot\"\n            >\n              <NotificationsIcon />\n            </Badge>\n          </IconButton>\n          <IconButton color=\"inherit\">\n            <InputIcon />\n          </IconButton>\n        </Hidden>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default class DashboardNavbar extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        patient: null,\n        error: null\n      };\n    }\n    // this loader is used for\n\n    componentDidMount() {\n      const client = this.context.client;\n      console.log(client);\n      this._loader = client.patient\n        .read()\n        .then(patient => {\n          this.setState({ patient, loading: false, error: null });\n        })\n        .catch(error => {\n          this.setState({ error, loading: false });\n        });\n    }\n\n    render() {\n      const { error, loading, patient } = this.state;\n\n      if (loading) {\n        return null;\n      }\n      if (error) {\n        console.log(error.message);\n        return error.message;\n      }\n      const entry = patient.name.find(nameRecord => nameRecord.use === 'official') || [0];\n      return <DashboardNavbars {...entry} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}