{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/dashboard/Saless.js\";\nimport { Bar } from 'react-chartjs-2';\nimport React from 'react';\nimport { FhirClientContext } from '../FhirClientContext';\nimport FhirClientProvider from '../components/FhirClientProvider.js';\nimport { Box, Button, Card, CardContent, CardHeader, Divider, useTheme, colors } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Headerbanner(patient) {\n  return /*#__PURE__*/_jsxDEV(FhirClientProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.root,\n      children: \"hi\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, this);\n}\n\n_c = Headerbanner;\nexport default class Saless extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      patient: null,\n      error: null\n    };\n  } // this loader is used for\n\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      return error.message;\n    }\n\n    return /*#__PURE__*/_jsxDEV(Headerbanner, { ...patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 16\n    }, this);\n  }\n\n}\nSaless.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"Headerbanner\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/dashboard/Saless.js"],"names":["Bar","React","FhirClientContext","FhirClientProvider","Box","Button","Card","CardContent","CardHeader","Divider","useTheme","colors","ArrowDropDownIcon","ArrowRightIcon","Headerbanner","patient","classes","root","Saless","Component","constructor","props","state","loading","error","render","message","contextType"],"mappings":";AAAA,SAASA,GAAT,QAAoB,iBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAOC,kBAAP,MAA+B,qCAA/B;AACA,SACEC,GADF,EAEEC,MAFF,EAGEC,IAHF,EAIEC,WAJF,EAKEC,UALF,EAMEC,OANF,EAOEC,QAPF,EAQEC,MARF,QASO,mBATP;AAUA,OAAOC,iBAAP,MAA8B,kCAA9B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAE7B,sBACA,QAAC,kBAAD;AAAA,2BAGE;AAAK,MAAA,SAAS,EAAEC,OAAO,CAACC,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADA;AAUD;;KAZQH,Y;AAcT,eAAe,MAAMI,MAAN,SAAqBjB,KAAK,CAACkB,SAA3B,CAAqC;AAEhDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,KADA;AAETR,MAAAA,OAAO,EAAE,IAFA;AAGTS,MAAAA,KAAK,EAAE;AAHE,KAAb;AAKH,GAT+C,CAUhD;;;AACAC,EAAAA,MAAM,GAAG;AACL,UAAM;AAAED,MAAAA,KAAF;AAASD,MAAAA,OAAT;AAAkBR,MAAAA;AAAlB,QAA8B,KAAKO,KAAzC;;AAEA,QAAIC,OAAJ,EAAa;AACT,aAAO,IAAP;AACH;;AACD,QAAIC,KAAJ,EAAW;AACP,aAAOA,KAAK,CAACE,OAAb;AACH;;AACD,wBAAO,QAAC,YAAD,OAAkBX;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;;AArB+C;AAA/BG,M,CACVS,W,GAAczB,iB","sourcesContent":["import { Bar } from 'react-chartjs-2';\nimport React from 'react';\nimport { FhirClientContext } from '../FhirClientContext';\nimport FhirClientProvider from '../components/FhirClientProvider.js';\nimport {\n  Box,\n  Button,\n  Card,\n  CardContent,\n  CardHeader,\n  Divider,\n  useTheme,\n  colors\n} from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport ArrowRightIcon from '@material-ui/icons/ArrowRight';\n\nfunction Headerbanner(patient) {\n\n  return (\n  <FhirClientProvider>\n\n\n    <div className={classes.root}>\n    hi\n    </div>\n\n  </FhirClientProvider>\n  );\n}\n\nexport default class Saless extends React.Component {\n    static contextType = FhirClientContext;\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            patient: null,\n            error: null\n        };\n    }\n    // this loader is used for\n    render() {\n        const { error, loading, patient } = this.state;\n\n        if (loading) {\n            return null;\n        }\n        if (error) {\n            return error.message;\n        }\n        return <Headerbanner {...patient} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}