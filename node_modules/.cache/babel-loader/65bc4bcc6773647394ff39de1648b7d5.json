{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/dashboard/Saless.js\";\nimport React from 'react';\nimport { FhirClientContext } from '../../FhirClientContext';\nimport FhirClientProvider from '../FhirClientProvider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Headerbanner(patient) {\n  console.log(patient);\n  return /*#__PURE__*/_jsxDEV(FhirClientProvider, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [patient.name, \"hi\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 5\n  }, this);\n}\n\n_c = Headerbanner;\nexport default class Saless extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: false,\n      patient: null,\n      error: null\n    };\n  }\n\n  componentDidMount() {\n    const client = this.context.client;\n    console.log(client.patient);\n    this.loader = client.patient.read().then(patient => {\n      this.setState({\n        patient,\n        loading: false,\n        error: null\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      return 'fuk';\n    }\n\n    return /*#__PURE__*/_jsxDEV(Headerbanner, { ...patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 14\n    }, this);\n  }\n\n}\nSaless.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"Headerbanner\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/components/dashboard/Saless.js"],"names":["React","FhirClientContext","FhirClientProvider","Headerbanner","patient","console","log","name","Saless","Component","constructor","props","state","loading","error","componentDidMount","client","context","loader","read","then","setState","catch","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,yBAAlC;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,sBACE,QAAC,kBAAD;AAAA,2BACE;AAAA,iBACGA,OAAO,CAACG,IADX;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;KAVQJ,Y;AAYT,eAAe,MAAMK,MAAN,SAAqBR,KAAK,CAACS,SAA3B,CAAqC;AAGhDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,KADE;AAEXT,MAAAA,OAAO,EAAE,IAFE;AAGXU,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,KAAKC,OAAL,CAAaD,MAA5B;AACAX,IAAAA,OAAO,CAACC,GAAR,CAAYU,MAAM,CAACZ,OAAnB;AACA,SAAKc,MAAL,GAAcF,MAAM,CAACZ,OAAP,CACXe,IADW,GAEXC,IAFW,CAENhB,OAAO,IAAI;AAAE,WAAKiB,QAAL,CAAc;AAAEjB,QAAAA,OAAF;AAAWS,QAAAA,OAAO,EAAE,KAApB;AAA2BC,QAAAA,KAAK,EAAE;AAAlC,OAAd;AAA0D,KAFjE,EAGXQ,KAHW,CAGLR,KAAK,IAAI;AAAE,WAAKO,QAAL,CAAc;AAAEP,QAAAA,KAAF;AAASD,QAAAA,OAAO,EAAE;AAAlB,OAAd;AAA2C,KAHjD,CAAd;AAID;;AAEDU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAET,MAAAA,KAAF;AAASD,MAAAA,OAAT;AAAkBT,MAAAA;AAAlB,QAA8B,KAAKQ,KAAzC;;AAEA,QAAIC,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AACD,QAAIC,KAAJ,EAAW;AACT,aAAO,KAAP;AACD;;AACD,wBAAO,QAAC,YAAD,OAAkBV;AAAlB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA/B+C;AAA/BI,M,CACVgB,W,GAAcvB,iB","sourcesContent":["import React from 'react';\nimport { FhirClientContext } from '../../FhirClientContext';\nimport FhirClientProvider from '../FhirClientProvider';\n\nfunction Headerbanner(patient) {\n  console.log(patient);\n  return (\n    <FhirClientProvider>\n      <div>\n        {patient.name}\n        hi\n      </div>\n    </FhirClientProvider>\n  );\n}\n\nexport default class Saless extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: false,\n        patient: null,\n        error: null\n      };\n    }\n\n    componentDidMount() {\n      const client = this.context.client;\n      console.log(client.patient);\n      this.loader = client.patient\n        .read()\n        .then(patient => { this.setState({ patient, loading: false, error: null }); })\n        .catch(error => { this.setState({ error, loading: false }); });\n    }\n\n    render() {\n      const { error, loading, patient } = this.state;\n\n      if (loading) {\n        return null;\n      }\n      if (error) {\n        return 'fuk';\n      }\n      return <Headerbanner {...patient} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}