{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/lab-4-react/src/components/dashboard/DashboardNavbar.js\";\nimport React from 'react';\nimport { AppBar, Toolbar } from '@material-ui/core';\nimport { FhirClientContext } from '../dashboard/FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DashboardNavbars = props => {\n  const [notifications] = [1, 1];\n  const name = props.name.find(nameRecord => nameRecord.use === 'official') || [0];\n  return /*#__PURE__*/_jsxDEV(AppBar, {\n    elevation: 0,\n    children: /*#__PURE__*/_jsxDEV(Toolbar, {\n      children: [name.given.join(' ') + ' ' + name.family + notifications, /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"Gender:\", props.gender]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [\"DOB:\", props.birthDate]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = DashboardNavbars;\nexport default class DashboardNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  } // this loader is used for\n\n\n  componentDidMount() {\n    const client = this.context.client;\n    console.log(client);\n    this._loader = client.patient.read().then(patient => {\n      this.setState({\n        patient,\n        loading: false,\n        error: null\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      console.log(error.message);\n      return error.message;\n    }\n\n    return /*#__PURE__*/_jsxDEV(DashboardNavbars, { ...patient\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }, this);\n  }\n\n}\nDashboardNavbar.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashboardNavbars\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/lab-4-react/src/components/dashboard/DashboardNavbar.js"],"names":["React","AppBar","Toolbar","FhirClientContext","DashboardNavbars","props","notifications","name","find","nameRecord","use","given","join","family","gender","birthDate","DashboardNavbar","Component","constructor","state","loading","patient","error","componentDidMount","client","context","console","log","_loader","read","then","setState","catch","render","message","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,MADF,EAEEC,OAFF,QAGO,mBAHP;AAIA,SAASC,iBAAT,QAAkC,gCAAlC;;;AAEA,MAAMC,gBAAgB,GAAIC,KAAD,IAAW;AAClC,QAAM,CAACC,aAAD,IAAkB,CAAC,CAAD,EAAI,CAAJ,CAAxB;AACA,QAAMC,IAAI,GAAGF,KAAK,CAACE,IAAN,CAAWC,IAAX,CAAgBC,UAAU,IAAIA,UAAU,CAACC,GAAX,KAAmB,UAAjD,KAAgE,CAAC,CAAD,CAA7E;AACA,sBACE,QAAC,MAAD;AACE,IAAA,SAAS,EAAE,CADb;AAAA,2BAGE,QAAC,OAAD;AAAA,iBACGH,IAAI,CAACI,KAAL,CAAWC,IAAX,CAAgB,GAAhB,IAAuB,GAAvB,GAA6BL,IAAI,CAACM,MAAlC,GAA2CP,aAD9C,eAEE;AAAA,8BAEID,KAAK,CAACS,MAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAME;AAAA,2BAEIT,KAAK,CAACU,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CApBD;;KAAMX,gB;AAsBN,eAAe,MAAMY,eAAN,SAA8BhB,KAAK,CAACiB,SAApC,CAA8C;AAGzDC,EAAAA,WAAW,CAACb,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKc,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD,GAVwD,CAWzD;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,KAAKC,OAAL,CAAaD,MAA5B;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYH,MAAZ;AACA,SAAKI,OAAL,GAAeJ,MAAM,CAACH,OAAP,CACZQ,IADY,GAEZC,IAFY,CAEPT,OAAO,IAAI;AACf,WAAKU,QAAL,CAAc;AAAEV,QAAAA,OAAF;AAAWD,QAAAA,OAAO,EAAE,KAApB;AAA2BE,QAAAA,KAAK,EAAE;AAAlC,OAAd;AACD,KAJY,EAKZU,KALY,CAKNV,KAAK,IAAI;AACd,WAAKS,QAAL,CAAc;AAAET,QAAAA,KAAF;AAASF,QAAAA,OAAO,EAAE;AAAlB,OAAd;AACD,KAPY,CAAf;AAQD;;AAEDa,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEX,MAAAA,KAAF;AAASF,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA8B,KAAKF,KAAzC;;AAEA,QAAIC,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AACD,QAAIE,KAAJ,EAAW;AACTI,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACY,OAAlB;AACA,aAAOZ,KAAK,CAACY,OAAb;AACD;;AACD,wBAAO,QAAC,gBAAD,OAAsBb;AAAtB;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AArCwD;AAAxCL,e,CACVmB,W,GAAchC,iB","sourcesContent":["import React from 'react';\nimport {\n  AppBar,\n  Toolbar\n} from '@material-ui/core';\nimport { FhirClientContext } from '../dashboard/FhirClientContext';\n\nconst DashboardNavbars = (props) => {\n  const [notifications] = [1, 1];\n  const name = props.name.find(nameRecord => nameRecord.use === 'official') || [0];\n  return (\n    <AppBar\n      elevation={0}\n    >\n      <Toolbar>\n        {name.given.join(' ') + ' ' + name.family + notifications}\n        <span>\n           Gender:\n           {props.gender}\n        </span>\n        <span>\n           DOB:\n           {props.birthDate}\n        </span>\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default class DashboardNavbar extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        patient: null,\n        error: null\n      };\n    }\n    // this loader is used for\n\n    componentDidMount() {\n      const client = this.context.client;\n      console.log(client);\n      this._loader = client.patient\n        .read()\n        .then(patient => {\n          this.setState({ patient, loading: false, error: null });\n        })\n        .catch(error => {\n          this.setState({ error, loading: false });\n        });\n    }\n\n    render() {\n      const { error, loading, patient } = this.state;\n\n      if (loading) {\n        return null;\n      }\n      if (error) {\n        console.log(error.message);\n        return error.message;\n      }\n      return <DashboardNavbars {...patient} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}