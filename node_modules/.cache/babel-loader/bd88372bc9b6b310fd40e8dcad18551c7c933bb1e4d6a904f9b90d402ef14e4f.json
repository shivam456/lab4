{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = (_ref, styles) => {\n  let {\n    styleProps\n  } = _ref;\n  return deepmerge(_extends({}, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled, {\n    [`& .${formLabelClasses.asterisk}`]: _extends({}, styles.asterisk)\n  }), styles.root || {});\n};\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\nexport const FormLabelRoot = experimentalStyled('label', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver\n})(_ref2 => {\n  let {\n    theme,\n    styleProps\n  } = _ref2;\n  return _extends({\n    color: theme.palette.text.secondary\n  }, theme.typography.body1, {\n    lineHeight: '1.4375em',\n    padding: 0,\n    '&.Mui-focused': {\n      color: theme.palette[styleProps.color].main\n    },\n    '&.Mui-disabled': {\n      color: theme.palette.text.disabled\n    },\n    '&.Mui-error': {\n      color: theme.palette.error.main\n    }\n  });\n});\nconst AsteriskComponent = experimentalStyled('span', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk'\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    '&.Mui-error': {\n      color: theme.palette.error.main\n    }\n  };\n});\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n  const {\n      children,\n      className,\n      component = 'label'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n  const styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      styleProps: styleProps,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormLabel;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","formControlState","useFormControl","capitalize","useThemeProps","experimentalStyled","formLabelClasses","getFormLabelUtilityClasses","jsxs","_jsxs","overridesResolver","styles","styleProps","color","colorSecondary","filled","asterisk","root","useUtilityClasses","classes","focused","disabled","error","required","slots","FormLabelRoot","name","slot","theme","palette","text","secondary","typography","body1","lineHeight","padding","main","AsteriskComponent","FormLabel","forwardRef","inProps","ref","props","children","className","component","other","muiFormControl","fcs","states","as","process","env","NODE_ENV","propTypes","node","object","string","oneOf","elementType","bool","sx"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/FormLabel/FormLabel.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport formControlState from '../FormControl/formControlState';\nimport useFormControl from '../FormControl/useFormControl';\nimport capitalize from '../utils/capitalize';\nimport useThemeProps from '../styles/useThemeProps';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport formLabelClasses, { getFormLabelUtilityClasses } from './formLabelClasses';\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport const overridesResolver = ({\n  styleProps\n}, styles) => {\n  return deepmerge(_extends({}, styleProps.color === 'secondary' && styles.colorSecondary, styleProps.filled && styles.filled, {\n    [`& .${formLabelClasses.asterisk}`]: _extends({}, styles.asterisk)\n  }), styles.root || {});\n};\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    color,\n    focused,\n    disabled,\n    error,\n    filled,\n    required\n  } = styleProps;\n  const slots = {\n    root: ['root', `color${capitalize(color)}`, disabled && 'disabled', error && 'error', filled && 'filled', focused && 'focused', required && 'required'],\n    asterisk: ['asterisk', error && 'error']\n  };\n  return composeClasses(slots, getFormLabelUtilityClasses, classes);\n};\n\nexport const FormLabelRoot = experimentalStyled('label', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => _extends({\n  color: theme.palette.text.secondary\n}, theme.typography.body1, {\n  lineHeight: '1.4375em',\n  padding: 0,\n  '&.Mui-focused': {\n    color: theme.palette[styleProps.color].main\n  },\n  '&.Mui-disabled': {\n    color: theme.palette.text.disabled\n  },\n  '&.Mui-error': {\n    color: theme.palette.error.main\n  }\n}));\nconst AsteriskComponent = experimentalStyled('span', {}, {\n  name: 'MuiFormLabel',\n  slot: 'Asterisk'\n})(({\n  theme\n}) => ({\n  '&.Mui-error': {\n    color: theme.palette.error.main\n  }\n}));\nconst FormLabel = /*#__PURE__*/React.forwardRef(function FormLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormLabel'\n  });\n\n  const {\n    children,\n    className,\n    component = 'label'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"children\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"filled\", \"focused\", \"required\"]);\n\n  const muiFormControl = useFormControl();\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['color', 'required', 'focused', 'disabled', 'error', 'filled']\n  });\n\n  const styleProps = _extends({}, props, {\n    color: fcs.color || 'primary',\n    component,\n    disabled: fcs.disabled,\n    error: fcs.error,\n    filled: fcs.filled,\n    focused: fcs.focused,\n    required: fcs.required\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  return /*#__PURE__*/_jsxs(FormLabelRoot, _extends({\n    as: component,\n    styleProps: styleProps,\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other, {\n    children: [children, fcs.required && /*#__PURE__*/_jsxs(AsteriskComponent, {\n      styleProps: styleProps,\n      \"aria-hidden\": true,\n      className: classes.asterisk,\n      children: [\"\\u2009\", '*']\n    })]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the label should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the label should use filled classes key.\n   */\n  filled: PropTypes.bool,\n\n  /**\n   * If `true`, the input of this label is focused (used by `FormGroup` components).\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the label will indicate that the `input` is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object\n} : void 0;\nexport default FormLabel;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}