{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n  return String(a) === String(b);\n}\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n      'aria-describedby': ariaDescribedby,\n      'aria-label': ariaLabel,\n      autoFocus,\n      autoWidth,\n      children,\n      classes,\n      className,\n      defaultValue,\n      disabled,\n      displayEmpty,\n      IconComponent,\n      inputRef: inputRefProp,\n      labelId,\n      MenuProps = {},\n      multiple,\n      name,\n      onBlur,\n      onChange,\n      onClose,\n      onFocus,\n      onOpen,\n      open: openProp,\n      readOnly,\n      renderValue,\n      SelectDisplayProps = {},\n      tabIndex: tabIndexProp,\n      value: valueProp,\n      variant = 'standard'\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n    return undefined;\n  }, [labelId]);\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n  const handleClose = event => {\n    update(false, event);\n  };\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n    if (index === -1) {\n      return;\n    }\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n  const handleItemClick = child => event => {\n    let newValue;\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n    if (value !== newValue) {\n      setValueState(newValue);\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown',\n      // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n    let selected;\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n      selected = value.some(v => areEqualValues(v, child.props.value));\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n    if (selected) {\n      foundMatch = true;\n    }\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n  let menuMinWidth = menuMinWidthState;\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n  let tabIndex;\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      className: clsx(classes.root,\n      // TODO v5: merge root and select\n      classes.select, classes.selectMenu, classes[variant], className, SelectDisplayProps.className, disabled && classes.disabled) // The id is required for proper a11y\n      ,\n\n      id: buttonId,\n      children: isEmpty(display) ? /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      }) : display\n    })), /*#__PURE__*/_jsx(\"input\", _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus\n    }, other)), /*#__PURE__*/_jsx(IconComponent, {\n      className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: displayNode,\n      open: open,\n      onClose: handleClose\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","formatMuiErrorMessage","_formatMuiErrorMessage","React","isFragment","PropTypes","clsx","refType","ownerDocument","capitalize","Menu","isFilled","useForkRef","useControlled","jsx","_jsx","jsxs","_jsxs","areEqualValues","a","b","String","isEmpty","display","trim","SelectInput","forwardRef","props","ref","ariaDescribedby","ariaLabel","autoFocus","autoWidth","children","classes","className","defaultValue","disabled","displayEmpty","IconComponent","inputRef","inputRefProp","labelId","MenuProps","multiple","name","onBlur","onChange","onClose","onFocus","onOpen","open","openProp","readOnly","renderValue","SelectDisplayProps","tabIndex","tabIndexProp","value","valueProp","variant","other","setValueState","controlled","default","useRef","displayRef","displayNode","setDisplayNode","useState","current","isOpenControlled","menuMinWidthState","setMenuMinWidthState","openState","setOpenState","handleRef","handleDisplayRef","useCallback","node","useImperativeHandle","focus","useEffect","label","getElementById","handler","getSelection","isCollapsed","addEventListener","removeEventListener","undefined","update","event","clientWidth","handleMouseDown","button","preventDefault","handleClose","childrenArray","Children","toArray","handleChange","index","map","child","indexOf","target","handleItemClick","newValue","Array","isArray","slice","itemIndex","push","splice","onClick","nativeEvent","clonedEvent","constructor","type","Object","defineProperty","writable","handleKeyDown","validKeys","key","handleBlur","persist","displaySingle","displayMultiple","computeDisplay","foundMatch","items","isValidElement","process","env","NODE_ENV","console","error","join","selected","Error","some","v","cloneElement","onKeyUp","role","values","warn","filter","x","menuMinWidth","buttonId","id","Fragment","Boolean","onKeyDown","onMouseDown","root","select","selectMenu","dangerouslySetInnerHTML","__html","nativeInput","icon","iconOpen","anchorEl","MenuListProps","disableListWrap","PaperProps","style","minWidth","propTypes","string","bool","object","isRequired","any","elementType","func","oneOfType","number","oneOf"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/Select/SelectInput.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport { formatMuiErrorMessage as _formatMuiErrorMessage } from \"@material-ui/utils\";\nimport * as React from 'react';\nimport { isFragment } from 'react-is';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@material-ui/utils';\nimport ownerDocument from '../utils/ownerDocument';\nimport capitalize from '../utils/capitalize';\nimport Menu from '../Menu/Menu';\nimport { isFilled } from '../InputBase/utils';\nimport useForkRef from '../utils/useForkRef';\nimport useControlled from '../utils/useControlled';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction areEqualValues(a, b) {\n  if (typeof b === 'object' && b !== null) {\n    return a === b;\n  }\n\n  return String(a) === String(b);\n}\n\nfunction isEmpty(display) {\n  return display == null || typeof display === 'string' && !display.trim();\n}\n/**\n * @ignore - internal component.\n */\n\n\nconst SelectInput = /*#__PURE__*/React.forwardRef(function SelectInput(props, ref) {\n  const {\n    'aria-describedby': ariaDescribedby,\n    'aria-label': ariaLabel,\n    autoFocus,\n    autoWidth,\n    children,\n    classes,\n    className,\n    defaultValue,\n    disabled,\n    displayEmpty,\n    IconComponent,\n    inputRef: inputRefProp,\n    labelId,\n    MenuProps = {},\n    multiple,\n    name,\n    onBlur,\n    onChange,\n    onClose,\n    onFocus,\n    onOpen,\n    open: openProp,\n    readOnly,\n    renderValue,\n    SelectDisplayProps = {},\n    tabIndex: tabIndexProp,\n    value: valueProp,\n    variant = 'standard'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"aria-describedby\", \"aria-label\", \"autoFocus\", \"autoWidth\", \"children\", \"classes\", \"className\", \"defaultValue\", \"disabled\", \"displayEmpty\", \"IconComponent\", \"inputRef\", \"labelId\", \"MenuProps\", \"multiple\", \"name\", \"onBlur\", \"onChange\", \"onClose\", \"onFocus\", \"onOpen\", \"open\", \"readOnly\", \"renderValue\", \"SelectDisplayProps\", \"tabIndex\", \"type\", \"value\", \"variant\"]);\n\n  const [value, setValueState] = useControlled({\n    controlled: valueProp,\n    default: defaultValue,\n    name: 'Select'\n  });\n  const inputRef = React.useRef(null);\n  const displayRef = React.useRef(null);\n  const [displayNode, setDisplayNode] = React.useState(null);\n  const {\n    current: isOpenControlled\n  } = React.useRef(openProp != null);\n  const [menuMinWidthState, setMenuMinWidthState] = React.useState();\n  const [openState, setOpenState] = React.useState(false);\n  const handleRef = useForkRef(ref, inputRefProp);\n  const handleDisplayRef = React.useCallback(node => {\n    displayRef.current = node;\n\n    if (node) {\n      setDisplayNode(node);\n    }\n  }, []);\n  React.useImperativeHandle(handleRef, () => ({\n    focus: () => {\n      displayRef.current.focus();\n    },\n    node: inputRef.current,\n    value\n  }), [value]);\n  React.useEffect(() => {\n    if (autoFocus) {\n      displayRef.current.focus();\n    }\n  }, [autoFocus]);\n  React.useEffect(() => {\n    const label = ownerDocument(displayRef.current).getElementById(labelId);\n\n    if (label) {\n      const handler = () => {\n        if (getSelection().isCollapsed) {\n          displayRef.current.focus();\n        }\n      };\n\n      label.addEventListener('click', handler);\n      return () => {\n        label.removeEventListener('click', handler);\n      };\n    }\n\n    return undefined;\n  }, [labelId]);\n\n  const update = (open, event) => {\n    if (open) {\n      if (onOpen) {\n        onOpen(event);\n      }\n    } else if (onClose) {\n      onClose(event);\n    }\n\n    if (!isOpenControlled) {\n      setMenuMinWidthState(autoWidth ? null : displayNode.clientWidth);\n      setOpenState(open);\n    }\n  };\n\n  const handleMouseDown = event => {\n    // Ignore everything but left-click\n    if (event.button !== 0) {\n      return;\n    } // Hijack the default focus behavior.\n\n\n    event.preventDefault();\n    displayRef.current.focus();\n    update(true, event);\n  };\n\n  const handleClose = event => {\n    update(false, event);\n  };\n\n  const childrenArray = React.Children.toArray(children); // Support autofill.\n\n  const handleChange = event => {\n    const index = childrenArray.map(child => child.props.value).indexOf(event.target.value);\n\n    if (index === -1) {\n      return;\n    }\n\n    const child = childrenArray[index];\n    setValueState(child.props.value);\n\n    if (onChange) {\n      onChange(event, child);\n    }\n  };\n\n  const handleItemClick = child => event => {\n    let newValue;\n\n    if (multiple) {\n      newValue = Array.isArray(value) ? value.slice() : [];\n      const itemIndex = value.indexOf(child.props.value);\n\n      if (itemIndex === -1) {\n        newValue.push(child.props.value);\n      } else {\n        newValue.splice(itemIndex, 1);\n      }\n    } else {\n      newValue = child.props.value;\n    }\n\n    if (child.props.onClick) {\n      child.props.onClick(event);\n    }\n\n    if (value !== newValue) {\n      setValueState(newValue);\n\n      if (onChange) {\n        // Redefine target to allow name and value to be read.\n        // This allows seamless integration with the most popular form libraries.\n        // https://github.com/mui-org/material-ui/issues/13485#issuecomment-676048492\n        // Clone the event to not override `target` of the original event.\n        const nativeEvent = event.nativeEvent || event;\n        const clonedEvent = new nativeEvent.constructor(nativeEvent.type, nativeEvent);\n        Object.defineProperty(clonedEvent, 'target', {\n          writable: true,\n          value: {\n            value: newValue,\n            name\n          }\n        });\n        onChange(clonedEvent, child);\n      }\n    }\n\n    if (!multiple) {\n      update(false, event);\n    }\n  };\n\n  const handleKeyDown = event => {\n    if (!readOnly) {\n      const validKeys = [' ', 'ArrowUp', 'ArrowDown', // The native select doesn't respond to enter on MacOS, but it's recommended by\n      // https://www.w3.org/TR/wai-aria-practices/examples/listbox/listbox-collapsible.html\n      'Enter'];\n\n      if (validKeys.indexOf(event.key) !== -1) {\n        event.preventDefault();\n        update(true, event);\n      }\n    }\n  };\n\n  const open = displayNode !== null && (isOpenControlled ? openProp : openState);\n\n  const handleBlur = event => {\n    // if open event.stopImmediatePropagation\n    if (!open && onBlur) {\n      event.persist(); // Preact support, target is read only property on a native event.\n\n      Object.defineProperty(event, 'target', {\n        writable: true,\n        value: {\n          value,\n          name\n        }\n      });\n      onBlur(event);\n    }\n  };\n\n  delete other['aria-invalid'];\n  let display;\n  let displaySingle;\n  const displayMultiple = [];\n  let computeDisplay = false;\n  let foundMatch = false; // No need to display any value if the field is empty.\n\n  if (isFilled({\n    value\n  }) || displayEmpty) {\n    if (renderValue) {\n      display = renderValue(value);\n    } else {\n      computeDisplay = true;\n    }\n  }\n\n  const items = childrenArray.map(child => {\n    if (! /*#__PURE__*/React.isValidElement(child)) {\n      return null;\n    }\n\n    if (process.env.NODE_ENV !== 'production') {\n      if (isFragment(child)) {\n        console.error([\"Material-UI: The Select component doesn't accept a Fragment as a child.\", 'Consider providing an array instead.'].join('\\n'));\n      }\n    }\n\n    let selected;\n\n    if (multiple) {\n      if (!Array.isArray(value)) {\n        throw new Error(process.env.NODE_ENV !== \"production\" ? `Material-UI: The \\`value\\` prop must be an array when using the \\`Select\\` component with \\`multiple\\`.` : _formatMuiErrorMessage(2));\n      }\n\n      selected = value.some(v => areEqualValues(v, child.props.value));\n\n      if (selected && computeDisplay) {\n        displayMultiple.push(child.props.children);\n      }\n    } else {\n      selected = areEqualValues(value, child.props.value);\n\n      if (selected && computeDisplay) {\n        displaySingle = child.props.children;\n      }\n    }\n\n    if (selected) {\n      foundMatch = true;\n    }\n\n    return /*#__PURE__*/React.cloneElement(child, {\n      'aria-selected': selected ? 'true' : undefined,\n      onClick: handleItemClick(child),\n      onKeyUp: event => {\n        if (event.key === ' ') {\n          // otherwise our MenuItems dispatches a click event\n          // it's not behavior of the native <option> and causes\n          // the select to close immediately since we open on space keydown\n          event.preventDefault();\n        }\n\n        if (child.props.onKeyUp) {\n          child.props.onKeyUp(event);\n        }\n      },\n      role: 'option',\n      selected,\n      value: undefined,\n      // The value is most likely not a valid HTML attribute.\n      'data-value': child.props.value // Instead, we provide it as a data attribute.\n\n    });\n  });\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    React.useEffect(() => {\n      if (!foundMatch && !multiple && value !== '') {\n        const values = childrenArray.map(child => child.props.value);\n        console.warn([`Material-UI: You have provided an out-of-range value \\`${value}\\` for the select ${name ? `(name=\"${name}\") ` : ''}component.`, \"Consider providing a value that matches one of the available options or ''.\", `The available values are ${values.filter(x => x != null).map(x => `\\`${x}\\``).join(', ') || '\"\"'}.`].join('\\n'));\n      }\n    }, [foundMatch, childrenArray, multiple, name, value]);\n  }\n\n  if (computeDisplay) {\n    display = multiple ? displayMultiple.join(', ') : displaySingle;\n  } // Avoid performing a layout computation in the render method.\n\n\n  let menuMinWidth = menuMinWidthState;\n\n  if (!autoWidth && isOpenControlled && displayNode) {\n    menuMinWidth = displayNode.clientWidth;\n  }\n\n  let tabIndex;\n\n  if (typeof tabIndexProp !== 'undefined') {\n    tabIndex = tabIndexProp;\n  } else {\n    tabIndex = disabled ? null : 0;\n  }\n\n  const buttonId = SelectDisplayProps.id || (name ? `mui-component-select-${name}` : undefined);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/_jsx(\"div\", _extends({\n      ref: handleDisplayRef,\n      tabIndex: tabIndex,\n      role: \"button\",\n      \"aria-disabled\": disabled ? 'true' : undefined,\n      \"aria-expanded\": open ? 'true' : undefined,\n      \"aria-haspopup\": \"listbox\",\n      \"aria-label\": ariaLabel,\n      \"aria-labelledby\": [labelId, buttonId].filter(Boolean).join(' ') || undefined,\n      \"aria-describedby\": ariaDescribedby,\n      onKeyDown: handleKeyDown,\n      onMouseDown: disabled || readOnly ? null : handleMouseDown,\n      onBlur: handleBlur,\n      onFocus: onFocus\n    }, SelectDisplayProps, {\n      className: clsx(classes.root, // TODO v5: merge root and select\n      classes.select, classes.selectMenu, classes[variant], className, SelectDisplayProps.className, disabled && classes.disabled) // The id is required for proper a11y\n      ,\n      id: buttonId,\n      children: isEmpty(display) ?\n      /*#__PURE__*/\n      // notranslate needed while Google Translate will not fix zero-width space issue\n      // eslint-disable-next-line react/no-danger\n      _jsx(\"span\", {\n        className: \"notranslate\",\n        dangerouslySetInnerHTML: {\n          __html: '&#8203;'\n        }\n      }) : display\n    })), /*#__PURE__*/_jsx(\"input\", _extends({\n      value: Array.isArray(value) ? value.join(',') : value,\n      name: name,\n      ref: inputRef,\n      \"aria-hidden\": true,\n      onChange: handleChange,\n      tabIndex: -1,\n      disabled: disabled,\n      className: classes.nativeInput,\n      autoFocus: autoFocus\n    }, other)), /*#__PURE__*/_jsx(IconComponent, {\n      className: clsx(classes.icon, classes[`icon${capitalize(variant)}`], open && classes.iconOpen, disabled && classes.disabled)\n    }), /*#__PURE__*/_jsx(Menu, _extends({\n      id: `menu-${name || ''}`,\n      anchorEl: displayNode,\n      open: open,\n      onClose: handleClose\n    }, MenuProps, {\n      MenuListProps: _extends({\n        'aria-labelledby': labelId,\n        role: 'listbox',\n        disableListWrap: true\n      }, MenuProps.MenuListProps),\n      PaperProps: _extends({}, MenuProps.PaperProps, {\n        style: _extends({\n          minWidth: menuMinWidth\n        }, MenuProps.PaperProps != null ? MenuProps.PaperProps.style : null)\n      }),\n      children: items\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? SelectInput.propTypes = {\n  /**\n   * @ignore\n   */\n  'aria-describedby': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  'aria-label': PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * If `true`, the width of the popover will automatically be set according to the items inside the\n   * menu, otherwise it will be at least the width of the select input.\n   */\n  autoWidth: PropTypes.bool,\n\n  /**\n   * The option elements to populate the select with.\n   * Can be some `<MenuItem>` elements.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * The CSS class name of the select element.\n   */\n  className: PropTypes.string,\n\n  /**\n   * The default value. Use when the component is not controlled.\n   */\n  defaultValue: PropTypes.any,\n\n  /**\n   * If `true`, the select is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the selected item is displayed even if its value is empty.\n   */\n  displayEmpty: PropTypes.bool,\n\n  /**\n   * The icon that displays the arrow.\n   */\n  IconComponent: PropTypes.elementType.isRequired,\n\n  /**\n   * Imperative handle implementing `{ value: T, node: HTMLElement, focus(): void }`\n   * Equivalent to `ref`\n   */\n  inputRef: refType,\n\n  /**\n   * The ID of an element that acts as an additional label. The Select will\n   * be labelled by the additional label and the selected value.\n   */\n  labelId: PropTypes.string,\n\n  /**\n   * Props applied to the [`Menu`](/api/menu/) element.\n   */\n  MenuProps: PropTypes.object,\n\n  /**\n   * If `true`, `value` must be an array and the menu will support multiple selections.\n   */\n  multiple: PropTypes.bool,\n\n  /**\n   * Name attribute of the `select` or hidden `input` element.\n   */\n  name: PropTypes.string,\n\n  /**\n   * @ignore\n   */\n  onBlur: PropTypes.func,\n\n  /**\n   * Callback fired when a menu item is selected.\n   *\n   * @param {object} event The event source of the callback.\n   * You can pull out the new value by accessing `event.target.value` (any).\n   * @param {object} [child] The react element that was selected.\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onFocus: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be opened.\n   * Use in controlled mode (see open).\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * @ignore\n   */\n  readOnly: PropTypes.bool,\n\n  /**\n   * Render the selected value.\n   *\n   * @param {any} value The `value` provided to the component.\n   * @returns {ReactNode}\n   */\n  renderValue: PropTypes.func,\n\n  /**\n   * Props applied to the clickable div element.\n   */\n  SelectDisplayProps: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.any,\n\n  /**\n   * The input value.\n   */\n  value: PropTypes.any,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['standard', 'outlined', 'filled'])\n} : void 0;\nexport default SelectInput;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}