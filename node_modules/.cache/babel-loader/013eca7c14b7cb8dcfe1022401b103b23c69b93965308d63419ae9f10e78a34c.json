{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    anchorOrigin\n  } = styleProps;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`anchorOrigin${capitalize(styleProps.anchorOrigin.vertical)}${capitalize(styleProps.anchorOrigin.horizontal)}`]), styles.root || {});\n};\nconst SnackbarRoot = experimentalStyled('div', {}, {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver\n})(_ref => {\n  let {\n    theme,\n    styleProps\n  } = _ref;\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, styleProps.anchorOrigin.vertical === 'top' ? top1 : bottom1, styleProps.anchorOrigin.horizontal === 'left' && left, styleProps.anchorOrigin.horizontal === 'right' && right, {\n    [theme.breakpoints.up('sm')]: _extends({}, styleProps.anchorOrigin.vertical === 'top' ? top3 : bottom3, styleProps.anchorOrigin.horizontal === 'center' && center, styleProps.anchorOrigin.horizontal === 'left' && left3, styleProps.anchorOrigin.horizontal === 'right' && right3)\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n  const {\n      action,\n      anchorOrigin: {\n        vertical,\n        horizontal\n      } = {\n        vertical: 'bottom',\n        horizontal: 'left'\n      },\n      autoHideDuration = null,\n      children,\n      className,\n      ClickAwayListenerProps,\n      ContentProps,\n      disableWindowBlurListener = false,\n      message,\n      onClose,\n      onMouseEnter,\n      onMouseLeave,\n      open,\n      resumeHideDuration,\n      TransitionComponent = Grow,\n      transitionDuration = {\n        enter: duration.enteringScreen,\n        exit: duration.leavingScreen\n      },\n      TransitionProps: {\n        onEnter,\n        onExited\n      } = {}\n    } = props,\n    TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEnter\", \"onExited\"]),\n    other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n  const styleProps = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    }\n  });\n  const classes = useUtilityClasses(styleProps);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback(function () {\n    if (onClose) {\n      onClose(...arguments);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n    handlePause();\n  };\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n    handleResume();\n  };\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n  const handleExited = node => {\n    setExited(true);\n    if (onExited) {\n      onExited(node);\n    }\n  };\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      styleProps: styleProps,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","React","PropTypes","clsx","deepmerge","unstable_composeClasses","composeClasses","experimentalStyled","useThemeProps","duration","ClickAwayListener","useEventCallback","capitalize","Grow","SnackbarContent","getSnackbarUtilityClass","jsx","_jsx","useUtilityClasses","styleProps","classes","anchorOrigin","slots","root","vertical","horizontal","overridesResolver","props","styles","SnackbarRoot","name","slot","theme","top1","top","bottom1","bottom","right","justifyContent","left","top3","bottom3","right3","left3","center","transform","zIndex","snackbar","position","display","alignItems","breakpoints","up","Snackbar","forwardRef","inProps","ref","action","autoHideDuration","children","className","ClickAwayListenerProps","ContentProps","disableWindowBlurListener","message","onClose","onMouseEnter","onMouseLeave","open","resumeHideDuration","TransitionComponent","transitionDuration","enter","enteringScreen","exit","leavingScreen","TransitionProps","onEnter","onExited","other","timerAutoHide","useRef","exited","setExited","useState","handleClose","setAutoHideTimer","autoHideDurationParam","clearTimeout","current","setTimeout","useEffect","handlePause","handleResume","useCallback","handleMouseEnter","event","handleMouseLeave","handleClickAway","handleExited","node","handleEnter","isAppearing","window","addEventListener","removeEventListener","undefined","onClickAway","appear","in","timeout","direction","process","env","NODE_ENV","propTypes","shape","oneOf","isRequired","number","element","object","string","bool","key","func","sx","elementType","oneOfType"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/Snackbar/Snackbar.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport experimentalStyled from '../styles/experimentalStyled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { duration } from '../styles/transitions';\nimport ClickAwayListener from '../ClickAwayListener';\nimport useEventCallback from '../utils/useEventCallback';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport SnackbarContent from '../SnackbarContent';\nimport { getSnackbarUtilityClass } from './snackbarClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = styleProps => {\n  const {\n    classes,\n    anchorOrigin\n  } = styleProps;\n  const slots = {\n    root: ['root', `anchorOrigin${capitalize(anchorOrigin.vertical)}${capitalize(anchorOrigin.horizontal)}`]\n  };\n  return composeClasses(slots, getSnackbarUtilityClass, classes);\n};\n\nconst overridesResolver = (props, styles) => {\n  const {\n    styleProps\n  } = props;\n  return deepmerge(_extends({}, styles[`anchorOrigin${capitalize(styleProps.anchorOrigin.vertical)}${capitalize(styleProps.anchorOrigin.horizontal)}`]), styles.root || {});\n};\n\nconst SnackbarRoot = experimentalStyled('div', {}, {\n  name: 'MuiSnackbar',\n  slot: 'Root',\n  overridesResolver\n})(({\n  theme,\n  styleProps\n}) => {\n  const top1 = {\n    top: 8\n  };\n  const bottom1 = {\n    bottom: 8\n  };\n  const right = {\n    justifyContent: 'flex-end'\n  };\n  const left = {\n    justifyContent: 'flex-start'\n  };\n  const top3 = {\n    top: 24\n  };\n  const bottom3 = {\n    bottom: 24\n  };\n  const right3 = {\n    right: 24\n  };\n  const left3 = {\n    left: 24\n  };\n  const center = {\n    left: '50%',\n    right: 'auto',\n    transform: 'translateX(-50%)'\n  };\n  return _extends({\n    zIndex: theme.zIndex.snackbar,\n    position: 'fixed',\n    display: 'flex',\n    left: 8,\n    right: 8,\n    justifyContent: 'center',\n    alignItems: 'center'\n  }, styleProps.anchorOrigin.vertical === 'top' ? top1 : bottom1, styleProps.anchorOrigin.horizontal === 'left' && left, styleProps.anchorOrigin.horizontal === 'right' && right, {\n    [theme.breakpoints.up('sm')]: _extends({}, styleProps.anchorOrigin.vertical === 'top' ? top3 : bottom3, styleProps.anchorOrigin.horizontal === 'center' && center, styleProps.anchorOrigin.horizontal === 'left' && left3, styleProps.anchorOrigin.horizontal === 'right' && right3)\n  });\n});\nconst Snackbar = /*#__PURE__*/React.forwardRef(function Snackbar(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSnackbar'\n  });\n\n  const {\n    action,\n    anchorOrigin: {\n      vertical,\n      horizontal\n    } = {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    autoHideDuration = null,\n    children,\n    className,\n    ClickAwayListenerProps,\n    ContentProps,\n    disableWindowBlurListener = false,\n    message,\n    onClose,\n    onMouseEnter,\n    onMouseLeave,\n    open,\n    resumeHideDuration,\n    TransitionComponent = Grow,\n    transitionDuration = {\n      enter: duration.enteringScreen,\n      exit: duration.leavingScreen\n    },\n    TransitionProps: {\n      onEnter,\n      onExited\n    } = {}\n  } = props,\n        TransitionProps = _objectWithoutPropertiesLoose(props.TransitionProps, [\"onEnter\", \"onExited\"]),\n        other = _objectWithoutPropertiesLoose(props, [\"action\", \"anchorOrigin\", \"autoHideDuration\", \"children\", \"className\", \"ClickAwayListenerProps\", \"ContentProps\", \"disableWindowBlurListener\", \"message\", \"onClose\", \"onMouseEnter\", \"onMouseLeave\", \"open\", \"resumeHideDuration\", \"TransitionComponent\", \"transitionDuration\", \"TransitionProps\"]);\n\n  const styleProps = _extends({}, props, {\n    anchorOrigin: {\n      vertical,\n      horizontal\n    }\n  });\n\n  const classes = useUtilityClasses(styleProps);\n  const timerAutoHide = React.useRef();\n  const [exited, setExited] = React.useState(true);\n  const handleClose = useEventCallback((...args) => {\n    if (onClose) {\n      onClose(...args);\n    }\n  });\n  const setAutoHideTimer = useEventCallback(autoHideDurationParam => {\n    if (!onClose || autoHideDurationParam == null) {\n      return;\n    }\n\n    clearTimeout(timerAutoHide.current);\n    timerAutoHide.current = setTimeout(() => {\n      handleClose(null, 'timeout');\n    }, autoHideDurationParam);\n  });\n  React.useEffect(() => {\n    if (open) {\n      setAutoHideTimer(autoHideDuration);\n    }\n\n    return () => {\n      clearTimeout(timerAutoHide.current);\n    };\n  }, [open, autoHideDuration, setAutoHideTimer]); // Pause the timer when the user is interacting with the Snackbar\n  // or when the user hide the window.\n\n  const handlePause = () => {\n    clearTimeout(timerAutoHide.current);\n  }; // Restart the timer when the user is no longer interacting with the Snackbar\n  // or when the window is shown back.\n\n\n  const handleResume = React.useCallback(() => {\n    if (autoHideDuration != null) {\n      setAutoHideTimer(resumeHideDuration != null ? resumeHideDuration : autoHideDuration * 0.5);\n    }\n  }, [autoHideDuration, resumeHideDuration, setAutoHideTimer]);\n\n  const handleMouseEnter = event => {\n    if (onMouseEnter) {\n      onMouseEnter(event);\n    }\n\n    handlePause();\n  };\n\n  const handleMouseLeave = event => {\n    if (onMouseLeave) {\n      onMouseLeave(event);\n    }\n\n    handleResume();\n  };\n\n  const handleClickAway = event => {\n    if (onClose) {\n      onClose(event, 'clickaway');\n    }\n  };\n\n  const handleExited = node => {\n    setExited(true);\n\n    if (onExited) {\n      onExited(node);\n    }\n  };\n\n  const handleEnter = (node, isAppearing) => {\n    setExited(false);\n\n    if (onEnter) {\n      onEnter(node, isAppearing);\n    }\n  };\n\n  React.useEffect(() => {\n    // TODO: window global should be refactored here\n    if (!disableWindowBlurListener && open) {\n      window.addEventListener('focus', handleResume);\n      window.addEventListener('blur', handlePause);\n      return () => {\n        window.removeEventListener('focus', handleResume);\n        window.removeEventListener('blur', handlePause);\n      };\n    }\n\n    return undefined;\n  }, [disableWindowBlurListener, handleResume, open]); // So we only render active snackbars.\n\n  if (!open && exited) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsx(ClickAwayListener, _extends({\n    onClickAway: handleClickAway\n  }, ClickAwayListenerProps, {\n    children: /*#__PURE__*/_jsx(SnackbarRoot, _extends({\n      className: clsx(classes.root, className),\n      onMouseEnter: handleMouseEnter,\n      onMouseLeave: handleMouseLeave,\n      styleProps: styleProps,\n      ref: ref\n    }, other, {\n      children: /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        appear: true,\n        in: open,\n        timeout: transitionDuration,\n        direction: vertical === 'top' ? 'down' : 'up',\n        onEnter: handleEnter,\n        onExited: handleExited\n      }, TransitionProps, {\n        children: children || /*#__PURE__*/_jsx(SnackbarContent, _extends({\n          message: message,\n          action: action\n        }, ContentProps))\n      }))\n    }))\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Snackbar.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The action to display. It renders after the message, at the end of the snackbar.\n   */\n  action: PropTypes.node,\n\n  /**\n   * The anchor of the `Snackbar`.\n   * On smaller screens, the component grows to occupy all the available width,\n   * the horizontal alignment is ignored.\n   * @default { vertical: 'bottom', horizontal: 'left' }\n   */\n  anchorOrigin: PropTypes.shape({\n    horizontal: PropTypes.oneOf(['center', 'left', 'right']).isRequired,\n    vertical: PropTypes.oneOf(['bottom', 'top']).isRequired\n  }),\n\n  /**\n   * The number of milliseconds to wait before automatically calling the\n   * `onClose` function. `onClose` should then set the state of the `open`\n   * prop to hide the Snackbar. This behavior is disabled by default with\n   * the `null` value.\n   * @default null\n   */\n  autoHideDuration: PropTypes.number,\n\n  /**\n   * Replace the `SnackbarContent` component.\n   */\n  children: PropTypes.element,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Props applied to the `ClickAwayListener` element.\n   */\n  ClickAwayListenerProps: PropTypes.object,\n\n  /**\n   * Props applied to the [`SnackbarContent`](/api/snackbar-content/) element.\n   */\n  ContentProps: PropTypes.object,\n\n  /**\n   * If `true`, the `autoHideDuration` timer will expire even if the window is not focused.\n   * @default false\n   */\n  disableWindowBlurListener: PropTypes.bool,\n\n  /**\n   * When displaying multiple consecutive Snackbars from a parent rendering a single\n   * <Snackbar/>, add the key prop to ensure independent treatment of each message.\n   * e.g. <Snackbar key={message} />, otherwise, the message may update-in-place and\n   * features such as autoHideDuration may be canceled.\n   */\n  key: () => null,\n\n  /**\n   * The message to display.\n   */\n  message: PropTypes.node,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   * Typically `onClose` is used to set state in the parent component,\n   * which is used to control the `Snackbar` `open` prop.\n   * The `reason` parameter can optionally be used to control the response to `onClose`,\n   * for example ignoring `clickaway`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"timeout\"` (`autoHideDuration` expired), `\"clickaway\"`.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseEnter: PropTypes.func,\n\n  /**\n   * @ignore\n   */\n  onMouseLeave: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before dismissing after user interaction.\n   * If `autoHideDuration` prop isn't specified, it does nothing.\n   * If `autoHideDuration` prop is specified but `resumeHideDuration` isn't,\n   * we default to `autoHideDuration / 2` ms.\n   */\n  resumeHideDuration: PropTypes.number,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * The duration for the transition, in milliseconds.\n   * You may specify a single timeout for all transitions, or individually with an object.\n   * @default {\n   *   enter: duration.enteringScreen,\n   *   exit: duration.leavingScreen,\n   * }\n   */\n  transitionDuration: PropTypes.oneOfType([PropTypes.number, PropTypes.shape({\n    appear: PropTypes.number,\n    enter: PropTypes.number,\n    exit: PropTypes.number\n  })]),\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   * @default {}\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Snackbar;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}