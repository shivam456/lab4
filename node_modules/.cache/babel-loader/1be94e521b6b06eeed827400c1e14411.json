{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/lab-4-react/src/components/dashboard/LabList.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport { Box, Card, Table, TableBody, TableCell, TableHead, TablePagination, TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LabList = labs => {\n  _s();\n\n  const [selectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const labsvalues = Object.values(labs.labs);\n\n  const handleLimitChange = event => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(PerfectScrollbar, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          minWidth: 1050\n        },\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Medication Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Active Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: \"Date Prescribed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: labsvalues.map(lab => /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              selected: selectedCustomerIds.indexOf(lab.id) !== -1,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  sx: {\n                    alignItems: 'center',\n                    display: 'flex'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    color: \"textPrimary\",\n                    variant: \"body1\",\n                    children: lab.code.text\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: `${lab.valueQuantity.value} ${lab.valueQuantity.unit}`\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: moment(lab.effectiveDateTime).format('DD/MM/YYYY')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 19\n              }, this)]\n            }, lab.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      component: \"div\",\n      count: labsvalues.length,\n      onPageChange: handlePageChange,\n      onRowsPerPageChange: handleLimitChange,\n      page: page,\n      rowsPerPage: limit,\n      rowsPerPageOptions: [5, 10, 25]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}; // CustomerListResults.propTypes = {\n//   customers: PropTypes.array.isRequired\n// };\n\n\n_s(LabList, \"ERtK4z7+5tgICF4zEX+jtLQ2L7s=\");\n\n_c = LabList;\nexport default LabList;\n\nvar _c;\n\n$RefreshReg$(_c, \"LabList\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/lab-4-react/src/components/dashboard/LabList.js"],"names":["useState","moment","PerfectScrollbar","Box","Card","Table","TableBody","TableCell","TableHead","TablePagination","TableRow","Typography","LabList","labs","selectedCustomerIds","limit","setLimit","page","setPage","labsvalues","Object","values","handleLimitChange","event","target","value","handlePageChange","newPage","minWidth","map","lab","indexOf","id","alignItems","display","code","text","valueQuantity","unit","effectiveDateTime","format","length"],"mappings":"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","sourcesContent":["import { useState } from 'react';\nimport moment from 'moment';\nimport PerfectScrollbar from 'react-perfect-scrollbar';\nimport {\n  Box,\n  Card,\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TablePagination,\n  TableRow,\n  Typography\n} from '@material-ui/core';\n\nconst LabList = (labs) => {\n  const [selectedCustomerIds] = useState([]);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(0);\n  const labsvalues = Object.values(labs.labs);\n  const handleLimitChange = (event) => {\n    setLimit(event.target.value);\n  };\n\n  const handlePageChange = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  return (\n    <Card>\n      <PerfectScrollbar>\n        <Box sx={{ minWidth: 1050 }}>\n          <Table>\n            <TableHead>\n              <TableRow>\n                <TableCell>\n                  Medication Name\n                </TableCell>\n                <TableCell>\n                  Active Status\n                </TableCell>\n                <TableCell>\n                  Date Prescribed\n                </TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {labsvalues.map((lab) => (\n                <TableRow\n                  hover\n                  key={lab.id}\n                  selected={selectedCustomerIds.indexOf(lab.id) !== -1}\n                >\n                  <TableCell>\n                    <Box\n                      sx={{\n                        alignItems: 'center',\n                        display: 'flex'\n                      }}\n                    >\n                      <Typography\n                        color=\"textPrimary\"\n                        variant=\"body1\"\n                      >\n                        {lab.code.text}\n                      </Typography>\n                    </Box>\n                  </TableCell>\n                  <TableCell>\n                    {`${lab.valueQuantity.value} ${lab.valueQuantity.unit}`}\n                  </TableCell>\n                  <TableCell>\n                    {moment(lab.effectiveDateTime).format('DD/MM/YYYY')}\n                  </TableCell>\n                </TableRow>\n              ))}\n            </TableBody>\n          </Table>\n        </Box>\n      </PerfectScrollbar>\n      <TablePagination\n        component=\"div\"\n        count={labsvalues.length}\n        onPageChange={handlePageChange}\n        onRowsPerPageChange={handleLimitChange}\n        page={page}\n        rowsPerPage={limit}\n        rowsPerPageOptions={[5, 10, 25]}\n      />\n    </Card>\n  );\n};\n\n// CustomerListResults.propTypes = {\n//   customers: PropTypes.array.isRequired\n// };\n\nexport default LabList;\n"]},"metadata":{},"sourceType":"module"}