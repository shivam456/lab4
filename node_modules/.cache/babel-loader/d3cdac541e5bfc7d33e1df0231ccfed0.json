{"ast":null,"code":"var _jsxFileName = \"/Users/rajvansia/Documents/GitHub/material-kit-react/src/pages/Settings.js\";\nimport React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\nimport { FhirClientContext } from '../FhirClientContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Settings = () => /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: [/*#__PURE__*/_jsxDEV(Helmet, {\n    children: /*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Settings | Material Kit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      backgroundColor: 'background.default',\n      minHeight: '100%',\n      py: 3\n    },\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      maxWidth: \"lg\",\n      children: /*#__PURE__*/_jsxDEV(LatestOrders, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)]\n}, void 0, true);\n\n_c = Settings;\nexport default class SettingsView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      patient: null,\n      error: null\n    };\n  } // this loader is used for\n\n\n  componentDidMount() {\n    const client = this.context.client;\n    const queryMed = new URLSearchParams();\n    queryMed.set('patient', client.patient.id);\n    console.log(client);\n    this._loader = client.request('MedicationRequest?' + queryMed, {\n      pageLimit: 0,\n      // get all pages\n      flat: true // return flat array of Observation resources\n\n    }).then(patient => {\n      this.setState({\n        patient,\n        loading: false,\n        error: null\n      });\n    }).catch(error => {\n      this.setState({\n        error,\n        loading: false\n      });\n    });\n  }\n\n  render() {\n    const {\n      error,\n      loading,\n      patient\n    } = this.state;\n    console.log(patient);\n\n    if (loading) {\n      return null;\n    }\n\n    if (error) {\n      console.log(error.message);\n      return error.message;\n    }\n\n    const entry = 'test';\n    return /*#__PURE__*/_jsxDEV(Settings, { ...entry\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 14\n    }, this);\n  }\n\n}\nSettingsView.contextType = FhirClientContext;\n\nvar _c;\n\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"sources":["/Users/rajvansia/Documents/GitHub/material-kit-react/src/pages/Settings.js"],"names":["React","Helmet","Box","Container","LatestOrders","FhirClientContext","Settings","backgroundColor","minHeight","py","SettingsView","Component","constructor","props","state","loading","patient","error","componentDidMount","client","context","queryMed","URLSearchParams","set","id","console","log","_loader","request","pageLimit","flat","then","setState","catch","render","message","entry","contextType"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,QAA+B,mBAA/B;AACA,OAAOC,YAAP,MAAyB,wCAAzB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;;;;AAEA,MAAMC,QAAQ,GAAG,mBACf;AAAA,0BACE,QAAC,MAAD;AAAA,2BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF,eAIE,QAAC,GAAD;AACE,IAAA,EAAE,EAAE;AACFC,MAAAA,eAAe,EAAE,oBADf;AAEFC,MAAAA,SAAS,EAAE,MAFT;AAGFC,MAAAA,EAAE,EAAE;AAHF,KADN;AAAA,2BAOE,QAAC,SAAD;AAAW,MAAA,QAAQ,EAAC,IAApB;AAAA,6BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,UAJF;AAAA,gBADF;;KAAMH,Q;AAmBN,eAAe,MAAMI,YAAN,SAA2BV,KAAK,CAACW,SAAjC,CAA2C;AAGtDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,OAAO,EAAE,IADE;AAEXC,MAAAA,OAAO,EAAE,IAFE;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD,GAVqD,CAWtD;;;AAEAC,EAAAA,iBAAiB,GAAG;AAClB,UAAMC,MAAM,GAAG,KAAKC,OAAL,CAAaD,MAA5B;AACA,UAAME,QAAQ,GAAG,IAAIC,eAAJ,EAAjB;AACAD,IAAAA,QAAQ,CAACE,GAAT,CAAa,SAAb,EAAwBJ,MAAM,CAACH,OAAP,CAAeQ,EAAvC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYP,MAAZ;AACA,SAAKQ,OAAL,GAAeR,MAAM,CAACS,OAAP,CAAe,uBAAuBP,QAAtC,EAAgD;AAC7DQ,MAAAA,SAAS,EAAE,CADkD;AAC/C;AACdC,MAAAA,IAAI,EAAE,IAFuD,CAElD;;AAFkD,KAAhD,EAGZC,IAHY,CAGPf,OAAO,IAAI;AACjB,WAAKgB,QAAL,CAAc;AAAEhB,QAAAA,OAAF;AAAWD,QAAAA,OAAO,EAAE,KAApB;AAA2BE,QAAAA,KAAK,EAAE;AAAlC,OAAd;AACD,KALc,EAMZgB,KANY,CAMNhB,KAAK,IAAI;AACd,WAAKe,QAAL,CAAc;AAAEf,QAAAA,KAAF;AAASF,QAAAA,OAAO,EAAE;AAAlB,OAAd;AACD,KARY,CAAf;AASD;;AAEDmB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEjB,MAAAA,KAAF;AAASF,MAAAA,OAAT;AAAkBC,MAAAA;AAAlB,QAA8B,KAAKF,KAAzC;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,OAAZ;;AAEA,QAAID,OAAJ,EAAa;AACX,aAAO,IAAP;AACD;;AACD,QAAIE,KAAJ,EAAW;AACTQ,MAAAA,OAAO,CAACC,GAAR,CAAYT,KAAK,CAACkB,OAAlB;AACA,aAAOlB,KAAK,CAACkB,OAAb;AACD;;AACD,UAAMC,KAAK,GAAG,MAAd;AAEA,wBAAO,QAAC,QAAD,OAAcA;AAAd;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AA3CqD;AAArC1B,Y,CACV2B,W,GAAchC,iB","sourcesContent":["import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@material-ui/core';\nimport LatestOrders from 'src/components/dashboard//LatestOrders';\nimport { FhirClientContext } from '../FhirClientContext';\n\nconst Settings = () => (\n  <>\n    <Helmet>\n      <title>Settings | Material Kit</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        minHeight: '100%',\n        py: 3\n      }}\n    >\n      <Container maxWidth=\"lg\">\n        <LatestOrders />\n      </Container>\n    </Box>\n  </>\n);\n\nexport default class SettingsView extends React.Component {\n    static contextType = FhirClientContext;\n\n    constructor(props) {\n      super(props);\n      this.state = {\n        loading: true,\n        patient: null,\n        error: null\n      };\n    }\n    // this loader is used for\n\n    componentDidMount() {\n      const client = this.context.client;\n      const queryMed = new URLSearchParams();\n      queryMed.set('patient', client.patient.id);\n      console.log(client);\n      this._loader = client.request('MedicationRequest?' + queryMed, {\n        pageLimit: 0, // get all pages\n        flat: true // return flat array of Observation resources\n      }).then(patient => {\n        this.setState({ patient, loading: false, error: null });\n      })\n        .catch(error => {\n          this.setState({ error, loading: false });\n        });\n    }\n\n    render() {\n      const { error, loading, patient } = this.state;\n      console.log(patient);\n\n      if (loading) {\n        return null;\n      }\n      if (error) {\n        console.log(error.message);\n        return error.message;\n      }\n      const entry = 'test';\n\n      return <Settings {...entry} />;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}