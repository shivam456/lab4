{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst withStyles = function (stylesOrCreator) {\n  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return Component => {\n    const {\n        defaultTheme,\n        withTheme = false,\n        name\n      } = options,\n      stylesOptions = _objectWithoutPropertiesLoose(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n    if (process.env.NODE_ENV !== 'production') {\n      if (Component === undefined) {\n        throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n      }\n    }\n    let classNamePrefix = name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!name) {\n        // Provide a better DX outside production.\n        const displayName = getDisplayName(Component);\n        if (displayName !== undefined) {\n          classNamePrefix = displayName;\n        }\n      }\n    }\n    const useStyles = makeStyles(stylesOrCreator, _extends({\n      defaultTheme,\n      Component,\n      name: name || Component.displayName,\n      classNamePrefix\n    }, stylesOptions));\n    const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n      const {\n          innerRef\n        } = props,\n        other = _objectWithoutPropertiesLoose(props, [\"classes\", \"innerRef\"]); // The wrapper receives only user supplied props, which could be a subset of\n      // the actual props Component might receive due to merging with defaultProps.\n      // So copying it here would give us the same result in the wrapper as well.\n\n      const classes = useStyles(_extends({}, Component.defaultProps, props));\n      let theme;\n      let more = other;\n      if (typeof name === 'string' || withTheme) {\n        // name and withTheme are invariant in the outer scope\n        // eslint-disable-next-line react-hooks/rules-of-hooks\n        theme = useTheme() || defaultTheme;\n        if (name) {\n          more = getThemeProps({\n            theme,\n            name,\n            props: other\n          });\n        } // Provide the theme to the wrapped component.\n        // So we don't have to use the `withTheme()` Higher-order Component.\n\n        if (withTheme && !more.theme) {\n          more.theme = theme;\n        }\n      }\n      return /*#__PURE__*/_jsx(Component, _extends({\n        ref: innerRef || ref,\n        classes: classes\n      }, more));\n    });\n    process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n      /**\n       * Override or extend the styles applied to the component.\n       */\n      classes: PropTypes.object,\n      /**\n       * Use that prop to pass a ref to the decorated component.\n       * @deprecated\n       */\n      innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), props => {\n        if (props.innerRef == null) {\n          return null;\n        }\n        return null; // return new Error(\n        //   'Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' +\n        //     'Refs are now automatically forwarded to the inner component.',\n        // );\n      })\n    } : void 0;\n    if (process.env.NODE_ENV !== 'production') {\n      WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n    }\n    hoistNonReactStatics(WithStyles, Component);\n    if (process.env.NODE_ENV !== 'production') {\n      // Exposed for test purposes.\n      WithStyles.Naked = Component;\n      WithStyles.options = options;\n      WithStyles.useStyles = useStyles;\n    }\n    return WithStyles;\n  };\n};\nexport default withStyles;","map":{"version":3,"names":["_extends","_objectWithoutPropertiesLoose","React","PropTypes","hoistNonReactStatics","chainPropTypes","getDisplayName","makeStyles","getThemeProps","useTheme","jsx","_jsx","withStyles","stylesOrCreator","options","Component","defaultTheme","withTheme","name","stylesOptions","process","env","NODE_ENV","undefined","Error","join","classNamePrefix","displayName","useStyles","WithStyles","forwardRef","props","ref","innerRef","other","classes","defaultProps","theme","more","propTypes","object","oneOfType","func","Naked"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/node_modules/@material-ui/styles/withStyles/withStyles.js"],"sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport hoistNonReactStatics from 'hoist-non-react-statics';\nimport { chainPropTypes, getDisplayName } from '@material-ui/utils';\nimport makeStyles from '../makeStyles';\nimport getThemeProps from '../getThemeProps';\nimport useTheme from '../useTheme'; // Link a style sheet with a component.\n// It does not modify the component passed to it;\n// instead, it returns a new component, with a `classes` property.\n\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nconst withStyles = (stylesOrCreator, options = {}) => Component => {\n  const {\n    defaultTheme,\n    withTheme = false,\n    name\n  } = options,\n        stylesOptions = _objectWithoutPropertiesLoose(options, [\"defaultTheme\", \"withTheme\", \"name\"]);\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (Component === undefined) {\n      throw new Error(['You are calling withStyles(styles)(Component) with an undefined component.', 'You may have forgotten to import it.'].join('\\n'));\n    }\n  }\n\n  let classNamePrefix = name;\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (!name) {\n      // Provide a better DX outside production.\n      const displayName = getDisplayName(Component);\n\n      if (displayName !== undefined) {\n        classNamePrefix = displayName;\n      }\n    }\n  }\n\n  const useStyles = makeStyles(stylesOrCreator, _extends({\n    defaultTheme,\n    Component,\n    name: name || Component.displayName,\n    classNamePrefix\n  }, stylesOptions));\n  const WithStyles = /*#__PURE__*/React.forwardRef(function WithStyles(props, ref) {\n    const {\n      innerRef\n    } = props,\n          other = _objectWithoutPropertiesLoose(props, [\"classes\", \"innerRef\"]); // The wrapper receives only user supplied props, which could be a subset of\n    // the actual props Component might receive due to merging with defaultProps.\n    // So copying it here would give us the same result in the wrapper as well.\n\n\n    const classes = useStyles(_extends({}, Component.defaultProps, props));\n    let theme;\n    let more = other;\n\n    if (typeof name === 'string' || withTheme) {\n      // name and withTheme are invariant in the outer scope\n      // eslint-disable-next-line react-hooks/rules-of-hooks\n      theme = useTheme() || defaultTheme;\n\n      if (name) {\n        more = getThemeProps({\n          theme,\n          name,\n          props: other\n        });\n      } // Provide the theme to the wrapped component.\n      // So we don't have to use the `withTheme()` Higher-order Component.\n\n\n      if (withTheme && !more.theme) {\n        more.theme = theme;\n      }\n    }\n\n    return /*#__PURE__*/_jsx(Component, _extends({\n      ref: innerRef || ref,\n      classes: classes\n    }, more));\n  });\n  process.env.NODE_ENV !== \"production\" ? WithStyles.propTypes = {\n    /**\n     * Override or extend the styles applied to the component.\n     */\n    classes: PropTypes.object,\n\n    /**\n     * Use that prop to pass a ref to the decorated component.\n     * @deprecated\n     */\n    innerRef: chainPropTypes(PropTypes.oneOfType([PropTypes.func, PropTypes.object]), props => {\n      if (props.innerRef == null) {\n        return null;\n      }\n\n      return null; // return new Error(\n      //   'Material-UI: The `innerRef` prop is deprecated and will be removed in v5. ' +\n      //     'Refs are now automatically forwarded to the inner component.',\n      // );\n    })\n  } : void 0;\n\n  if (process.env.NODE_ENV !== 'production') {\n    WithStyles.displayName = `WithStyles(${getDisplayName(Component)})`;\n  }\n\n  hoistNonReactStatics(WithStyles, Component);\n\n  if (process.env.NODE_ENV !== 'production') {\n    // Exposed for test purposes.\n    WithStyles.Naked = Component;\n    WithStyles.options = options;\n    WithStyles.useStyles = useStyles;\n  }\n\n  return WithStyles;\n};\n\nexport default withStyles;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}