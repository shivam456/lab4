{"ast":null,"code":"import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableInteractive\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport tooltipClasses, { getTooltipUtilityClass } from './tooltipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = ownerState;\n  const slots = {\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\n    arrow: ['arrow']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\nconst TooltipPopper = styled(Popper, {\n  name: 'MuiTooltip',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.popper, !ownerState.disableInteractive && styles.popperInteractive, ownerState.arrow && styles.popperArrow, !ownerState.open && styles.popperClose];\n  }\n})(_ref => {\n  let {\n    theme,\n    ownerState,\n    open\n  } = _ref;\n  return _extends({\n    zIndex: theme.zIndex.tooltip,\n    pointerEvents: 'none'\n  }, !ownerState.disableInteractive && {\n    pointerEvents: 'auto'\n  }, !open && {\n    pointerEvents: 'none'\n  }, ownerState.arrow && {\n    [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\n      top: 0,\n      marginTop: '-0.71em',\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\n      bottom: 0,\n      marginBottom: '-0.71em',\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: _extends({}, !ownerState.isRtl ? {\n      left: 0,\n      marginLeft: '-0.71em'\n    } : {\n      right: 0,\n      marginRight: '-0.71em'\n    }, {\n      height: '1em',\n      width: '0.71em',\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    }),\n    [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: _extends({}, !ownerState.isRtl ? {\n      right: 0,\n      marginRight: '-0.71em'\n    } : {\n      left: 0,\n      marginLeft: '-0.71em'\n    }, {\n      height: '1em',\n      width: '0.71em',\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    })\n  });\n});\nconst TooltipTooltip = styled('div', {\n  name: 'MuiTooltip',\n  slot: 'Tooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.tooltip, ownerState.touch && styles.touch, ownerState.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(ownerState.placement.split('-')[0])}`]];\n  }\n})(_ref2 => {\n  let {\n    theme,\n    ownerState\n  } = _ref2;\n  return _extends({\n    backgroundColor: alpha(theme.palette.grey[700], 0.92),\n    borderRadius: theme.shape.borderRadius,\n    color: theme.palette.common.white,\n    fontFamily: theme.typography.fontFamily,\n    padding: '4px 8px',\n    fontSize: theme.typography.pxToRem(11),\n    maxWidth: 300,\n    margin: 2,\n    wordWrap: 'break-word',\n    fontWeight: theme.typography.fontWeightMedium\n  }, ownerState.arrow && {\n    position: 'relative',\n    margin: 0\n  }, ownerState.touch && {\n    padding: '8px 16px',\n    fontSize: theme.typography.pxToRem(14),\n    lineHeight: `${round(16 / 14)}em`,\n    fontWeight: theme.typography.fontWeightRegular\n  }, {\n    [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: _extends({\n      transformOrigin: 'right center'\n    }, !ownerState.isRtl ? _extends({\n      marginRight: '14px'\n    }, ownerState.touch && {\n      marginRight: '24px'\n    }) : _extends({\n      marginLeft: '14px'\n    }, ownerState.touch && {\n      marginLeft: '24px'\n    })),\n    [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: _extends({\n      transformOrigin: 'left center'\n    }, !ownerState.isRtl ? _extends({\n      marginLeft: '14px'\n    }, ownerState.touch && {\n      marginLeft: '24px'\n    }) : _extends({\n      marginRight: '14px'\n    }, ownerState.touch && {\n      marginRight: '24px'\n    })),\n    [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: _extends({\n      transformOrigin: 'center bottom',\n      marginBottom: '14px'\n    }, ownerState.touch && {\n      marginBottom: '24px'\n    }),\n    [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: _extends({\n      transformOrigin: 'center top',\n      marginTop: '14px'\n    }, ownerState.touch && {\n      marginTop: '24px'\n    })\n  });\n});\nconst TooltipArrow = styled('span', {\n  name: 'MuiTooltip',\n  slot: 'Arrow',\n  overridesResolver: (props, styles) => styles.arrow\n})(_ref3 => {\n  let {\n    theme\n  } = _ref3;\n  return {\n    overflow: 'hidden',\n    position: 'absolute',\n    width: '1em',\n    height: '0.71em'\n    /* = width / sqrt(2) = (length of the hypotenuse) */,\n\n    boxSizing: 'border-box',\n    color: alpha(theme.palette.grey[700], 0.9),\n    '&::before': {\n      content: '\"\"',\n      margin: 'auto',\n      display: 'block',\n      width: '100%',\n      height: '100%',\n      backgroundColor: 'currentColor',\n      transform: 'rotate(45deg)'\n    }\n  };\n});\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n    handler(event);\n  };\n}\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTooltip'\n  });\n  const {\n      arrow = false,\n      children,\n      describeChild = false,\n      disableFocusListener = false,\n      disableHoverListener = false,\n      disableInteractive: disableInteractiveProp = false,\n      disableTouchListener = false,\n      enterDelay = 100,\n      enterNextDelay = 0,\n      enterTouchDelay = 700,\n      followCursor = false,\n      id: idProp,\n      leaveDelay = 0,\n      leaveTouchDelay = 1500,\n      onClose,\n      onOpen,\n      open: openProp,\n      placement = 'bottom',\n      PopperComponent = Popper,\n      PopperProps = {},\n      title,\n      TransitionComponent = Grow,\n      TransitionProps\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = React.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n    clearTimeout(touchTimer.current);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n    if (onClose && open) {\n      onClose(event);\n    }\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n  const handleBlur = event => {\n    handleBlurVisible(event);\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n    handleFocusVisible(event);\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n  const interactiveWrapperListeners = {};\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n  const popperOptions = React.useMemo(() => {\n    var _PopperProps$popperOp;\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n    return _extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n  const ownerState = _extends({}, props, {\n    isRtl,\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponent,\n    touch: ignoreNonTouchEvents.current\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(TooltipPopper, _extends({\n      as: PopperComponent,\n      className: classes.popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: positionRef.current.y,\n          left: positionRef.current.x,\n          right: positionRef.current.x,\n          bottom: positionRef.current.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true\n    }, interactiveWrapperListeners, PopperProps, {\n      popperOptions: popperOptions,\n      ownerState: ownerState,\n      children: _ref4 => {\n        let {\n          TransitionProps: TransitionPropsInner\n        } = _ref4;\n        return /*#__PURE__*/_jsx(TransitionComponent, _extends({\n          timeout: theme.transitions.duration.shorter\n        }, TransitionPropsInner, TransitionProps, {\n          children: /*#__PURE__*/_jsxs(TooltipTooltip, {\n            className: classes.tooltip,\n            ownerState: ownerState,\n            children: [title, arrow ? /*#__PURE__*/_jsx(TooltipArrow, {\n              className: classes.arrow,\n              ref: setArrowRef,\n              ownerState: ownerState\n            }) : null]\n          })\n        }));\n      }\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes\n/* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n  /**\n   * Do not respond to focus-visible events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   * @default {}\n   */\n  PopperProps: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */.node.isRequired,\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Tooltip;","map":{"version":3,"names":["_objectWithoutPropertiesLoose","_extends","_excluded","React","PropTypes","clsx","elementAcceptingRef","unstable_composeClasses","composeClasses","alpha","styled","useTheme","useThemeProps","capitalize","Grow","Popper","useEventCallback","useForkRef","useId","useIsFocusVisible","useControlled","tooltipClasses","getTooltipUtilityClass","jsx","_jsx","jsxs","_jsxs","round","value","Math","useUtilityClasses","ownerState","classes","disableInteractive","arrow","touch","placement","slots","popper","tooltip","split","TooltipPopper","name","slot","overridesResolver","props","styles","popperInteractive","popperArrow","open","popperClose","theme","zIndex","pointerEvents","top","marginTop","transformOrigin","bottom","marginBottom","isRtl","left","marginLeft","right","marginRight","height","width","TooltipTooltip","tooltipArrow","backgroundColor","palette","grey","borderRadius","shape","color","common","white","fontFamily","typography","padding","fontSize","pxToRem","maxWidth","margin","wordWrap","fontWeight","fontWeightMedium","position","lineHeight","fontWeightRegular","TooltipArrow","overflow","boxSizing","content","display","transform","hystersisOpen","hystersisTimer","testReset","clearTimeout","composeEventHandler","handler","eventHandler","event","Tooltip","forwardRef","inProps","ref","children","describeChild","disableFocusListener","disableHoverListener","disableInteractiveProp","disableTouchListener","enterDelay","enterNextDelay","enterTouchDelay","followCursor","id","idProp","leaveDelay","leaveTouchDelay","onClose","onOpen","openProp","PopperComponent","PopperProps","title","TransitionComponent","TransitionProps","other","direction","childNode","setChildNode","useState","arrowRef","setArrowRef","ignoreNonTouchEvents","useRef","closeTimer","enterTimer","leaveTimer","touchTimer","openState","setOpenState","controlled","default","state","process","env","NODE_ENV","current","isControlled","undefined","useEffect","disabled","tagName","toLowerCase","console","error","join","prevUserSelect","stopTouchInteraction","useCallback","document","body","style","WebkitUserSelect","handleOpen","handleClose","setTimeout","transitions","duration","shortest","handleEnter","type","removeAttribute","handleLeave","isFocusVisibleRef","onBlur","handleBlurVisible","onFocus","handleFocusVisible","focusVisibleRef","setChildIsFocusVisible","handleBlur","handleFocus","currentTarget","detectTouchStart","childrenProps","onTouchStart","handleMouseOver","handleMouseLeave","handleTouchStart","handleTouchEnd","onTouchEnd","handleKeyDown","nativeEvent","key","addEventListener","removeEventListener","handleUseRef","handleFocusRef","handleRef","positionRef","x","y","popperRef","handleMouseMove","onMouseMove","clientX","clientY","update","nameOrDescProps","titleIsString","className","getAttribute","interactiveWrapperListeners","onMouseOver","onMouseLeave","popperOptions","useMemo","_PopperProps$popperOp","tooltipModifiers","enabled","Boolean","options","element","modifiers","concat","Fragment","cloneElement","as","anchorEl","getBoundingClientRect","transition","TransitionPropsInner","timeout","shorter","propTypes","bool","isRequired","object","string","number","func","oneOf","elementType","sx","node"],"sources":["/Users/shivamrustogi/Documents/GitHub/lab4/node_modules/@material-ui/core/Tooltip/Tooltip.js"],"sourcesContent":["import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"arrow\", \"children\", \"classes\", \"describeChild\", \"disableFocusListener\", \"disableHoverListener\", \"disableInteractive\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"followCursor\", \"id\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { elementAcceptingRef } from '@material-ui/utils';\nimport { unstable_composeClasses as composeClasses } from '@material-ui/unstyled';\nimport { alpha } from '@material-ui/system';\nimport styled from '../styles/styled';\nimport useTheme from '../styles/useTheme';\nimport useThemeProps from '../styles/useThemeProps';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useEventCallback from '../utils/useEventCallback';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/useId';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport tooltipClasses, { getTooltipUtilityClass } from './tooltipClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disableInteractive,\n    arrow,\n    touch,\n    placement\n  } = ownerState;\n  const slots = {\n    popper: ['popper', !disableInteractive && 'popperInteractive', arrow && 'popperArrow'],\n    tooltip: ['tooltip', arrow && 'tooltipArrow', touch && 'touch', `tooltipPlacement${capitalize(placement.split('-')[0])}`],\n    arrow: ['arrow']\n  };\n  return composeClasses(slots, getTooltipUtilityClass, classes);\n};\n\nconst TooltipPopper = styled(Popper, {\n  name: 'MuiTooltip',\n  slot: 'Popper',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.popper, !ownerState.disableInteractive && styles.popperInteractive, ownerState.arrow && styles.popperArrow, !ownerState.open && styles.popperClose];\n  }\n})(({\n  theme,\n  ownerState,\n  open\n}) => _extends({\n  zIndex: theme.zIndex.tooltip,\n  pointerEvents: 'none'\n}, !ownerState.disableInteractive && {\n  pointerEvents: 'auto'\n}, !open && {\n  pointerEvents: 'none'\n}, ownerState.arrow && {\n  [`&[data-popper-placement*=\"bottom\"] .${tooltipClasses.arrow}`]: {\n    top: 0,\n    marginTop: '-0.71em',\n    '&::before': {\n      transformOrigin: '0 100%'\n    }\n  },\n  [`&[data-popper-placement*=\"top\"] .${tooltipClasses.arrow}`]: {\n    bottom: 0,\n    marginBottom: '-0.71em',\n    '&::before': {\n      transformOrigin: '100% 0'\n    }\n  },\n  [`&[data-popper-placement*=\"right\"] .${tooltipClasses.arrow}`]: _extends({}, !ownerState.isRtl ? {\n    left: 0,\n    marginLeft: '-0.71em'\n  } : {\n    right: 0,\n    marginRight: '-0.71em'\n  }, {\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '100% 100%'\n    }\n  }),\n  [`&[data-popper-placement*=\"left\"] .${tooltipClasses.arrow}`]: _extends({}, !ownerState.isRtl ? {\n    right: 0,\n    marginRight: '-0.71em'\n  } : {\n    left: 0,\n    marginLeft: '-0.71em'\n  }, {\n    height: '1em',\n    width: '0.71em',\n    '&::before': {\n      transformOrigin: '0 0'\n    }\n  })\n}));\nconst TooltipTooltip = styled('div', {\n  name: 'MuiTooltip',\n  slot: 'Tooltip',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.tooltip, ownerState.touch && styles.touch, ownerState.arrow && styles.tooltipArrow, styles[`tooltipPlacement${capitalize(ownerState.placement.split('-')[0])}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  backgroundColor: alpha(theme.palette.grey[700], 0.92),\n  borderRadius: theme.shape.borderRadius,\n  color: theme.palette.common.white,\n  fontFamily: theme.typography.fontFamily,\n  padding: '4px 8px',\n  fontSize: theme.typography.pxToRem(11),\n  maxWidth: 300,\n  margin: 2,\n  wordWrap: 'break-word',\n  fontWeight: theme.typography.fontWeightMedium\n}, ownerState.arrow && {\n  position: 'relative',\n  margin: 0\n}, ownerState.touch && {\n  padding: '8px 16px',\n  fontSize: theme.typography.pxToRem(14),\n  lineHeight: `${round(16 / 14)}em`,\n  fontWeight: theme.typography.fontWeightRegular\n}, {\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"left\"] &`]: _extends({\n    transformOrigin: 'right center'\n  }, !ownerState.isRtl ? _extends({\n    marginRight: '14px'\n  }, ownerState.touch && {\n    marginRight: '24px'\n  }) : _extends({\n    marginLeft: '14px'\n  }, ownerState.touch && {\n    marginLeft: '24px'\n  })),\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"right\"] &`]: _extends({\n    transformOrigin: 'left center'\n  }, !ownerState.isRtl ? _extends({\n    marginLeft: '14px'\n  }, ownerState.touch && {\n    marginLeft: '24px'\n  }) : _extends({\n    marginRight: '14px'\n  }, ownerState.touch && {\n    marginRight: '24px'\n  })),\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"top\"] &`]: _extends({\n    transformOrigin: 'center bottom',\n    marginBottom: '14px'\n  }, ownerState.touch && {\n    marginBottom: '24px'\n  }),\n  [`.${tooltipClasses.popper}[data-popper-placement*=\"bottom\"] &`]: _extends({\n    transformOrigin: 'center top',\n    marginTop: '14px'\n  }, ownerState.touch && {\n    marginTop: '24px'\n  })\n}));\nconst TooltipArrow = styled('span', {\n  name: 'MuiTooltip',\n  slot: 'Arrow',\n  overridesResolver: (props, styles) => styles.arrow\n})(({\n  theme\n}) => ({\n  overflow: 'hidden',\n  position: 'absolute',\n  width: '1em',\n  height: '0.71em'\n  /* = width / sqrt(2) = (length of the hypotenuse) */\n  ,\n  boxSizing: 'border-box',\n  color: alpha(theme.palette.grey[700], 0.9),\n  '&::before': {\n    content: '\"\"',\n    margin: 'auto',\n    display: 'block',\n    width: '100%',\n    height: '100%',\n    backgroundColor: 'currentColor',\n    transform: 'rotate(45deg)'\n  }\n}));\nlet hystersisOpen = false;\nlet hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\n\nfunction composeEventHandler(handler, eventHandler) {\n  return event => {\n    if (eventHandler) {\n      eventHandler(event);\n    }\n\n    handler(event);\n  };\n}\n\nconst Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiTooltip'\n  });\n\n  const {\n    arrow = false,\n    children,\n    describeChild = false,\n    disableFocusListener = false,\n    disableHoverListener = false,\n    disableInteractive: disableInteractiveProp = false,\n    disableTouchListener = false,\n    enterDelay = 100,\n    enterNextDelay = 0,\n    enterTouchDelay = 700,\n    followCursor = false,\n    id: idProp,\n    leaveDelay = 0,\n    leaveTouchDelay = 1500,\n    onClose,\n    onOpen,\n    open: openProp,\n    placement = 'bottom',\n    PopperComponent = Popper,\n    PopperProps = {},\n    title,\n    TransitionComponent = Grow,\n    TransitionProps\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const theme = useTheme();\n  const isRtl = theme.direction === 'rtl';\n  const [childNode, setChildNode] = React.useState();\n  const [arrowRef, setArrowRef] = React.useState(null);\n  const ignoreNonTouchEvents = React.useRef(false);\n  const disableInteractive = disableInteractiveProp || followCursor;\n  const closeTimer = React.useRef();\n  const enterTimer = React.useRef();\n  const leaveTimer = React.useRef();\n  const touchTimer = React.useRef();\n  const [openState, setOpenState] = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  });\n  let open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const {\n      current: isControlled\n    } = React.useRef(openProp !== undefined); // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  const id = useId(idProp);\n  const prevUserSelect = React.useRef();\n  const stopTouchInteraction = React.useCallback(() => {\n    if (prevUserSelect.current !== undefined) {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      prevUserSelect.current = undefined;\n    }\n\n    clearTimeout(touchTimer.current);\n  }, []);\n  React.useEffect(() => {\n    return () => {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      stopTouchInteraction();\n    };\n  }, [stopTouchInteraction]);\n\n  const handleOpen = event => {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen && !open) {\n      onOpen(event);\n    }\n  };\n\n  const handleClose = useEventCallback(\n  /**\n   * @param {React.SyntheticEvent | Event} event\n   */\n  event => {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(() => {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose && open) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(() => {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  });\n\n  const handleEnter = event => {\n    if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n      return;\n    } // Remove the title ahead of time.\n    // We don't want to wait for the next render commit.\n    // We would risk displaying two tooltips at the same time (native + this one).\n\n\n    if (childNode) {\n      childNode.removeAttribute('title');\n    }\n\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n\n    if (enterDelay || hystersisOpen && enterNextDelay) {\n      enterTimer.current = setTimeout(() => {\n        handleOpen(event);\n      }, hystersisOpen ? enterNextDelay : enterDelay);\n    } else {\n      handleOpen(event);\n    }\n  };\n\n  const handleLeave = event => {\n    clearTimeout(enterTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveDelay);\n  };\n\n  const {\n    isFocusVisibleRef,\n    onBlur: handleBlurVisible,\n    onFocus: handleFocusVisible,\n    ref: focusVisibleRef\n  } = useIsFocusVisible(); // We don't necessarily care about the focusVisible state (which is safe to access via ref anyway).\n  // We just need to re-render the Tooltip if the focus-visible state changes.\n\n  const [, setChildIsFocusVisible] = React.useState(false);\n\n  const handleBlur = event => {\n    handleBlurVisible(event);\n\n    if (isFocusVisibleRef.current === false) {\n      setChildIsFocusVisible(false);\n      handleLeave(event);\n    }\n  };\n\n  const handleFocus = event => {\n    // Workaround for https://github.com/facebook/react/issues/7769\n    // The autoFocus of React might trigger the event before the componentDidMount.\n    // We need to account for this eventuality.\n    if (!childNode) {\n      setChildNode(event.currentTarget);\n    }\n\n    handleFocusVisible(event);\n\n    if (isFocusVisibleRef.current === true) {\n      setChildIsFocusVisible(true);\n      handleEnter(event);\n    }\n  };\n\n  const detectTouchStart = event => {\n    ignoreNonTouchEvents.current = true;\n    const childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  const handleMouseOver = handleEnter;\n  const handleMouseLeave = handleLeave;\n\n  const handleTouchStart = event => {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    stopTouchInteraction();\n    prevUserSelect.current = document.body.style.WebkitUserSelect; // Prevent iOS text selection on long-tap.\n\n    document.body.style.WebkitUserSelect = 'none';\n    touchTimer.current = setTimeout(() => {\n      document.body.style.WebkitUserSelect = prevUserSelect.current;\n      handleEnter(event);\n    }, enterTouchDelay);\n  };\n\n  const handleTouchEnd = event => {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    leaveTimer.current = setTimeout(() => {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  React.useEffect(() => {\n    if (!open) {\n      return undefined;\n    }\n    /**\n     * @param {KeyboardEvent} nativeEvent\n     */\n\n\n    function handleKeyDown(nativeEvent) {\n      // IE11, Edge (prior to using Bink?) use 'Esc'\n      if (nativeEvent.key === 'Escape' || nativeEvent.key === 'Esc') {\n        handleClose(nativeEvent);\n      }\n    }\n\n    document.addEventListener('keydown', handleKeyDown);\n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleClose, open]);\n  const handleUseRef = useForkRef(setChildNode, ref);\n  const handleFocusRef = useForkRef(focusVisibleRef, handleUseRef);\n  const handleRef = useForkRef(children.ref, handleFocusRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  }\n\n  const positionRef = React.useRef({\n    x: 0,\n    y: 0\n  });\n  const popperRef = React.useRef();\n\n  const handleMouseMove = event => {\n    const childrenProps = children.props;\n\n    if (childrenProps.onMouseMove) {\n      childrenProps.onMouseMove(event);\n    }\n\n    positionRef.current = {\n      x: event.clientX,\n      y: event.clientY\n    };\n\n    if (popperRef.current) {\n      popperRef.current.update();\n    }\n  };\n\n  const nameOrDescProps = {};\n  const titleIsString = typeof title === 'string';\n\n  if (describeChild) {\n    nameOrDescProps.title = !open && titleIsString && !disableHoverListener ? title : null;\n    nameOrDescProps['aria-describedby'] = open ? id : null;\n  } else {\n    nameOrDescProps['aria-label'] = titleIsString ? title : null;\n    nameOrDescProps['aria-labelledby'] = open && !titleIsString ? id : null;\n  }\n\n  const childrenProps = _extends({}, nameOrDescProps, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  }, followCursor ? {\n    onMouseMove: handleMouseMove\n  } : {});\n\n  if (process.env.NODE_ENV !== 'production') {\n    childrenProps['data-mui-internal-clone-element'] = true; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n    React.useEffect(() => {\n      if (childNode && !childNode.getAttribute('data-mui-internal-clone-element')) {\n        console.error(['Material-UI: The `children` component of the Tooltip is not forwarding its props correctly.', 'Please make sure that props are spread on the same element that the ref is applied to.'].join('\\n'));\n      }\n    }, [childNode]);\n  }\n\n  const interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = composeEventHandler(handleMouseOver, childrenProps.onMouseOver);\n    childrenProps.onMouseLeave = composeEventHandler(handleMouseLeave, childrenProps.onMouseLeave);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onMouseOver = handleMouseOver;\n      interactiveWrapperListeners.onMouseLeave = handleMouseLeave;\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = composeEventHandler(handleFocus, childrenProps.onFocus);\n    childrenProps.onBlur = composeEventHandler(handleBlur, childrenProps.onBlur);\n\n    if (!disableInteractive) {\n      interactiveWrapperListeners.onFocus = handleFocus;\n      interactiveWrapperListeners.onBlur = handleBlur;\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', `Remove this title prop \\`${children.props.title}\\` or the Tooltip component.`].join('\\n'));\n    }\n  }\n\n  const popperOptions = React.useMemo(() => {\n    var _PopperProps$popperOp;\n\n    let tooltipModifiers = [{\n      name: 'arrow',\n      enabled: Boolean(arrowRef),\n      options: {\n        element: arrowRef,\n        padding: 4\n      }\n    }];\n\n    if ((_PopperProps$popperOp = PopperProps.popperOptions) != null && _PopperProps$popperOp.modifiers) {\n      tooltipModifiers = tooltipModifiers.concat(PopperProps.popperOptions.modifiers);\n    }\n\n    return _extends({}, PopperProps.popperOptions, {\n      modifiers: tooltipModifiers\n    });\n  }, [arrowRef, PopperProps]);\n\n  const ownerState = _extends({}, props, {\n    isRtl,\n    arrow,\n    disableInteractive,\n    placement,\n    PopperComponent,\n    touch: ignoreNonTouchEvents.current\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsxs(React.Fragment, {\n    children: [/*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/_jsx(TooltipPopper, _extends({\n      as: PopperComponent,\n      className: classes.popper,\n      placement: placement,\n      anchorEl: followCursor ? {\n        getBoundingClientRect: () => ({\n          top: positionRef.current.y,\n          left: positionRef.current.x,\n          right: positionRef.current.x,\n          bottom: positionRef.current.y,\n          width: 0,\n          height: 0\n        })\n      } : childNode,\n      popperRef: popperRef,\n      open: childNode ? open : false,\n      id: id,\n      transition: true\n    }, interactiveWrapperListeners, PopperProps, {\n      popperOptions: popperOptions,\n      ownerState: ownerState,\n      children: ({\n        TransitionProps: TransitionPropsInner\n      }) => /*#__PURE__*/_jsx(TransitionComponent, _extends({\n        timeout: theme.transitions.duration.shorter\n      }, TransitionPropsInner, TransitionProps, {\n        children: /*#__PURE__*/_jsxs(TooltipTooltip, {\n          className: classes.tooltip,\n          ownerState: ownerState,\n          children: [title, arrow ? /*#__PURE__*/_jsx(TooltipArrow, {\n            className: classes.arrow,\n            ref: setArrowRef,\n            ownerState: ownerState\n          }) : null]\n        })\n      }))\n    }))]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   * @default false\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Set to `true` if the `title` acts as an accessible description.\n   * By default the `title` acts as an accessible label for the child.\n   * @default false\n   */\n  describeChild: PropTypes.bool,\n\n  /**\n   * Do not respond to focus-visible events.\n   * @default false\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   * @default false\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Makes a tooltip not interactive, i.e. it will close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   * @default false\n   */\n  disableInteractive: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   * @default false\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   * @default 100\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   * @default 0\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   * @default 700\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * If `true`, the tooltip follow the cursor over the wrapped element.\n   * @default false\n   */\n  followCursor: PropTypes.bool,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   * @default 0\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   * @default 1500\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   * @default 'bottom'\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   * @default Popper\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   * @default {}\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   * @default Grow\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the transition element.\n   * By default, the element is based on this [`Transition`](http://reactcommunity.org/react-transition-group/transition) component.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default Tooltip;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}